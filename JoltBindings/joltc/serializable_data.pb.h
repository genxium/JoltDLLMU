// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serializable_data.proto

#ifndef PROTOBUF_INCLUDED_serializable_5fdata_2eproto
#define PROTOBUF_INCLUDED_serializable_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_serializable_5fdata_2eproto JOLTC_EXPORT

// Internal implementation detail -- do not use these members.
struct JOLTC_EXPORT TableStruct_serializable_5fdata_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[83]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void JOLTC_EXPORT AddDescriptors_serializable_5fdata_2eproto();
namespace shared {
class AuthResult;
class AuthResultDefaultTypeInternal;
JOLTC_EXPORT extern AuthResultDefaultTypeInternal _AuthResult_default_instance_;
class AuthTokenUnderlying;
class AuthTokenUnderlyingDefaultTypeInternal;
JOLTC_EXPORT extern AuthTokenUnderlyingDefaultTypeInternal _AuthTokenUnderlying_default_instance_;
class BattleColliderInfo;
class BattleColliderInfoDefaultTypeInternal;
JOLTC_EXPORT extern BattleColliderInfoDefaultTypeInternal _BattleColliderInfo_default_instance_;
class BattleEquipment;
class BattleEquipmentDefaultTypeInternal;
JOLTC_EXPORT extern BattleEquipmentDefaultTypeInternal _BattleEquipment_default_instance_;
class BattleInvitation;
class BattleInvitationDefaultTypeInternal;
JOLTC_EXPORT extern BattleInvitationDefaultTypeInternal _BattleInvitation_default_instance_;
class BattleResult;
class BattleResultDefaultTypeInternal;
JOLTC_EXPORT extern BattleResultDefaultTypeInternal _BattleResult_default_instance_;
class Buff;
class BuffDefaultTypeInternal;
JOLTC_EXPORT extern BuffDefaultTypeInternal _Buff_default_instance_;
class BuffConfig;
class BuffConfigDefaultTypeInternal;
JOLTC_EXPORT extern BuffConfigDefaultTypeInternal _BuffConfig_default_instance_;
class Bullet;
class BulletDefaultTypeInternal;
JOLTC_EXPORT extern BulletDefaultTypeInternal _Bullet_default_instance_;
class BulletConfig;
class BulletConfigDefaultTypeInternal;
JOLTC_EXPORT extern BulletConfigDefaultTypeInternal _BulletConfig_default_instance_;
class BulletConfig_CancelTransitEntry_DoNotUse;
class BulletConfig_CancelTransitEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern BulletConfig_CancelTransitEntry_DoNotUseDefaultTypeInternal _BulletConfig_CancelTransitEntry_DoNotUse_default_instance_;
class BulletImmuneRecord;
class BulletImmuneRecordDefaultTypeInternal;
JOLTC_EXPORT extern BulletImmuneRecordDefaultTypeInternal _BulletImmuneRecord_default_instance_;
class CharacterConfig;
class CharacterConfigDefaultTypeInternal;
JOLTC_EXPORT extern CharacterConfigDefaultTypeInternal _CharacterConfig_default_instance_;
class CharacterConfig_LoopingChStatesEntry_DoNotUse;
class CharacterConfig_LoopingChStatesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern CharacterConfig_LoopingChStatesEntry_DoNotUseDefaultTypeInternal _CharacterConfig_LoopingChStatesEntry_DoNotUse_default_instance_;
class CharacterDownsync;
class CharacterDownsyncDefaultTypeInternal;
JOLTC_EXPORT extern CharacterDownsyncDefaultTypeInternal _CharacterDownsync_default_instance_;
class CharacterSpawnerConfig;
class CharacterSpawnerConfigDefaultTypeInternal;
JOLTC_EXPORT extern CharacterSpawnerConfigDefaultTypeInternal _CharacterSpawnerConfig_default_instance_;
class ConsumableConfig;
class ConsumableConfigDefaultTypeInternal;
JOLTC_EXPORT extern ConsumableConfigDefaultTypeInternal _ConsumableConfig_default_instance_;
class Debuff;
class DebuffDefaultTypeInternal;
JOLTC_EXPORT extern DebuffDefaultTypeInternal _Debuff_default_instance_;
class DebuffConfig;
class DebuffConfigDefaultTypeInternal;
JOLTC_EXPORT extern DebuffConfigDefaultTypeInternal _DebuffConfig_default_instance_;
class FrameLog;
class FrameLogDefaultTypeInternal;
JOLTC_EXPORT extern FrameLogDefaultTypeInternal _FrameLog_default_instance_;
class InjectedCmdConfig;
class InjectedCmdConfigDefaultTypeInternal;
JOLTC_EXPORT extern InjectedCmdConfigDefaultTypeInternal _InjectedCmdConfig_default_instance_;
class InputBufferSnapshot;
class InputBufferSnapshotDefaultTypeInternal;
JOLTC_EXPORT extern InputBufferSnapshotDefaultTypeInternal _InputBufferSnapshot_default_instance_;
class InputFrameDecoded;
class InputFrameDecodedDefaultTypeInternal;
JOLTC_EXPORT extern InputFrameDecodedDefaultTypeInternal _InputFrameDecoded_default_instance_;
class InputFrameDownsync;
class InputFrameDownsyncDefaultTypeInternal;
JOLTC_EXPORT extern InputFrameDownsyncDefaultTypeInternal _InputFrameDownsync_default_instance_;
class InputFrameUpsync;
class InputFrameUpsyncDefaultTypeInternal;
JOLTC_EXPORT extern InputFrameUpsyncDefaultTypeInternal _InputFrameUpsync_default_instance_;
class Inventory;
class InventoryDefaultTypeInternal;
JOLTC_EXPORT extern InventoryDefaultTypeInternal _Inventory_default_instance_;
class InventorySlot;
class InventorySlotDefaultTypeInternal;
JOLTC_EXPORT extern InventorySlotDefaultTypeInternal _InventorySlot_default_instance_;
class LevelStory;
class LevelStoryDefaultTypeInternal;
JOLTC_EXPORT extern LevelStoryDefaultTypeInternal _LevelStory_default_instance_;
class LevelStory_PointsEntry_DoNotUse;
class LevelStory_PointsEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern LevelStory_PointsEntry_DoNotUseDefaultTypeInternal _LevelStory_PointsEntry_DoNotUse_default_instance_;
class PatrolCue;
class PatrolCueDefaultTypeInternal;
JOLTC_EXPORT extern PatrolCueDefaultTypeInternal _PatrolCue_default_instance_;
class PeerUdpAddr;
class PeerUdpAddrDefaultTypeInternal;
JOLTC_EXPORT extern PeerUdpAddrDefaultTypeInternal _PeerUdpAddr_default_instance_;
class Pickable;
class PickableDefaultTypeInternal;
JOLTC_EXPORT extern PickableDefaultTypeInternal _Pickable_default_instance_;
class PickableConfigFromTiled;
class PickableConfigFromTiledDefaultTypeInternal;
JOLTC_EXPORT extern PickableConfigFromTiledDefaultTypeInternal _PickableConfigFromTiled_default_instance_;
class PickableSkillConfig;
class PickableSkillConfigDefaultTypeInternal;
JOLTC_EXPORT extern PickableSkillConfigDefaultTypeInternal _PickableSkillConfig_default_instance_;
class PickableSpawnerConfig;
class PickableSpawnerConfigDefaultTypeInternal;
JOLTC_EXPORT extern PickableSpawnerConfigDefaultTypeInternal _PickableSpawnerConfig_default_instance_;
class PlayerChUnlockProgress;
class PlayerChUnlockProgressDefaultTypeInternal;
JOLTC_EXPORT extern PlayerChUnlockProgressDefaultTypeInternal _PlayerChUnlockProgress_default_instance_;
class PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse;
class PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUseDefaultTypeInternal _PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse_default_instance_;
class PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse;
class PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUseDefaultTypeInternal _PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse_default_instance_;
class PlayerLevelProgress;
class PlayerLevelProgressDefaultTypeInternal;
JOLTC_EXPORT extern PlayerLevelProgressDefaultTypeInternal _PlayerLevelProgress_default_instance_;
class PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse;
class PlayerLevelProgress_RemainingDependenciesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerLevelProgress_RemainingDependenciesEntry_DoNotUseDefaultTypeInternal _PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse_default_instance_;
class PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse;
class PlayerLevelProgress_RemovedDependenciesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerLevelProgress_RemovedDependenciesEntry_DoNotUseDefaultTypeInternal _PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse_default_instance_;
class PlayerMetaInfo;
class PlayerMetaInfoDefaultTypeInternal;
JOLTC_EXPORT extern PlayerMetaInfoDefaultTypeInternal _PlayerMetaInfo_default_instance_;
class PlayerOnlineArenaProgress;
class PlayerOnlineArenaProgressDefaultTypeInternal;
JOLTC_EXPORT extern PlayerOnlineArenaProgressDefaultTypeInternal _PlayerOnlineArenaProgress_default_instance_;
class PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse;
class PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUseDefaultTypeInternal _PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse_default_instance_;
class PlayerRegionProgress;
class PlayerRegionProgressDefaultTypeInternal;
JOLTC_EXPORT extern PlayerRegionProgressDefaultTypeInternal _PlayerRegionProgress_default_instance_;
class PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse;
class PlayerRegionProgress_RemainingDependenciesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerRegionProgress_RemainingDependenciesEntry_DoNotUseDefaultTypeInternal _PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse_default_instance_;
class PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse;
class PlayerRegionProgress_RemovedDependenciesEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerRegionProgress_RemovedDependenciesEntry_DoNotUseDefaultTypeInternal _PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse_default_instance_;
class PlayerSettings;
class PlayerSettingsDefaultTypeInternal;
JOLTC_EXPORT extern PlayerSettingsDefaultTypeInternal _PlayerSettings_default_instance_;
class PlayerStoryProgress;
class PlayerStoryProgressDefaultTypeInternal;
JOLTC_EXPORT extern PlayerStoryProgressDefaultTypeInternal _PlayerStoryProgress_default_instance_;
class PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse;
class PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUseDefaultTypeInternal _PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse_default_instance_;
class PlayerStoryProgress_LevelProgressDictEntry_DoNotUse;
class PlayerStoryProgress_LevelProgressDictEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerStoryProgress_LevelProgressDictEntry_DoNotUseDefaultTypeInternal _PlayerStoryProgress_LevelProgressDictEntry_DoNotUse_default_instance_;
class PlayerStoryProgress_RegionProgressDictEntry_DoNotUse;
class PlayerStoryProgress_RegionProgressDictEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern PlayerStoryProgress_RegionProgressDictEntry_DoNotUseDefaultTypeInternal _PlayerStoryProgress_RegionProgressDictEntry_DoNotUse_default_instance_;
class RenderFrame;
class RenderFrameDefaultTypeInternal;
JOLTC_EXPORT extern RenderFrameDefaultTypeInternal _RenderFrame_default_instance_;
class RpcEndpointHolder;
class RpcEndpointHolderDefaultTypeInternal;
JOLTC_EXPORT extern RpcEndpointHolderDefaultTypeInternal _RpcEndpointHolder_default_instance_;
class SerializableConvexPolygon;
class SerializableConvexPolygonDefaultTypeInternal;
JOLTC_EXPORT extern SerializableConvexPolygonDefaultTypeInternal _SerializableConvexPolygon_default_instance_;
class SerializedCompletelyStaticPatrolCueCollider;
class SerializedCompletelyStaticPatrolCueColliderDefaultTypeInternal;
JOLTC_EXPORT extern SerializedCompletelyStaticPatrolCueColliderDefaultTypeInternal _SerializedCompletelyStaticPatrolCueCollider_default_instance_;
class SerializedCompletelyStaticTrapCollider;
class SerializedCompletelyStaticTrapColliderDefaultTypeInternal;
JOLTC_EXPORT extern SerializedCompletelyStaticTrapColliderDefaultTypeInternal _SerializedCompletelyStaticTrapCollider_default_instance_;
class SerializedCompletelyStaticTriggerCollider;
class SerializedCompletelyStaticTriggerColliderDefaultTypeInternal;
JOLTC_EXPORT extern SerializedCompletelyStaticTriggerColliderDefaultTypeInternal _SerializedCompletelyStaticTriggerCollider_default_instance_;
class SerializedTrapLocalIdToColliderAttrs;
class SerializedTrapLocalIdToColliderAttrsDefaultTypeInternal;
JOLTC_EXPORT extern SerializedTrapLocalIdToColliderAttrsDefaultTypeInternal _SerializedTrapLocalIdToColliderAttrs_default_instance_;
class SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse;
class SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUseDefaultTypeInternal _SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse_default_instance_;
class SerializedTriggerEditorIdToLocalId;
class SerializedTriggerEditorIdToLocalIdDefaultTypeInternal;
JOLTC_EXPORT extern SerializedTriggerEditorIdToLocalIdDefaultTypeInternal _SerializedTriggerEditorIdToLocalId_default_instance_;
class SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse;
class SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUseDefaultTypeInternal _SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse_default_instance_;
class SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse;
class SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUseDefaultTypeInternal _SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse_default_instance_;
class Skill;
class SkillDefaultTypeInternal;
JOLTC_EXPORT extern SkillDefaultTypeInternal _Skill_default_instance_;
class SteamAuthenticateUserTicketPayloadParams;
class SteamAuthenticateUserTicketPayloadParamsDefaultTypeInternal;
JOLTC_EXPORT extern SteamAuthenticateUserTicketPayloadParamsDefaultTypeInternal _SteamAuthenticateUserTicketPayloadParams_default_instance_;
class SteamAuthenticateUserTicketPayloadResp;
class SteamAuthenticateUserTicketPayloadRespDefaultTypeInternal;
JOLTC_EXPORT extern SteamAuthenticateUserTicketPayloadRespDefaultTypeInternal _SteamAuthenticateUserTicketPayloadResp_default_instance_;
class SteamAuthenticateUserTicketResult;
class SteamAuthenticateUserTicketResultDefaultTypeInternal;
JOLTC_EXPORT extern SteamAuthenticateUserTicketResultDefaultTypeInternal _SteamAuthenticateUserTicketResult_default_instance_;
class StoryPoint;
class StoryPointDefaultTypeInternal;
JOLTC_EXPORT extern StoryPointDefaultTypeInternal _StoryPoint_default_instance_;
class StoryPointDialogLine;
class StoryPointDialogLineDefaultTypeInternal;
JOLTC_EXPORT extern StoryPointDialogLineDefaultTypeInternal _StoryPointDialogLine_default_instance_;
class StoryPointStep;
class StoryPointStepDefaultTypeInternal;
JOLTC_EXPORT extern StoryPointStepDefaultTypeInternal _StoryPointStep_default_instance_;
class Trap;
class TrapDefaultTypeInternal;
JOLTC_EXPORT extern TrapDefaultTypeInternal _Trap_default_instance_;
class TrapColliderAttr;
class TrapColliderAttrDefaultTypeInternal;
JOLTC_EXPORT extern TrapColliderAttrDefaultTypeInternal _TrapColliderAttr_default_instance_;
class TrapColliderAttrArray;
class TrapColliderAttrArrayDefaultTypeInternal;
JOLTC_EXPORT extern TrapColliderAttrArrayDefaultTypeInternal _TrapColliderAttrArray_default_instance_;
class TrapConfig;
class TrapConfigDefaultTypeInternal;
JOLTC_EXPORT extern TrapConfigDefaultTypeInternal _TrapConfig_default_instance_;
class TrapConfigFromTiled;
class TrapConfigFromTiledDefaultTypeInternal;
JOLTC_EXPORT extern TrapConfigFromTiledDefaultTypeInternal _TrapConfigFromTiled_default_instance_;
class Trigger;
class TriggerDefaultTypeInternal;
JOLTC_EXPORT extern TriggerDefaultTypeInternal _Trigger_default_instance_;
class TriggerColliderAttr;
class TriggerColliderAttrDefaultTypeInternal;
JOLTC_EXPORT extern TriggerColliderAttrDefaultTypeInternal _TriggerColliderAttr_default_instance_;
class TriggerConfig;
class TriggerConfigDefaultTypeInternal;
JOLTC_EXPORT extern TriggerConfigDefaultTypeInternal _TriggerConfig_default_instance_;
class TriggerConfigFromTiled;
class TriggerConfigFromTiledDefaultTypeInternal;
JOLTC_EXPORT extern TriggerConfigFromTiledDefaultTypeInternal _TriggerConfigFromTiled_default_instance_;
class TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse;
class TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUseDefaultTypeInternal;
JOLTC_EXPORT extern TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUseDefaultTypeInternal _TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse_default_instance_;
class VfxConfig;
class VfxConfigDefaultTypeInternal;
JOLTC_EXPORT extern VfxConfigDefaultTypeInternal _VfxConfig_default_instance_;
class WsReq;
class WsReqDefaultTypeInternal;
JOLTC_EXPORT extern WsReqDefaultTypeInternal _WsReq_default_instance_;
class WsResp;
class WsRespDefaultTypeInternal;
JOLTC_EXPORT extern WsRespDefaultTypeInternal _WsResp_default_instance_;
}  // namespace shared
namespace google {
namespace protobuf {
template<> JOLTC_EXPORT ::shared::AuthResult* Arena::CreateMaybeMessage<::shared::AuthResult>(Arena*);
template<> JOLTC_EXPORT ::shared::AuthTokenUnderlying* Arena::CreateMaybeMessage<::shared::AuthTokenUnderlying>(Arena*);
template<> JOLTC_EXPORT ::shared::BattleColliderInfo* Arena::CreateMaybeMessage<::shared::BattleColliderInfo>(Arena*);
template<> JOLTC_EXPORT ::shared::BattleEquipment* Arena::CreateMaybeMessage<::shared::BattleEquipment>(Arena*);
template<> JOLTC_EXPORT ::shared::BattleInvitation* Arena::CreateMaybeMessage<::shared::BattleInvitation>(Arena*);
template<> JOLTC_EXPORT ::shared::BattleResult* Arena::CreateMaybeMessage<::shared::BattleResult>(Arena*);
template<> JOLTC_EXPORT ::shared::Buff* Arena::CreateMaybeMessage<::shared::Buff>(Arena*);
template<> JOLTC_EXPORT ::shared::BuffConfig* Arena::CreateMaybeMessage<::shared::BuffConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::Bullet* Arena::CreateMaybeMessage<::shared::Bullet>(Arena*);
template<> JOLTC_EXPORT ::shared::BulletConfig* Arena::CreateMaybeMessage<::shared::BulletConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::BulletConfig_CancelTransitEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::BulletConfig_CancelTransitEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::BulletImmuneRecord* Arena::CreateMaybeMessage<::shared::BulletImmuneRecord>(Arena*);
template<> JOLTC_EXPORT ::shared::CharacterConfig* Arena::CreateMaybeMessage<::shared::CharacterConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::CharacterConfig_LoopingChStatesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::CharacterConfig_LoopingChStatesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::CharacterDownsync* Arena::CreateMaybeMessage<::shared::CharacterDownsync>(Arena*);
template<> JOLTC_EXPORT ::shared::CharacterSpawnerConfig* Arena::CreateMaybeMessage<::shared::CharacterSpawnerConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::ConsumableConfig* Arena::CreateMaybeMessage<::shared::ConsumableConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::Debuff* Arena::CreateMaybeMessage<::shared::Debuff>(Arena*);
template<> JOLTC_EXPORT ::shared::DebuffConfig* Arena::CreateMaybeMessage<::shared::DebuffConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::FrameLog* Arena::CreateMaybeMessage<::shared::FrameLog>(Arena*);
template<> JOLTC_EXPORT ::shared::InjectedCmdConfig* Arena::CreateMaybeMessage<::shared::InjectedCmdConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::InputBufferSnapshot* Arena::CreateMaybeMessage<::shared::InputBufferSnapshot>(Arena*);
template<> JOLTC_EXPORT ::shared::InputFrameDecoded* Arena::CreateMaybeMessage<::shared::InputFrameDecoded>(Arena*);
template<> JOLTC_EXPORT ::shared::InputFrameDownsync* Arena::CreateMaybeMessage<::shared::InputFrameDownsync>(Arena*);
template<> JOLTC_EXPORT ::shared::InputFrameUpsync* Arena::CreateMaybeMessage<::shared::InputFrameUpsync>(Arena*);
template<> JOLTC_EXPORT ::shared::Inventory* Arena::CreateMaybeMessage<::shared::Inventory>(Arena*);
template<> JOLTC_EXPORT ::shared::InventorySlot* Arena::CreateMaybeMessage<::shared::InventorySlot>(Arena*);
template<> JOLTC_EXPORT ::shared::LevelStory* Arena::CreateMaybeMessage<::shared::LevelStory>(Arena*);
template<> JOLTC_EXPORT ::shared::LevelStory_PointsEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::LevelStory_PointsEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PatrolCue* Arena::CreateMaybeMessage<::shared::PatrolCue>(Arena*);
template<> JOLTC_EXPORT ::shared::PeerUdpAddr* Arena::CreateMaybeMessage<::shared::PeerUdpAddr>(Arena*);
template<> JOLTC_EXPORT ::shared::Pickable* Arena::CreateMaybeMessage<::shared::Pickable>(Arena*);
template<> JOLTC_EXPORT ::shared::PickableConfigFromTiled* Arena::CreateMaybeMessage<::shared::PickableConfigFromTiled>(Arena*);
template<> JOLTC_EXPORT ::shared::PickableSkillConfig* Arena::CreateMaybeMessage<::shared::PickableSkillConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::PickableSpawnerConfig* Arena::CreateMaybeMessage<::shared::PickableSpawnerConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerChUnlockProgress* Arena::CreateMaybeMessage<::shared::PlayerChUnlockProgress>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerLevelProgress* Arena::CreateMaybeMessage<::shared::PlayerLevelProgress>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerMetaInfo* Arena::CreateMaybeMessage<::shared::PlayerMetaInfo>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerOnlineArenaProgress* Arena::CreateMaybeMessage<::shared::PlayerOnlineArenaProgress>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerRegionProgress* Arena::CreateMaybeMessage<::shared::PlayerRegionProgress>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerSettings* Arena::CreateMaybeMessage<::shared::PlayerSettings>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerStoryProgress* Arena::CreateMaybeMessage<::shared::PlayerStoryProgress>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerStoryProgress_LevelProgressDictEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerStoryProgress_LevelProgressDictEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::PlayerStoryProgress_RegionProgressDictEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::PlayerStoryProgress_RegionProgressDictEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::RenderFrame* Arena::CreateMaybeMessage<::shared::RenderFrame>(Arena*);
template<> JOLTC_EXPORT ::shared::RpcEndpointHolder* Arena::CreateMaybeMessage<::shared::RpcEndpointHolder>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializableConvexPolygon* Arena::CreateMaybeMessage<::shared::SerializableConvexPolygon>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedCompletelyStaticPatrolCueCollider* Arena::CreateMaybeMessage<::shared::SerializedCompletelyStaticPatrolCueCollider>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedCompletelyStaticTrapCollider* Arena::CreateMaybeMessage<::shared::SerializedCompletelyStaticTrapCollider>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedCompletelyStaticTriggerCollider* Arena::CreateMaybeMessage<::shared::SerializedCompletelyStaticTriggerCollider>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedTrapLocalIdToColliderAttrs* Arena::CreateMaybeMessage<::shared::SerializedTrapLocalIdToColliderAttrs>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedTriggerEditorIdToLocalId* Arena::CreateMaybeMessage<::shared::SerializedTriggerEditorIdToLocalId>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse* Arena::CreateMaybeMessage<::shared::SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::Skill* Arena::CreateMaybeMessage<::shared::Skill>(Arena*);
template<> JOLTC_EXPORT ::shared::SteamAuthenticateUserTicketPayloadParams* Arena::CreateMaybeMessage<::shared::SteamAuthenticateUserTicketPayloadParams>(Arena*);
template<> JOLTC_EXPORT ::shared::SteamAuthenticateUserTicketPayloadResp* Arena::CreateMaybeMessage<::shared::SteamAuthenticateUserTicketPayloadResp>(Arena*);
template<> JOLTC_EXPORT ::shared::SteamAuthenticateUserTicketResult* Arena::CreateMaybeMessage<::shared::SteamAuthenticateUserTicketResult>(Arena*);
template<> JOLTC_EXPORT ::shared::StoryPoint* Arena::CreateMaybeMessage<::shared::StoryPoint>(Arena*);
template<> JOLTC_EXPORT ::shared::StoryPointDialogLine* Arena::CreateMaybeMessage<::shared::StoryPointDialogLine>(Arena*);
template<> JOLTC_EXPORT ::shared::StoryPointStep* Arena::CreateMaybeMessage<::shared::StoryPointStep>(Arena*);
template<> JOLTC_EXPORT ::shared::Trap* Arena::CreateMaybeMessage<::shared::Trap>(Arena*);
template<> JOLTC_EXPORT ::shared::TrapColliderAttr* Arena::CreateMaybeMessage<::shared::TrapColliderAttr>(Arena*);
template<> JOLTC_EXPORT ::shared::TrapColliderAttrArray* Arena::CreateMaybeMessage<::shared::TrapColliderAttrArray>(Arena*);
template<> JOLTC_EXPORT ::shared::TrapConfig* Arena::CreateMaybeMessage<::shared::TrapConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::TrapConfigFromTiled* Arena::CreateMaybeMessage<::shared::TrapConfigFromTiled>(Arena*);
template<> JOLTC_EXPORT ::shared::Trigger* Arena::CreateMaybeMessage<::shared::Trigger>(Arena*);
template<> JOLTC_EXPORT ::shared::TriggerColliderAttr* Arena::CreateMaybeMessage<::shared::TriggerColliderAttr>(Arena*);
template<> JOLTC_EXPORT ::shared::TriggerConfig* Arena::CreateMaybeMessage<::shared::TriggerConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::TriggerConfigFromTiled* Arena::CreateMaybeMessage<::shared::TriggerConfigFromTiled>(Arena*);
template<> JOLTC_EXPORT ::shared::TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse* Arena::CreateMaybeMessage<::shared::TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse>(Arena*);
template<> JOLTC_EXPORT ::shared::VfxConfig* Arena::CreateMaybeMessage<::shared::VfxConfig>(Arena*);
template<> JOLTC_EXPORT ::shared::WsReq* Arena::CreateMaybeMessage<::shared::WsReq>(Arena*);
template<> JOLTC_EXPORT ::shared::WsResp* Arena::CreateMaybeMessage<::shared::WsResp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace shared {

enum BoxInterpolationType {
  UsePrev = 0,
  Interpolate = 1,
  BoxInterpolationType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  BoxInterpolationType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool BoxInterpolationType_IsValid(int value);
const BoxInterpolationType BoxInterpolationType_MIN = UsePrev;
const BoxInterpolationType BoxInterpolationType_MAX = Interpolate;
const int BoxInterpolationType_ARRAYSIZE = BoxInterpolationType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* BoxInterpolationType_descriptor();
inline const ::std::string& BoxInterpolationType_Name(BoxInterpolationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BoxInterpolationType_descriptor(), value);
}
inline bool BoxInterpolationType_Parse(
    const ::std::string& name, BoxInterpolationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BoxInterpolationType>(
    BoxInterpolationType_descriptor(), name, value);
}
enum IfaceCat {
  EMPTY = 0,
  FLESH = 1,
  METAL = 2,
  FLUID = 3,
  ROCK = 4,
  GRASS = 5,
  WOOD = 6,
  IfaceCat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  IfaceCat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool IfaceCat_IsValid(int value);
const IfaceCat IfaceCat_MIN = EMPTY;
const IfaceCat IfaceCat_MAX = WOOD;
const int IfaceCat_ARRAYSIZE = IfaceCat_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* IfaceCat_descriptor();
inline const ::std::string& IfaceCat_Name(IfaceCat value) {
  return ::google::protobuf::internal::NameOfEnum(
    IfaceCat_descriptor(), value);
}
inline bool IfaceCat_Parse(
    const ::std::string& name, IfaceCat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IfaceCat>(
    IfaceCat_descriptor(), name, value);
}
enum BulletState {
  StartUp = 0,
  Active = 1,
  Exploding = 2,
  Vanishing = 3,
  BulletState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  BulletState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool BulletState_IsValid(int value);
const BulletState BulletState_MIN = StartUp;
const BulletState BulletState_MAX = Vanishing;
const int BulletState_ARRAYSIZE = BulletState_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* BulletState_descriptor();
inline const ::std::string& BulletState_Name(BulletState value) {
  return ::google::protobuf::internal::NameOfEnum(
    BulletState_descriptor(), value);
}
inline bool BulletState_Parse(
    const ::std::string& name, BulletState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BulletState>(
    BulletState_descriptor(), name, value);
}
enum CharacterState {
  Idle1 = 0,
  Walking = 1,
  TurnAround = 2,
  Atked1 = 3,
  InAirIdle1NoJump = 4,
  InAirIdle1ByJump = 5,
  InAirIdle2ByJump = 6,
  InAirIdle1ByWallJump = 7,
  InAirAtked1 = 8,
  BlownUp1 = 9,
  LayDown1 = 10,
  GetUp1 = 11,
  Dying = 12,
  Dashing = 13,
  Sliding = 14,
  Dimmed = 15,
  TransformingInto = 16,
  BackDashing = 17,
  InAirWalking = 18,
  TransformingIntoFromDeath = 19,
  WalkStopping = 20,
  InAirWalkStopping = 21,
  Parried = 22,
  Awaking = 23,
  GroundDodged = 24,
  BackWalking = 25,
  OnWallIdle1 = 128,
  CrouchIdle1 = 256,
  CrouchAtk1 = 257,
  CrouchWalking = 258,
  CrouchAtked1 = 259,
  Def1 = 260,
  Def1Atked1 = 261,
  Def1Broken = 262,
  Atk1 = 1024,
  Atk2 = 1025,
  Atk3 = 1026,
  Atk4 = 1027,
  Atk5 = 1028,
  Atk6 = 1029,
  Atk7 = 1030,
  Atk7_Charging = 1031,
  Atk7_ChargeRelease = 1032,
  Atk8 = 1033,
  InAirAtk1 = 2048,
  InAirAtk2 = 2049,
  WalkingAtk1 = 2050,
  WalkingAtk4 = 2051,
  InAirAtk6 = 2052,
  OnWallAtk1 = 3072,
  Idle1_Charging = 3073,
  WalkingAtk1_Charging = 3074,
  InAirAtk1_Charging = 3075,
  OnWallAtk1_Charging = 3076,
  CrouchAtk1_Charging = 3077,
  CharacterState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CharacterState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool CharacterState_IsValid(int value);
const CharacterState CharacterState_MIN = Idle1;
const CharacterState CharacterState_MAX = CrouchAtk1_Charging;
const int CharacterState_ARRAYSIZE = CharacterState_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* CharacterState_descriptor();
inline const ::std::string& CharacterState_Name(CharacterState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CharacterState_descriptor(), value);
}
inline bool CharacterState_Parse(
    const ::std::string& name, CharacterState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CharacterState>(
    CharacterState_descriptor(), name, value);
}
enum NpcGoal {
  NIdle = 0,
  NFollowAlly = 1,
  NPatrol = 2,
  NHuntThenIdle = 3,
  NHuntThenPatrol = 4,
  NHuntThenFollowAlly = 5,
  NIdleIfGoHuntingThenPatrol = 6,
  NpcGoal_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  NpcGoal_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool NpcGoal_IsValid(int value);
const NpcGoal NpcGoal_MIN = NIdle;
const NpcGoal NpcGoal_MAX = NIdleIfGoHuntingThenPatrol;
const int NpcGoal_ARRAYSIZE = NpcGoal_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* NpcGoal_descriptor();
inline const ::std::string& NpcGoal_Name(NpcGoal value) {
  return ::google::protobuf::internal::NameOfEnum(
    NpcGoal_descriptor(), value);
}
inline bool NpcGoal_Parse(
    const ::std::string& name, NpcGoal* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NpcGoal>(
    NpcGoal_descriptor(), name, value);
}
enum TrapState {
  TIdle = 0,
  TWalking = 1,
  TAtk1 = 2,
  TAtked1 = 3,
  TDeactivated = 4,
  TrapState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TrapState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool TrapState_IsValid(int value);
const TrapState TrapState_MIN = TIdle;
const TrapState TrapState_MAX = TDeactivated;
const int TrapState_ARRAYSIZE = TrapState_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* TrapState_descriptor();
inline const ::std::string& TrapState_Name(TrapState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrapState_descriptor(), value);
}
inline bool TrapState_Parse(
    const ::std::string& name, TrapState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrapState>(
    TrapState_descriptor(), name, value);
}
enum TriggerState {
  TReady = 0,
  TCoolingDown = 1,
  TriggerState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TriggerState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool TriggerState_IsValid(int value);
const TriggerState TriggerState_MIN = TReady;
const TriggerState TriggerState_MAX = TCoolingDown;
const int TriggerState_ARRAYSIZE = TriggerState_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* TriggerState_descriptor();
inline const ::std::string& TriggerState_Name(TriggerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerState_descriptor(), value);
}
inline bool TriggerState_Parse(
    const ::std::string& name, TriggerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerState>(
    TriggerState_descriptor(), name, value);
}
enum PickableState {
  PIdle = 0,
  PDisappearing = 1,
  PConsumed = 2,
  PickableState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  PickableState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool PickableState_IsValid(int value);
const PickableState PickableState_MIN = PIdle;
const PickableState PickableState_MAX = PConsumed;
const int PickableState_ARRAYSIZE = PickableState_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* PickableState_descriptor();
inline const ::std::string& PickableState_Name(PickableState value) {
  return ::google::protobuf::internal::NameOfEnum(
    PickableState_descriptor(), value);
}
inline bool PickableState_Parse(
    const ::std::string& name, PickableState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PickableState>(
    PickableState_descriptor(), name, value);
}
enum BulletType {
  Undetermined = 0,
  Melee = 1,
  Fireball = 2,
  GroundWave = 3,
  MissileLinear = 4,
  MissileQuadraticBezier = 5,
  BulletType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  BulletType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool BulletType_IsValid(int value);
const BulletType BulletType_MIN = Undetermined;
const BulletType BulletType_MAX = MissileQuadraticBezier;
const int BulletType_ARRAYSIZE = BulletType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* BulletType_descriptor();
inline const ::std::string& BulletType_Name(BulletType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BulletType_descriptor(), value);
}
inline bool BulletType_Parse(
    const ::std::string& name, BulletType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BulletType>(
    BulletType_descriptor(), name, value);
}
enum MultiHitType {
  None = 0,
  FromEmission = 1,
  FromFirstHitActual = 2,
  FromFirstHitAnyway = 3,
  FromPrevHitActual = 4,
  FromPrevHitAnyway = 5,
  FromVisionSeekOrDefault = 6,
  FromPrevHitActualOrActiveTimeUp = 7,
  FromEmissionJustActive = 8,
  MultiHitType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MultiHitType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool MultiHitType_IsValid(int value);
const MultiHitType MultiHitType_MIN = None;
const MultiHitType MultiHitType_MAX = FromEmissionJustActive;
const int MultiHitType_ARRAYSIZE = MultiHitType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* MultiHitType_descriptor();
inline const ::std::string& MultiHitType_Name(MultiHitType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MultiHitType_descriptor(), value);
}
inline bool MultiHitType_Parse(
    const ::std::string& name, MultiHitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MultiHitType>(
    MultiHitType_descriptor(), name, value);
}
enum SkillTriggerType {
  RisingEdge = 0,
  FallingEdge = 1,
  SkillTriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  SkillTriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool SkillTriggerType_IsValid(int value);
const SkillTriggerType SkillTriggerType_MIN = RisingEdge;
const SkillTriggerType SkillTriggerType_MAX = FallingEdge;
const int SkillTriggerType_ARRAYSIZE = SkillTriggerType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* SkillTriggerType_descriptor();
inline const ::std::string& SkillTriggerType_Name(SkillTriggerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillTriggerType_descriptor(), value);
}
inline bool SkillTriggerType_Parse(
    const ::std::string& name, SkillTriggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillTriggerType>(
    SkillTriggerType_descriptor(), name, value);
}
enum VfxDurationType {
  OneOff = 0,
  Repeating = 1,
  VfxDurationType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  VfxDurationType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool VfxDurationType_IsValid(int value);
const VfxDurationType VfxDurationType_MIN = OneOff;
const VfxDurationType VfxDurationType_MAX = Repeating;
const int VfxDurationType_ARRAYSIZE = VfxDurationType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* VfxDurationType_descriptor();
inline const ::std::string& VfxDurationType_Name(VfxDurationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VfxDurationType_descriptor(), value);
}
inline bool VfxDurationType_Parse(
    const ::std::string& name, VfxDurationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VfxDurationType>(
    VfxDurationType_descriptor(), name, value);
}
enum VfxMotionType {
  NoMotion = 0,
  Dropped = 1,
  Tracing = 2,
  VfxMotionType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  VfxMotionType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool VfxMotionType_IsValid(int value);
const VfxMotionType VfxMotionType_MIN = NoMotion;
const VfxMotionType VfxMotionType_MAX = Tracing;
const int VfxMotionType_ARRAYSIZE = VfxMotionType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* VfxMotionType_descriptor();
inline const ::std::string& VfxMotionType_Name(VfxMotionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VfxMotionType_descriptor(), value);
}
inline bool VfxMotionType_Parse(
    const ::std::string& name, VfxMotionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VfxMotionType>(
    VfxMotionType_descriptor(), name, value);
}
enum TriggerType {
  TtNone = 0,
  TtTrivial = 1,
  TtCyclicTimed = 2,
  TtIndiWave = 3,
  TtSyncWave = 4,
  TtMovement = 5,
  TtAttack = 6,
  TriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  TriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool TriggerType_IsValid(int value);
const TriggerType TriggerType_MIN = TtNone;
const TriggerType TriggerType_MAX = TtAttack;
const int TriggerType_ARRAYSIZE = TriggerType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* TriggerType_descriptor();
inline const ::std::string& TriggerType_Name(TriggerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerType_descriptor(), value);
}
inline bool TriggerType_Parse(
    const ::std::string& name, TriggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerType>(
    TriggerType_descriptor(), name, value);
}
enum BuffStockType {
  NoneBf = 0,
  Timed = 1,
  Quota = 2,
  BuffStockType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  BuffStockType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool BuffStockType_IsValid(int value);
const BuffStockType BuffStockType_MIN = NoneBf;
const BuffStockType BuffStockType_MAX = Quota;
const int BuffStockType_ARRAYSIZE = BuffStockType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* BuffStockType_descriptor();
inline const ::std::string& BuffStockType_Name(BuffStockType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuffStockType_descriptor(), value);
}
inline bool BuffStockType_Parse(
    const ::std::string& name, BuffStockType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuffStockType>(
    BuffStockType_descriptor(), name, value);
}
enum DebuffType {
  NoneDbf = 0,
  SpeedDownOnly = 1,
  ColdSpeedDown = 2,
  PositionLockedOnly = 3,
  FrozenPositionLocked = 4,
  DebuffType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  DebuffType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool DebuffType_IsValid(int value);
const DebuffType DebuffType_MIN = NoneDbf;
const DebuffType DebuffType_MAX = FrozenPositionLocked;
const int DebuffType_ARRAYSIZE = DebuffType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* DebuffType_descriptor();
inline const ::std::string& DebuffType_Name(DebuffType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DebuffType_descriptor(), value);
}
inline bool DebuffType_Parse(
    const ::std::string& name, DebuffType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DebuffType>(
    DebuffType_descriptor(), name, value);
}
enum ConsumableType {
  NoneCsmb = 0,
  Refill = 1,
  DbfRcv = 2,
  ConsumableType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ConsumableType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool ConsumableType_IsValid(int value);
const ConsumableType ConsumableType_MIN = NoneCsmb;
const ConsumableType ConsumableType_MAX = DbfRcv;
const int ConsumableType_ARRAYSIZE = ConsumableType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* ConsumableType_descriptor();
inline const ::std::string& ConsumableType_Name(ConsumableType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConsumableType_descriptor(), value);
}
inline bool ConsumableType_Parse(
    const ::std::string& name, ConsumableType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConsumableType>(
    ConsumableType_descriptor(), name, value);
}
enum InventorySlotStockType {
  NoneIv = 0,
  DummyIv = 1,
  PocketIv = 2,
  TimedIv = 3,
  QuotaIv = 4,
  TimedMagazineIv = 5,
  GaugedMagazineIv = 6,
  GaugedTimedMagazineIv = 7,
  InventorySlotStockType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  InventorySlotStockType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool InventorySlotStockType_IsValid(int value);
const InventorySlotStockType InventorySlotStockType_MIN = NoneIv;
const InventorySlotStockType InventorySlotStockType_MAX = GaugedTimedMagazineIv;
const int InventorySlotStockType_ARRAYSIZE = InventorySlotStockType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* InventorySlotStockType_descriptor();
inline const ::std::string& InventorySlotStockType_Name(InventorySlotStockType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InventorySlotStockType_descriptor(), value);
}
inline bool InventorySlotStockType_Parse(
    const ::std::string& name, InventorySlotStockType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InventorySlotStockType>(
    InventorySlotStockType_descriptor(), name, value);
}
enum PlayerStoryModeSelectView {
  NONE = 0,
  REGION = 1,
  LEVEL = 2,
  PlayerStoryModeSelectView_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  PlayerStoryModeSelectView_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool PlayerStoryModeSelectView_IsValid(int value);
const PlayerStoryModeSelectView PlayerStoryModeSelectView_MIN = NONE;
const PlayerStoryModeSelectView PlayerStoryModeSelectView_MAX = LEVEL;
const int PlayerStoryModeSelectView_ARRAYSIZE = PlayerStoryModeSelectView_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* PlayerStoryModeSelectView_descriptor();
inline const ::std::string& PlayerStoryModeSelectView_Name(PlayerStoryModeSelectView value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerStoryModeSelectView_descriptor(), value);
}
inline bool PlayerStoryModeSelectView_Parse(
    const ::std::string& name, PlayerStoryModeSelectView* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerStoryModeSelectView>(
    PlayerStoryModeSelectView_descriptor(), name, value);
}
enum FinishedLvOption {
  BOSS_ONLY = 0,
  STORY_AND_BOSS = 1,
  FinishedLvOption_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  FinishedLvOption_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool FinishedLvOption_IsValid(int value);
const FinishedLvOption FinishedLvOption_MIN = BOSS_ONLY;
const FinishedLvOption FinishedLvOption_MAX = STORY_AND_BOSS;
const int FinishedLvOption_ARRAYSIZE = FinishedLvOption_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* FinishedLvOption_descriptor();
inline const ::std::string& FinishedLvOption_Name(FinishedLvOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    FinishedLvOption_descriptor(), value);
}
inline bool FinishedLvOption_Parse(
    const ::std::string& name, FinishedLvOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FinishedLvOption>(
    FinishedLvOption_descriptor(), name, value);
}
enum PickupType {
  Immediate = 0,
  PutIntoInventory = 1,
  PickupType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  PickupType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
JOLTC_EXPORT bool PickupType_IsValid(int value);
const PickupType PickupType_MIN = Immediate;
const PickupType PickupType_MAX = PutIntoInventory;
const int PickupType_ARRAYSIZE = PickupType_MAX + 1;

JOLTC_EXPORT const ::google::protobuf::EnumDescriptor* PickupType_descriptor();
inline const ::std::string& PickupType_Name(PickupType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PickupType_descriptor(), value);
}
inline bool PickupType_Parse(
    const ::std::string& name, PickupType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PickupType>(
    PickupType_descriptor(), name, value);
}
// ===================================================================

class JOLTC_EXPORT AuthTokenUnderlying :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.AuthTokenUnderlying) */ {
 public:
  AuthTokenUnderlying();
  virtual ~AuthTokenUnderlying();

  AuthTokenUnderlying(const AuthTokenUnderlying& from);

  inline AuthTokenUnderlying& operator=(const AuthTokenUnderlying& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthTokenUnderlying(AuthTokenUnderlying&& from) noexcept
    : AuthTokenUnderlying() {
    *this = ::std::move(from);
  }

  inline AuthTokenUnderlying& operator=(AuthTokenUnderlying&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AuthTokenUnderlying& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthTokenUnderlying* internal_default_instance() {
    return reinterpret_cast<const AuthTokenUnderlying*>(
               &_AuthTokenUnderlying_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AuthTokenUnderlying* other);
  friend void swap(AuthTokenUnderlying& a, AuthTokenUnderlying& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthTokenUnderlying* New() const final {
    return CreateMaybeMessage<AuthTokenUnderlying>(nullptr);
  }

  AuthTokenUnderlying* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthTokenUnderlying>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthTokenUnderlying& from);
  void MergeFrom(const AuthTokenUnderlying& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthTokenUnderlying* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::std::string& player_id() const;
  void set_player_id(const ::std::string& value);
  #if LANG_CXX11
  void set_player_id(::std::string&& value);
  #endif
  void set_player_id(const char* value);
  void set_player_id(const char* value, size_t size);
  ::std::string* mutable_player_id();
  ::std::string* release_player_id();
  void set_allocated_player_id(::std::string* player_id);

  // uint32 from_authsrv_id = 2;
  void clear_from_authsrv_id();
  static const int kFromAuthsrvIdFieldNumber = 2;
  ::google::protobuf::uint32 from_authsrv_id() const;
  void set_from_authsrv_id(::google::protobuf::uint32 value);

  // uint32 to_battlesrv_id = 3;
  void clear_to_battlesrv_id();
  static const int kToBattlesrvIdFieldNumber = 3;
  ::google::protobuf::uint32 to_battlesrv_id() const;
  void set_to_battlesrv_id(::google::protobuf::uint32 value);

  // int64 expires_at = 4;
  void clear_expires_at();
  static const int kExpiresAtFieldNumber = 4;
  ::google::protobuf::int64 expires_at() const;
  void set_expires_at(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:shared.AuthTokenUnderlying)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_id_;
  ::google::protobuf::uint32 from_authsrv_id_;
  ::google::protobuf::uint32 to_battlesrv_id_;
  ::google::protobuf::int64 expires_at_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT AuthResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.AuthResult) */ {
 public:
  AuthResult();
  virtual ~AuthResult();

  AuthResult(const AuthResult& from);

  inline AuthResult& operator=(const AuthResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthResult(AuthResult&& from) noexcept
    : AuthResult() {
    *this = ::std::move(from);
  }

  inline AuthResult& operator=(AuthResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AuthResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthResult* internal_default_instance() {
    return reinterpret_cast<const AuthResult*>(
               &_AuthResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AuthResult* other);
  friend void swap(AuthResult& a, AuthResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthResult* New() const final {
    return CreateMaybeMessage<AuthResult>(nullptr);
  }

  AuthResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthResult& from);
  void MergeFrom(const AuthResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uname = 2;
  void clear_uname();
  static const int kUnameFieldNumber = 2;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // string captcha = 3;
  void clear_captcha();
  static const int kCaptchaFieldNumber = 3;
  const ::std::string& captcha() const;
  void set_captcha(const ::std::string& value);
  #if LANG_CXX11
  void set_captcha(::std::string&& value);
  #endif
  void set_captcha(const char* value);
  void set_captcha(const char* value, size_t size);
  ::std::string* mutable_captcha();
  ::std::string* release_captcha();
  void set_allocated_captcha(::std::string* captcha);

  // string player_id = 5;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 5;
  const ::std::string& player_id() const;
  void set_player_id(const ::std::string& value);
  #if LANG_CXX11
  void set_player_id(::std::string&& value);
  #endif
  void set_player_id(const char* value);
  void set_player_id(const char* value, size_t size);
  ::std::string* mutable_player_id();
  ::std::string* release_player_id();
  void set_allocated_player_id(::std::string* player_id);

  // string new_auth_token = 6;
  void clear_new_auth_token();
  static const int kNewAuthTokenFieldNumber = 6;
  const ::std::string& new_auth_token() const;
  void set_new_auth_token(const ::std::string& value);
  #if LANG_CXX11
  void set_new_auth_token(::std::string&& value);
  #endif
  void set_new_auth_token(const char* value);
  void set_new_auth_token(const char* value, size_t size);
  ::std::string* mutable_new_auth_token();
  ::std::string* release_new_auth_token();
  void set_allocated_new_auth_token(::std::string* new_auth_token);

  // string new_auth_token_sig = 7;
  void clear_new_auth_token_sig();
  static const int kNewAuthTokenSigFieldNumber = 7;
  const ::std::string& new_auth_token_sig() const;
  void set_new_auth_token_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_new_auth_token_sig(::std::string&& value);
  #endif
  void set_new_auth_token_sig(const char* value);
  void set_new_auth_token_sig(const char* value, size_t size);
  ::std::string* mutable_new_auth_token_sig();
  ::std::string* release_new_auth_token_sig();
  void set_allocated_new_auth_token_sig(::std::string* new_auth_token_sig);

  // string battlesrv_hostname_only = 9;
  void clear_battlesrv_hostname_only();
  static const int kBattlesrvHostnameOnlyFieldNumber = 9;
  const ::std::string& battlesrv_hostname_only() const;
  void set_battlesrv_hostname_only(const ::std::string& value);
  #if LANG_CXX11
  void set_battlesrv_hostname_only(::std::string&& value);
  #endif
  void set_battlesrv_hostname_only(const char* value);
  void set_battlesrv_hostname_only(const char* value, size_t size);
  ::std::string* mutable_battlesrv_hostname_only();
  ::std::string* release_battlesrv_hostname_only();
  void set_allocated_battlesrv_hostname_only(::std::string* battlesrv_hostname_only);

  // string battlesrv_endpoint = 10;
  void clear_battlesrv_endpoint();
  static const int kBattlesrvEndpointFieldNumber = 10;
  const ::std::string& battlesrv_endpoint() const;
  void set_battlesrv_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_battlesrv_endpoint(::std::string&& value);
  #endif
  void set_battlesrv_endpoint(const char* value);
  void set_battlesrv_endpoint(const char* value, size_t size);
  ::std::string* mutable_battlesrv_endpoint();
  ::std::string* release_battlesrv_endpoint();
  void set_allocated_battlesrv_endpoint(::std::string* battlesrv_endpoint);

  // int64 expires_at = 4;
  void clear_expires_at();
  static const int kExpiresAtFieldNumber = 4;
  ::google::protobuf::int64 expires_at() const;
  void set_expires_at(::google::protobuf::int64 value);

  // int32 ret_code = 1;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // uint32 captcha_submit_authsrv_id = 8;
  void clear_captcha_submit_authsrv_id();
  static const int kCaptchaSubmitAuthsrvIdFieldNumber = 8;
  ::google::protobuf::uint32 captcha_submit_authsrv_id() const;
  void set_captcha_submit_authsrv_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.AuthResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr captcha_;
  ::google::protobuf::internal::ArenaStringPtr player_id_;
  ::google::protobuf::internal::ArenaStringPtr new_auth_token_;
  ::google::protobuf::internal::ArenaStringPtr new_auth_token_sig_;
  ::google::protobuf::internal::ArenaStringPtr battlesrv_hostname_only_;
  ::google::protobuf::internal::ArenaStringPtr battlesrv_endpoint_;
  ::google::protobuf::int64 expires_at_;
  ::google::protobuf::int32 ret_code_;
  ::google::protobuf::uint32 captcha_submit_authsrv_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SteamAuthenticateUserTicketPayloadParams :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SteamAuthenticateUserTicketPayloadParams) */ {
 public:
  SteamAuthenticateUserTicketPayloadParams();
  virtual ~SteamAuthenticateUserTicketPayloadParams();

  SteamAuthenticateUserTicketPayloadParams(const SteamAuthenticateUserTicketPayloadParams& from);

  inline SteamAuthenticateUserTicketPayloadParams& operator=(const SteamAuthenticateUserTicketPayloadParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SteamAuthenticateUserTicketPayloadParams(SteamAuthenticateUserTicketPayloadParams&& from) noexcept
    : SteamAuthenticateUserTicketPayloadParams() {
    *this = ::std::move(from);
  }

  inline SteamAuthenticateUserTicketPayloadParams& operator=(SteamAuthenticateUserTicketPayloadParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SteamAuthenticateUserTicketPayloadParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SteamAuthenticateUserTicketPayloadParams* internal_default_instance() {
    return reinterpret_cast<const SteamAuthenticateUserTicketPayloadParams*>(
               &_SteamAuthenticateUserTicketPayloadParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SteamAuthenticateUserTicketPayloadParams* other);
  friend void swap(SteamAuthenticateUserTicketPayloadParams& a, SteamAuthenticateUserTicketPayloadParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SteamAuthenticateUserTicketPayloadParams* New() const final {
    return CreateMaybeMessage<SteamAuthenticateUserTicketPayloadParams>(nullptr);
  }

  SteamAuthenticateUserTicketPayloadParams* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SteamAuthenticateUserTicketPayloadParams>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SteamAuthenticateUserTicketPayloadParams& from);
  void MergeFrom(const SteamAuthenticateUserTicketPayloadParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SteamAuthenticateUserTicketPayloadParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // string steamid = 2;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  const ::std::string& steamid() const;
  void set_steamid(const ::std::string& value);
  #if LANG_CXX11
  void set_steamid(::std::string&& value);
  #endif
  void set_steamid(const char* value);
  void set_steamid(const char* value, size_t size);
  ::std::string* mutable_steamid();
  ::std::string* release_steamid();
  void set_allocated_steamid(::std::string* steamid);

  // string ownersteamid = 3;
  void clear_ownersteamid();
  static const int kOwnersteamidFieldNumber = 3;
  const ::std::string& ownersteamid() const;
  void set_ownersteamid(const ::std::string& value);
  #if LANG_CXX11
  void set_ownersteamid(::std::string&& value);
  #endif
  void set_ownersteamid(const char* value);
  void set_ownersteamid(const char* value, size_t size);
  ::std::string* mutable_ownersteamid();
  ::std::string* release_ownersteamid();
  void set_allocated_ownersteamid(::std::string* ownersteamid);

  // bool vacbanned = 4;
  void clear_vacbanned();
  static const int kVacbannedFieldNumber = 4;
  bool vacbanned() const;
  void set_vacbanned(bool value);

  // bool publisherbanned = 5;
  void clear_publisherbanned();
  static const int kPublisherbannedFieldNumber = 5;
  bool publisherbanned() const;
  void set_publisherbanned(bool value);

  // @@protoc_insertion_point(class_scope:shared.SteamAuthenticateUserTicketPayloadParams)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::internal::ArenaStringPtr steamid_;
  ::google::protobuf::internal::ArenaStringPtr ownersteamid_;
  bool vacbanned_;
  bool publisherbanned_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SteamAuthenticateUserTicketPayloadResp :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SteamAuthenticateUserTicketPayloadResp) */ {
 public:
  SteamAuthenticateUserTicketPayloadResp();
  virtual ~SteamAuthenticateUserTicketPayloadResp();

  SteamAuthenticateUserTicketPayloadResp(const SteamAuthenticateUserTicketPayloadResp& from);

  inline SteamAuthenticateUserTicketPayloadResp& operator=(const SteamAuthenticateUserTicketPayloadResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SteamAuthenticateUserTicketPayloadResp(SteamAuthenticateUserTicketPayloadResp&& from) noexcept
    : SteamAuthenticateUserTicketPayloadResp() {
    *this = ::std::move(from);
  }

  inline SteamAuthenticateUserTicketPayloadResp& operator=(SteamAuthenticateUserTicketPayloadResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SteamAuthenticateUserTicketPayloadResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SteamAuthenticateUserTicketPayloadResp* internal_default_instance() {
    return reinterpret_cast<const SteamAuthenticateUserTicketPayloadResp*>(
               &_SteamAuthenticateUserTicketPayloadResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SteamAuthenticateUserTicketPayloadResp* other);
  friend void swap(SteamAuthenticateUserTicketPayloadResp& a, SteamAuthenticateUserTicketPayloadResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SteamAuthenticateUserTicketPayloadResp* New() const final {
    return CreateMaybeMessage<SteamAuthenticateUserTicketPayloadResp>(nullptr);
  }

  SteamAuthenticateUserTicketPayloadResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SteamAuthenticateUserTicketPayloadResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SteamAuthenticateUserTicketPayloadResp& from);
  void MergeFrom(const SteamAuthenticateUserTicketPayloadResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SteamAuthenticateUserTicketPayloadResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.SteamAuthenticateUserTicketPayloadParams params = 1;
  bool has_params() const;
  void clear_params();
  static const int kParamsFieldNumber = 1;
  const ::shared::SteamAuthenticateUserTicketPayloadParams& params() const;
  ::shared::SteamAuthenticateUserTicketPayloadParams* release_params();
  ::shared::SteamAuthenticateUserTicketPayloadParams* mutable_params();
  void set_allocated_params(::shared::SteamAuthenticateUserTicketPayloadParams* params);

  // @@protoc_insertion_point(class_scope:shared.SteamAuthenticateUserTicketPayloadResp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::SteamAuthenticateUserTicketPayloadParams* params_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SteamAuthenticateUserTicketResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SteamAuthenticateUserTicketResult) */ {
 public:
  SteamAuthenticateUserTicketResult();
  virtual ~SteamAuthenticateUserTicketResult();

  SteamAuthenticateUserTicketResult(const SteamAuthenticateUserTicketResult& from);

  inline SteamAuthenticateUserTicketResult& operator=(const SteamAuthenticateUserTicketResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SteamAuthenticateUserTicketResult(SteamAuthenticateUserTicketResult&& from) noexcept
    : SteamAuthenticateUserTicketResult() {
    *this = ::std::move(from);
  }

  inline SteamAuthenticateUserTicketResult& operator=(SteamAuthenticateUserTicketResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SteamAuthenticateUserTicketResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SteamAuthenticateUserTicketResult* internal_default_instance() {
    return reinterpret_cast<const SteamAuthenticateUserTicketResult*>(
               &_SteamAuthenticateUserTicketResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SteamAuthenticateUserTicketResult* other);
  friend void swap(SteamAuthenticateUserTicketResult& a, SteamAuthenticateUserTicketResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SteamAuthenticateUserTicketResult* New() const final {
    return CreateMaybeMessage<SteamAuthenticateUserTicketResult>(nullptr);
  }

  SteamAuthenticateUserTicketResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SteamAuthenticateUserTicketResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SteamAuthenticateUserTicketResult& from);
  void MergeFrom(const SteamAuthenticateUserTicketResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SteamAuthenticateUserTicketResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.SteamAuthenticateUserTicketPayloadResp response = 1;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  const ::shared::SteamAuthenticateUserTicketPayloadResp& response() const;
  ::shared::SteamAuthenticateUserTicketPayloadResp* release_response();
  ::shared::SteamAuthenticateUserTicketPayloadResp* mutable_response();
  void set_allocated_response(::shared::SteamAuthenticateUserTicketPayloadResp* response);

  // @@protoc_insertion_point(class_scope:shared.SteamAuthenticateUserTicketResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::SteamAuthenticateUserTicketPayloadResp* response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT BattleInvitation :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BattleInvitation) */ {
 public:
  BattleInvitation();
  virtual ~BattleInvitation();

  BattleInvitation(const BattleInvitation& from);

  inline BattleInvitation& operator=(const BattleInvitation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BattleInvitation(BattleInvitation&& from) noexcept
    : BattleInvitation() {
    *this = ::std::move(from);
  }

  inline BattleInvitation& operator=(BattleInvitation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BattleInvitation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BattleInvitation* internal_default_instance() {
    return reinterpret_cast<const BattleInvitation*>(
               &_BattleInvitation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(BattleInvitation* other);
  friend void swap(BattleInvitation& a, BattleInvitation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BattleInvitation* New() const final {
    return CreateMaybeMessage<BattleInvitation>(nullptr);
  }

  BattleInvitation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BattleInvitation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BattleInvitation& from);
  void MergeFrom(const BattleInvitation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleInvitation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_player_id = 1;
  void clear_from_player_id();
  static const int kFromPlayerIdFieldNumber = 1;
  const ::std::string& from_player_id() const;
  void set_from_player_id(const ::std::string& value);
  #if LANG_CXX11
  void set_from_player_id(::std::string&& value);
  #endif
  void set_from_player_id(const char* value);
  void set_from_player_id(const char* value, size_t size);
  ::std::string* mutable_from_player_id();
  ::std::string* release_from_player_id();
  void set_allocated_from_player_id(::std::string* from_player_id);

  // string passcode = 5;
  void clear_passcode();
  static const int kPasscodeFieldNumber = 5;
  const ::std::string& passcode() const;
  void set_passcode(const ::std::string& value);
  #if LANG_CXX11
  void set_passcode(::std::string&& value);
  #endif
  void set_passcode(const char* value);
  void set_passcode(const char* value, size_t size);
  ::std::string* mutable_passcode();
  ::std::string* release_passcode();
  void set_allocated_passcode(::std::string* passcode);

  // uint32 to_battlesrv_id = 2;
  void clear_to_battlesrv_id();
  static const int kToBattlesrvIdFieldNumber = 2;
  ::google::protobuf::uint32 to_battlesrv_id() const;
  void set_to_battlesrv_id(::google::protobuf::uint32 value);

  // int32 bound_room_id = 3;
  void clear_bound_room_id();
  static const int kBoundRoomIdFieldNumber = 3;
  ::google::protobuf::int32 bound_room_id() const;
  void set_bound_room_id(::google::protobuf::int32 value);

  // int64 expires_at = 4;
  void clear_expires_at();
  static const int kExpiresAtFieldNumber = 4;
  ::google::protobuf::int64 expires_at() const;
  void set_expires_at(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:shared.BattleInvitation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_player_id_;
  ::google::protobuf::internal::ArenaStringPtr passcode_;
  ::google::protobuf::uint32 to_battlesrv_id_;
  ::google::protobuf::int32 bound_room_id_;
  ::google::protobuf::int64 expires_at_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class CharacterConfig_LoopingChStatesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CharacterConfig_LoopingChStatesEntry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<CharacterConfig_LoopingChStatesEntry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  CharacterConfig_LoopingChStatesEntry_DoNotUse();
  CharacterConfig_LoopingChStatesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CharacterConfig_LoopingChStatesEntry_DoNotUse& other);
  static const CharacterConfig_LoopingChStatesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CharacterConfig_LoopingChStatesEntry_DoNotUse*>(&_CharacterConfig_LoopingChStatesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT CharacterConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.CharacterConfig) */ {
 public:
  CharacterConfig();
  virtual ~CharacterConfig();

  CharacterConfig(const CharacterConfig& from);

  inline CharacterConfig& operator=(const CharacterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CharacterConfig(CharacterConfig&& from) noexcept
    : CharacterConfig() {
    *this = ::std::move(from);
  }

  inline CharacterConfig& operator=(CharacterConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CharacterConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterConfig* internal_default_instance() {
    return reinterpret_cast<const CharacterConfig*>(
               &_CharacterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CharacterConfig* other);
  friend void swap(CharacterConfig& a, CharacterConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CharacterConfig* New() const final {
    return CreateMaybeMessage<CharacterConfig>(nullptr);
  }

  CharacterConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CharacterConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CharacterConfig& from);
  void MergeFrom(const CharacterConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .shared.InventorySlot init_inventory_slots = 101;
  int init_inventory_slots_size() const;
  void clear_init_inventory_slots();
  static const int kInitInventorySlotsFieldNumber = 101;
  ::shared::InventorySlot* mutable_init_inventory_slots(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >*
      mutable_init_inventory_slots();
  const ::shared::InventorySlot& init_inventory_slots(int index) const;
  ::shared::InventorySlot* add_init_inventory_slots();
  const ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >&
      init_inventory_slots() const;

  // repeated .shared.CharacterState btn_b_auto_unhold_ch_states = 102;
  int btn_b_auto_unhold_ch_states_size() const;
  void clear_btn_b_auto_unhold_ch_states();
  static const int kBtnBAutoUnholdChStatesFieldNumber = 102;
  ::shared::CharacterState btn_b_auto_unhold_ch_states(int index) const;
  void set_btn_b_auto_unhold_ch_states(int index, ::shared::CharacterState value);
  void add_btn_b_auto_unhold_ch_states(::shared::CharacterState value);
  const ::google::protobuf::RepeatedField<int>& btn_b_auto_unhold_ch_states() const;
  ::google::protobuf::RepeatedField<int>* mutable_btn_b_auto_unhold_ch_states();

  // map<int32, int32> looping_ch_states = 103;
  int looping_ch_states_size() const;
  void clear_looping_ch_states();
  static const int kLoopingChStatesFieldNumber = 103;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      looping_ch_states() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_looping_ch_states();

  // string species_name = 2;
  void clear_species_name();
  static const int kSpeciesNameFieldNumber = 2;
  const ::std::string& species_name() const;
  void set_species_name(const ::std::string& value);
  #if LANG_CXX11
  void set_species_name(::std::string&& value);
  #endif
  void set_species_name(const char* value);
  void set_species_name(const char* value, size_t size);
  ::std::string* mutable_species_name();
  ::std::string* release_species_name();
  void set_allocated_species_name(::std::string* species_name);

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // int32 hp = 3;
  void clear_hp();
  static const int kHpFieldNumber = 3;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // int32 mp = 4;
  void clear_mp();
  static const int kMpFieldNumber = 4;
  ::google::protobuf::int32 mp() const;
  void set_mp(::google::protobuf::int32 value);

  // int32 lay_down_frames = 5;
  void clear_lay_down_frames();
  static const int kLayDownFramesFieldNumber = 5;
  ::google::protobuf::int32 lay_down_frames() const;
  void set_lay_down_frames(::google::protobuf::int32 value);

  // int32 lay_down_frames_to_recover = 6;
  void clear_lay_down_frames_to_recover();
  static const int kLayDownFramesToRecoverFieldNumber = 6;
  ::google::protobuf::int32 lay_down_frames_to_recover() const;
  void set_lay_down_frames_to_recover(::google::protobuf::int32 value);

  // int32 get_up_invinsible_frames = 7;
  void clear_get_up_invinsible_frames();
  static const int kGetUpInvinsibleFramesFieldNumber = 7;
  ::google::protobuf::int32 get_up_invinsible_frames() const;
  void set_get_up_invinsible_frames(::google::protobuf::int32 value);

  // int32 get_up_frames_to_recover = 8;
  void clear_get_up_frames_to_recover();
  static const int kGetUpFramesToRecoverFieldNumber = 8;
  ::google::protobuf::int32 get_up_frames_to_recover() const;
  void set_get_up_frames_to_recover(::google::protobuf::int32 value);

  // float speed = 9;
  void clear_speed();
  static const int kSpeedFieldNumber = 9;
  float speed() const;
  void set_speed(float value);

  // int32 mp_regen_per_interval = 10;
  void clear_mp_regen_per_interval();
  static const int kMpRegenPerIntervalFieldNumber = 10;
  ::google::protobuf::int32 mp_regen_per_interval() const;
  void set_mp_regen_per_interval(::google::protobuf::int32 value);

  // int32 mp_regen_interval = 11;
  void clear_mp_regen_interval();
  static const int kMpRegenIntervalFieldNumber = 11;
  ::google::protobuf::int32 mp_regen_interval() const;
  void set_mp_regen_interval(::google::protobuf::int32 value);

  // float jumping_init_vel_y = 12;
  void clear_jumping_init_vel_y();
  static const int kJumpingInitVelYFieldNumber = 12;
  float jumping_init_vel_y() const;
  void set_jumping_init_vel_y(float value);

  // int32 inertia_frames_to_recover = 13;
  void clear_inertia_frames_to_recover();
  static const int kInertiaFramesToRecoverFieldNumber = 13;
  ::google::protobuf::int32 inertia_frames_to_recover() const;
  void set_inertia_frames_to_recover(::google::protobuf::int32 value);

  // bool dashing_enabled = 14;
  void clear_dashing_enabled();
  static const int kDashingEnabledFieldNumber = 14;
  bool dashing_enabled() const;
  void set_dashing_enabled(bool value);

  // bool sliding_enabled = 15;
  void clear_sliding_enabled();
  static const int kSlidingEnabledFieldNumber = 15;
  bool sliding_enabled() const;
  void set_sliding_enabled(bool value);

  // bool on_wall_enabled = 16;
  void clear_on_wall_enabled();
  static const int kOnWallEnabledFieldNumber = 16;
  bool on_wall_enabled() const;
  void set_on_wall_enabled(bool value);

  // bool crouching_enabled = 17;
  void clear_crouching_enabled();
  static const int kCrouchingEnabledFieldNumber = 17;
  bool crouching_enabled() const;
  void set_crouching_enabled(bool value);

  // int32 wall_jumping_frames_to_recover = 19;
  void clear_wall_jumping_frames_to_recover();
  static const int kWallJumpingFramesToRecoverFieldNumber = 19;
  ::google::protobuf::int32 wall_jumping_frames_to_recover() const;
  void set_wall_jumping_frames_to_recover(::google::protobuf::int32 value);

  // float wall_jumping_init_vel_x = 20;
  void clear_wall_jumping_init_vel_x();
  static const int kWallJumpingInitVelXFieldNumber = 20;
  float wall_jumping_init_vel_x() const;
  void set_wall_jumping_init_vel_x(float value);

  // float wall_jumping_init_vel_y = 21;
  void clear_wall_jumping_init_vel_y();
  static const int kWallJumpingInitVelYFieldNumber = 21;
  float wall_jumping_init_vel_y() const;
  void set_wall_jumping_init_vel_y(float value);

  // float wall_sliding_vel_y = 22;
  void clear_wall_sliding_vel_y();
  static const int kWallSlidingVelYFieldNumber = 22;
  float wall_sliding_vel_y() const;
  void set_wall_sliding_vel_y(float value);

  // float min_falling_vel_y = 23;
  void clear_min_falling_vel_y();
  static const int kMinFallingVelYFieldNumber = 23;
  float min_falling_vel_y() const;
  void set_min_falling_vel_y(float value);

  // float max_ascending_vel_y = 24;
  void clear_max_ascending_vel_y();
  static const int kMaxAscendingVelYFieldNumber = 24;
  float max_ascending_vel_y() const;
  void set_max_ascending_vel_y(float value);

  // int32 ground_dodge_enabled_by_rdf_cnt_from_beginning = 27;
  void clear_ground_dodge_enabled_by_rdf_cnt_from_beginning();
  static const int kGroundDodgeEnabledByRdfCntFromBeginningFieldNumber = 27;
  ::google::protobuf::int32 ground_dodge_enabled_by_rdf_cnt_from_beginning() const;
  void set_ground_dodge_enabled_by_rdf_cnt_from_beginning(::google::protobuf::int32 value);

  // int32 ground_dodged_frames_to_recover = 28;
  void clear_ground_dodged_frames_to_recover();
  static const int kGroundDodgedFramesToRecoverFieldNumber = 28;
  ::google::protobuf::int32 ground_dodged_frames_to_recover() const;
  void set_ground_dodged_frames_to_recover(::google::protobuf::int32 value);

  // bool crouching_atk_enabled = 18;
  void clear_crouching_atk_enabled();
  static const int kCrouchingAtkEnabledFieldNumber = 18;
  bool crouching_atk_enabled() const;
  void set_crouching_atk_enabled(bool value);

  // bool use_inventory_btn_b = 25;
  void clear_use_inventory_btn_b();
  static const int kUseInventoryBtnBFieldNumber = 25;
  bool use_inventory_btn_b() const;
  void set_use_inventory_btn_b(bool value);

  // bool ground_dodge_enabled_by_iv_slot_c_in_block_stun = 26;
  void clear_ground_dodge_enabled_by_iv_slot_c_in_block_stun();
  static const int kGroundDodgeEnabledByIvSlotCInBlockStunFieldNumber = 26;
  bool ground_dodge_enabled_by_iv_slot_c_in_block_stun() const;
  void set_ground_dodge_enabled_by_iv_slot_c_in_block_stun(bool value);

  // bool anti_gravity_when_idle = 45;
  void clear_anti_gravity_when_idle();
  static const int kAntiGravityWhenIdleFieldNumber = 45;
  bool anti_gravity_when_idle() const;
  void set_anti_gravity_when_idle(bool value);

  // int32 ground_dodged_frames_invinsible = 29;
  void clear_ground_dodged_frames_invinsible();
  static const int kGroundDodgedFramesInvinsibleFieldNumber = 29;
  ::google::protobuf::int32 ground_dodged_frames_invinsible() const;
  void set_ground_dodged_frames_invinsible(::google::protobuf::int32 value);

  // float ground_dodged_speed = 30;
  void clear_ground_dodged_speed();
  static const int kGroundDodgedSpeedFieldNumber = 30;
  float ground_dodged_speed() const;
  void set_ground_dodged_speed(float value);

  // float vision_offset_x = 31;
  void clear_vision_offset_x();
  static const int kVisionOffsetXFieldNumber = 31;
  float vision_offset_x() const;
  void set_vision_offset_x(float value);

  // float vision_offset_y = 32;
  void clear_vision_offset_y();
  static const int kVisionOffsetYFieldNumber = 32;
  float vision_offset_y() const;
  void set_vision_offset_y(float value);

  // float vision_size_x = 33;
  void clear_vision_size_x();
  static const int kVisionSizeXFieldNumber = 33;
  float vision_size_x() const;
  void set_vision_size_x(float value);

  // float vision_size_y = 34;
  void clear_vision_size_y();
  static const int kVisionSizeYFieldNumber = 34;
  float vision_size_y() const;
  void set_vision_size_y(float value);

  // float capsule_radius = 35;
  void clear_capsule_radius();
  static const int kCapsuleRadiusFieldNumber = 35;
  float capsule_radius() const;
  void set_capsule_radius(float value);

  // float capsule_half_height = 36;
  void clear_capsule_half_height();
  static const int kCapsuleHalfHeightFieldNumber = 36;
  float capsule_half_height() const;
  void set_capsule_half_height(float value);

  // float shrinked_scale_radius = 37;
  void clear_shrinked_scale_radius();
  static const int kShrinkedScaleRadiusFieldNumber = 37;
  float shrinked_scale_radius() const;
  void set_shrinked_scale_radius(float value);

  // float shrinked_scale_height = 38;
  void clear_shrinked_scale_height();
  static const int kShrinkedScaleHeightFieldNumber = 38;
  float shrinked_scale_height() const;
  void set_shrinked_scale_height(float value);

  // float lay_down_scale_radius = 39;
  void clear_lay_down_scale_radius();
  static const int kLayDownScaleRadiusFieldNumber = 39;
  float lay_down_scale_radius() const;
  void set_lay_down_scale_radius(float value);

  // float lay_down_scale_height = 40;
  void clear_lay_down_scale_height();
  static const int kLayDownScaleHeightFieldNumber = 40;
  float lay_down_scale_height() const;
  void set_lay_down_scale_height(float value);

  // float dying_scale_radius = 41;
  void clear_dying_scale_radius();
  static const int kDyingScaleRadiusFieldNumber = 41;
  float dying_scale_radius() const;
  void set_dying_scale_radius(float value);

  // float dying_scale_height = 42;
  void clear_dying_scale_height();
  static const int kDyingScaleHeightFieldNumber = 42;
  float dying_scale_height() const;
  void set_dying_scale_height(float value);

  // float dimmed_scale_radius = 43;
  void clear_dimmed_scale_radius();
  static const int kDimmedScaleRadiusFieldNumber = 43;
  float dimmed_scale_radius() const;
  void set_dimmed_scale_radius(float value);

  // float dimmed_scale_height = 44;
  void clear_dimmed_scale_height();
  static const int kDimmedScaleHeightFieldNumber = 44;
  float dimmed_scale_height() const;
  void set_dimmed_scale_height(float value);

  // int32 anti_gravity_frames_lingering = 46;
  void clear_anti_gravity_frames_lingering();
  static const int kAntiGravityFramesLingeringFieldNumber = 46;
  ::google::protobuf::int32 anti_gravity_frames_lingering() const;
  void set_anti_gravity_frames_lingering(::google::protobuf::int32 value);

  // bool omit_gravity = 47;
  void clear_omit_gravity();
  static const int kOmitGravityFieldNumber = 47;
  bool omit_gravity() const;
  void set_omit_gravity(bool value);

  // bool omit_soft_pushback = 48;
  void clear_omit_soft_pushback();
  static const int kOmitSoftPushbackFieldNumber = 48;
  bool omit_soft_pushback() const;
  void set_omit_soft_pushback(bool value);

  // bool repel_soft_pushback = 49;
  void clear_repel_soft_pushback();
  static const int kRepelSoftPushbackFieldNumber = 49;
  bool repel_soft_pushback() const;
  void set_repel_soft_pushback(bool value);

  // bool has_turn_around_anim = 51;
  void clear_has_turn_around_anim();
  static const int kHasTurnAroundAnimFieldNumber = 51;
  bool has_turn_around_anim() const;
  void set_has_turn_around_anim(bool value);

  // uint64 collision_type_mask = 50;
  void clear_collision_type_mask();
  static const int kCollisionTypeMaskFieldNumber = 50;
  ::google::protobuf::uint64 collision_type_mask() const;
  void set_collision_type_mask(::google::protobuf::uint64 value);

  // bool has_dimmed_anim = 52;
  void clear_has_dimmed_anim();
  static const int kHasDimmedAnimFieldNumber = 52;
  bool has_dimmed_anim() const;
  void set_has_dimmed_anim(bool value);

  // bool has_awaking_anim = 53;
  void clear_has_awaking_anim();
  static const int kHasAwakingAnimFieldNumber = 53;
  bool has_awaking_anim() const;
  void set_has_awaking_anim(bool value);

  // bool has_walk_stopping_anim = 54;
  void clear_has_walk_stopping_anim();
  static const int kHasWalkStoppingAnimFieldNumber = 54;
  bool has_walk_stopping_anim() const;
  void set_has_walk_stopping_anim(bool value);

  // bool has_in_air_walk_stopping_anim = 55;
  void clear_has_in_air_walk_stopping_anim();
  static const int kHasInAirWalkStoppingAnimFieldNumber = 55;
  bool has_in_air_walk_stopping_anim() const;
  void set_has_in_air_walk_stopping_anim(bool value);

  // int32 hardness = 57;
  void clear_hardness();
  static const int kHardnessFieldNumber = 57;
  ::google::protobuf::int32 hardness() const;
  void set_hardness(::google::protobuf::int32 value);

  // int32 proactive_jump_startup_frames = 58;
  void clear_proactive_jump_startup_frames();
  static const int kProactiveJumpStartupFramesFieldNumber = 58;
  ::google::protobuf::int32 proactive_jump_startup_frames() const;
  void set_proactive_jump_startup_frames(::google::protobuf::int32 value);

  // uint32 default_air_jump_quota = 59;
  void clear_default_air_jump_quota();
  static const int kDefaultAirJumpQuotaFieldNumber = 59;
  ::google::protobuf::uint32 default_air_jump_quota() const;
  void set_default_air_jump_quota(::google::protobuf::uint32 value);

  // uint32 default_air_dash_quota = 60;
  void clear_default_air_dash_quota();
  static const int kDefaultAirDashQuotaFieldNumber = 60;
  ::google::protobuf::uint32 default_air_dash_quota() const;
  void set_default_air_dash_quota(::google::protobuf::uint32 value);

  // uint32 default_def1Quota = 61;
  void clear_default_def1quota();
  static const int kDefaultDef1QuotaFieldNumber = 61;
  ::google::protobuf::uint32 default_def1quota() const;
  void set_default_def1quota(::google::protobuf::uint32 value);

  // int32 air_jump_vfx_species_id = 63;
  void clear_air_jump_vfx_species_id();
  static const int kAirJumpVfxSpeciesIdFieldNumber = 63;
  ::google::protobuf::int32 air_jump_vfx_species_id() const;
  void set_air_jump_vfx_species_id(::google::protobuf::int32 value);

  // bool lay_down_to_recover_from_dimmed = 56;
  void clear_lay_down_to_recover_from_dimmed();
  static const int kLayDownToRecoverFromDimmedFieldNumber = 56;
  bool lay_down_to_recover_from_dimmed() const;
  void set_lay_down_to_recover_from_dimmed(bool value);

  // bool isolated_air_jump_and_dash_quota = 62;
  void clear_isolated_air_jump_and_dash_quota();
  static const int kIsolatedAirJumpAndDashQuotaFieldNumber = 62;
  bool isolated_air_jump_and_dash_quota() const;
  void set_isolated_air_jump_and_dash_quota(bool value);

  // bool jump_holding_to_fly = 67;
  void clear_jump_holding_to_fly();
  static const int kJumpHoldingToFlyFieldNumber = 67;
  bool jump_holding_to_fly() const;
  void set_jump_holding_to_fly(bool value);

  // bool has_def1 = 68;
  void clear_has_def1();
  static const int kHasDef1FieldNumber = 68;
  bool has_def1() const;
  void set_has_def1(bool value);

  // float slip_jump_thres_hold_below_top_face = 64;
  void clear_slip_jump_thres_hold_below_top_face();
  static const int kSlipJumpThresHoldBelowTopFaceFieldNumber = 64;
  float slip_jump_thres_hold_below_top_face() const;
  void set_slip_jump_thres_hold_below_top_face(float value);

  // float slip_jump_character_drop_y = 65;
  void clear_slip_jump_character_drop_y();
  static const int kSlipJumpCharacterDropYFieldNumber = 65;
  float slip_jump_character_drop_y() const;
  void set_slip_jump_character_drop_y(float value);

  // uint32 transform_into_species_id_upon_death = 66;
  void clear_transform_into_species_id_upon_death();
  static const int kTransformIntoSpeciesIdUponDeathFieldNumber = 66;
  ::google::protobuf::uint32 transform_into_species_id_upon_death() const;
  void set_transform_into_species_id_upon_death(::google::protobuf::uint32 value);

  // int32 default_def1Broken_frames_to_recover = 70;
  void clear_default_def1broken_frames_to_recover();
  static const int kDefaultDef1BrokenFramesToRecoverFieldNumber = 70;
  ::google::protobuf::int32 default_def1broken_frames_to_recover() const;
  void set_default_def1broken_frames_to_recover(::google::protobuf::int32 value);

  // int32 def1_active_vfx_species_id = 71;
  void clear_def1_active_vfx_species_id();
  static const int kDef1ActiveVfxSpeciesIdFieldNumber = 71;
  ::google::protobuf::int32 def1_active_vfx_species_id() const;
  void set_def1_active_vfx_species_id(::google::protobuf::int32 value);

  // int32 def1_atked_vfx_species_id = 72;
  void clear_def1_atked_vfx_species_id();
  static const int kDef1AtkedVfxSpeciesIdFieldNumber = 72;
  ::google::protobuf::int32 def1_atked_vfx_species_id() const;
  void set_def1_atked_vfx_species_id(::google::protobuf::int32 value);

  // int32 def1_broken_vfx_species_id = 73;
  void clear_def1_broken_vfx_species_id();
  static const int kDef1BrokenVfxSpeciesIdFieldNumber = 73;
  ::google::protobuf::int32 def1_broken_vfx_species_id() const;
  void set_def1_broken_vfx_species_id(::google::protobuf::int32 value);

  // int32 def1_startup_frames = 74;
  void clear_def1_startup_frames();
  static const int kDef1StartupFramesFieldNumber = 74;
  ::google::protobuf::int32 def1_startup_frames() const;
  void set_def1_startup_frames(::google::protobuf::int32 value);

  // float def1_damage_yield = 75;
  void clear_def1_damage_yield();
  static const int kDef1DamageYieldFieldNumber = 75;
  float def1_damage_yield() const;
  void set_def1_damage_yield(float value);

  // bool has_def1Atked1Anim = 69;
  void clear_has_def1atked1anim();
  static const int kHasDef1Atked1AnimFieldNumber = 69;
  bool has_def1atked1anim() const;
  void set_has_def1atked1anim(bool value);

  // bool def1_defies_ele_weakness_penetration = 76;
  void clear_def1_defies_ele_weakness_penetration();
  static const int kDef1DefiesEleWeaknessPenetrationFieldNumber = 76;
  bool def1_defies_ele_weakness_penetration() const;
  void set_def1_defies_ele_weakness_penetration(bool value);

  // bool def1_defies_debuff = 77;
  void clear_def1_defies_debuff();
  static const int kDef1DefiesDebuffFieldNumber = 77;
  bool def1_defies_debuff() const;
  void set_def1_defies_debuff(bool value);

  // bool walking_auto_def1 = 79;
  void clear_walking_auto_def1();
  static const int kWalkingAutoDef1FieldNumber = 79;
  bool walking_auto_def1() const;
  void set_walking_auto_def1(bool value);

  // int32 flying_quota_rdf_cnt = 78;
  void clear_flying_quota_rdf_cnt();
  static const int kFlyingQuotaRdfCntFieldNumber = 78;
  ::google::protobuf::int32 flying_quota_rdf_cnt() const;
  void set_flying_quota_rdf_cnt(::google::protobuf::int32 value);

  // .shared.IfaceCat Ifc = 80;
  void clear_ifc();
  static const int kIfcFieldNumber = 80;
  ::shared::IfaceCat ifc() const;
  void set_ifc(::shared::IfaceCat value);

  // uint32 ele_weakness = 81;
  void clear_ele_weakness();
  static const int kEleWeaknessFieldNumber = 81;
  ::google::protobuf::uint32 ele_weakness() const;
  void set_ele_weakness(::google::protobuf::uint32 value);

  // uint32 ele_resistance = 82;
  void clear_ele_resistance();
  static const int kEleResistanceFieldNumber = 82;
  ::google::protobuf::uint32 ele_resistance() const;
  void set_ele_resistance(::google::protobuf::uint32 value);

  // int32 btn_b_charged_vfx_species_id = 84;
  void clear_btn_b_charged_vfx_species_id();
  static const int kBtnBChargedVfxSpeciesIdFieldNumber = 84;
  ::google::protobuf::int32 btn_b_charged_vfx_species_id() const;
  void set_btn_b_charged_vfx_species_id(::google::protobuf::int32 value);

  // bool has_btn_b_charging = 83;
  void clear_has_btn_b_charging();
  static const int kHasBtnBChargingFieldNumber = 83;
  bool has_btn_b_charging() const;
  void set_has_btn_b_charging(bool value);

  // bool is_key_ch = 85;
  void clear_is_key_ch();
  static const int kIsKeyChFieldNumber = 85;
  bool is_key_ch() const;
  void set_is_key_ch(bool value);

  // bool allows_same_team_soft_pushback = 86;
  void clear_allows_same_team_soft_pushback();
  static const int kAllowsSameTeamSoftPushbackFieldNumber = 86;
  bool allows_same_team_soft_pushback() const;
  void set_allows_same_team_soft_pushback(bool value);

  // bool jumping_instead_of_walking = 88;
  void clear_jumping_instead_of_walking();
  static const int kJumpingInsteadOfWalkingFieldNumber = 88;
  bool jumping_instead_of_walking() const;
  void set_jumping_instead_of_walking(bool value);

  // int32 gauge_inc_when_killed = 87;
  void clear_gauge_inc_when_killed();
  static const int kGaugeIncWhenKilledFieldNumber = 87;
  ::google::protobuf::int32 gauge_inc_when_killed() const;
  void set_gauge_inc_when_killed(::google::protobuf::int32 value);

  // uint32 vision_search_interval_pow2Minus1U = 89;
  void clear_vision_search_interval_pow2minus1u();
  static const int kVisionSearchIntervalPow2Minus1UFieldNumber = 89;
  ::google::protobuf::uint32 vision_search_interval_pow2minus1u() const;
  void set_vision_search_interval_pow2minus1u(::google::protobuf::uint32 value);

  // int32 vision_search_interval_pow2Minus1 = 90;
  void clear_vision_search_interval_pow2minus1();
  static const int kVisionSearchIntervalPow2Minus1FieldNumber = 90;
  ::google::protobuf::int32 vision_search_interval_pow2minus1() const;
  void set_vision_search_interval_pow2minus1(::google::protobuf::int32 value);

  // bool npc_no_default_air_walking = 91;
  void clear_npc_no_default_air_walking();
  static const int kNpcNoDefaultAirWalkingFieldNumber = 91;
  bool npc_no_default_air_walking() const;
  void set_npc_no_default_air_walking(bool value);

  // bool npc_prioritize_bullet_handling = 92;
  void clear_npc_prioritize_bullet_handling();
  static const int kNpcPrioritizeBulletHandlingFieldNumber = 92;
  bool npc_prioritize_bullet_handling() const;
  void set_npc_prioritize_bullet_handling(bool value);

  // bool npc_prioritize_ally_healing = 93;
  void clear_npc_prioritize_ally_healing();
  static const int kNpcPrioritizeAllyHealingFieldNumber = 93;
  bool npc_prioritize_ally_healing() const;
  void set_npc_prioritize_ally_healing(bool value);

  // bool npc_not_hunting_in_air_oppo_ch = 94;
  void clear_npc_not_hunting_in_air_oppo_ch();
  static const int kNpcNotHuntingInAirOppoChFieldNumber = 94;
  bool npc_not_hunting_in_air_oppo_ch() const;
  void set_npc_not_hunting_in_air_oppo_ch(bool value);

  // int32 transform_into_frames_to_recover = 95;
  void clear_transform_into_frames_to_recover();
  static const int kTransformIntoFramesToRecoverFieldNumber = 95;
  ::google::protobuf::int32 transform_into_frames_to_recover() const;
  void set_transform_into_frames_to_recover(::google::protobuf::int32 value);

  // int32 transform_into_frames_invinsible = 96;
  void clear_transform_into_frames_invinsible();
  static const int kTransformIntoFramesInvinsibleFieldNumber = 96;
  ::google::protobuf::int32 transform_into_frames_invinsible() const;
  void set_transform_into_frames_invinsible(::google::protobuf::int32 value);

  // int32 awaking_frames_to_recover = 97;
  void clear_awaking_frames_to_recover();
  static const int kAwakingFramesToRecoverFieldNumber = 97;
  ::google::protobuf::int32 awaking_frames_to_recover() const;
  void set_awaking_frames_to_recover(::google::protobuf::int32 value);

  // int32 awaking_frames_invinsible = 98;
  void clear_awaking_frames_invinsible();
  static const int kAwakingFramesInvinsibleFieldNumber = 98;
  ::google::protobuf::int32 awaking_frames_invinsible() const;
  void set_awaking_frames_invinsible(::google::protobuf::int32 value);

  // bool use_idle1_as_flying_idle = 99;
  void clear_use_idle1_as_flying_idle();
  static const int kUseIdle1AsFlyingIdleFieldNumber = 99;
  bool use_idle1_as_flying_idle() const;
  void set_use_idle1_as_flying_idle(bool value);

  // bool no_flee = 100;
  void clear_no_flee();
  static const int kNoFleeFieldNumber = 100;
  bool no_flee() const;
  void set_no_flee(bool value);

  // @@protoc_insertion_point(class_scope:shared.CharacterConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot > init_inventory_slots_;
  ::google::protobuf::RepeatedField<int> btn_b_auto_unhold_ch_states_;
  mutable std::atomic<int> _btn_b_auto_unhold_ch_states_cached_byte_size_;
  ::google::protobuf::internal::MapField<
      CharacterConfig_LoopingChStatesEntry_DoNotUse,
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > looping_ch_states_;
  ::google::protobuf::internal::ArenaStringPtr species_name_;
  ::google::protobuf::uint32 species_id_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 mp_;
  ::google::protobuf::int32 lay_down_frames_;
  ::google::protobuf::int32 lay_down_frames_to_recover_;
  ::google::protobuf::int32 get_up_invinsible_frames_;
  ::google::protobuf::int32 get_up_frames_to_recover_;
  float speed_;
  ::google::protobuf::int32 mp_regen_per_interval_;
  ::google::protobuf::int32 mp_regen_interval_;
  float jumping_init_vel_y_;
  ::google::protobuf::int32 inertia_frames_to_recover_;
  bool dashing_enabled_;
  bool sliding_enabled_;
  bool on_wall_enabled_;
  bool crouching_enabled_;
  ::google::protobuf::int32 wall_jumping_frames_to_recover_;
  float wall_jumping_init_vel_x_;
  float wall_jumping_init_vel_y_;
  float wall_sliding_vel_y_;
  float min_falling_vel_y_;
  float max_ascending_vel_y_;
  ::google::protobuf::int32 ground_dodge_enabled_by_rdf_cnt_from_beginning_;
  ::google::protobuf::int32 ground_dodged_frames_to_recover_;
  bool crouching_atk_enabled_;
  bool use_inventory_btn_b_;
  bool ground_dodge_enabled_by_iv_slot_c_in_block_stun_;
  bool anti_gravity_when_idle_;
  ::google::protobuf::int32 ground_dodged_frames_invinsible_;
  float ground_dodged_speed_;
  float vision_offset_x_;
  float vision_offset_y_;
  float vision_size_x_;
  float vision_size_y_;
  float capsule_radius_;
  float capsule_half_height_;
  float shrinked_scale_radius_;
  float shrinked_scale_height_;
  float lay_down_scale_radius_;
  float lay_down_scale_height_;
  float dying_scale_radius_;
  float dying_scale_height_;
  float dimmed_scale_radius_;
  float dimmed_scale_height_;
  ::google::protobuf::int32 anti_gravity_frames_lingering_;
  bool omit_gravity_;
  bool omit_soft_pushback_;
  bool repel_soft_pushback_;
  bool has_turn_around_anim_;
  ::google::protobuf::uint64 collision_type_mask_;
  bool has_dimmed_anim_;
  bool has_awaking_anim_;
  bool has_walk_stopping_anim_;
  bool has_in_air_walk_stopping_anim_;
  ::google::protobuf::int32 hardness_;
  ::google::protobuf::int32 proactive_jump_startup_frames_;
  ::google::protobuf::uint32 default_air_jump_quota_;
  ::google::protobuf::uint32 default_air_dash_quota_;
  ::google::protobuf::uint32 default_def1quota_;
  ::google::protobuf::int32 air_jump_vfx_species_id_;
  bool lay_down_to_recover_from_dimmed_;
  bool isolated_air_jump_and_dash_quota_;
  bool jump_holding_to_fly_;
  bool has_def1_;
  float slip_jump_thres_hold_below_top_face_;
  float slip_jump_character_drop_y_;
  ::google::protobuf::uint32 transform_into_species_id_upon_death_;
  ::google::protobuf::int32 default_def1broken_frames_to_recover_;
  ::google::protobuf::int32 def1_active_vfx_species_id_;
  ::google::protobuf::int32 def1_atked_vfx_species_id_;
  ::google::protobuf::int32 def1_broken_vfx_species_id_;
  ::google::protobuf::int32 def1_startup_frames_;
  float def1_damage_yield_;
  bool has_def1atked1anim_;
  bool def1_defies_ele_weakness_penetration_;
  bool def1_defies_debuff_;
  bool walking_auto_def1_;
  ::google::protobuf::int32 flying_quota_rdf_cnt_;
  int ifc_;
  ::google::protobuf::uint32 ele_weakness_;
  ::google::protobuf::uint32 ele_resistance_;
  ::google::protobuf::int32 btn_b_charged_vfx_species_id_;
  bool has_btn_b_charging_;
  bool is_key_ch_;
  bool allows_same_team_soft_pushback_;
  bool jumping_instead_of_walking_;
  ::google::protobuf::int32 gauge_inc_when_killed_;
  ::google::protobuf::uint32 vision_search_interval_pow2minus1u_;
  ::google::protobuf::int32 vision_search_interval_pow2minus1_;
  bool npc_no_default_air_walking_;
  bool npc_prioritize_bullet_handling_;
  bool npc_prioritize_ally_healing_;
  bool npc_not_hunting_in_air_oppo_ch_;
  ::google::protobuf::int32 transform_into_frames_to_recover_;
  ::google::protobuf::int32 transform_into_frames_invinsible_;
  ::google::protobuf::int32 awaking_frames_to_recover_;
  ::google::protobuf::int32 awaking_frames_invinsible_;
  bool use_idle1_as_flying_idle_;
  bool no_flee_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT CharacterDownsync :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.CharacterDownsync) */ {
 public:
  CharacterDownsync();
  virtual ~CharacterDownsync();

  CharacterDownsync(const CharacterDownsync& from);

  inline CharacterDownsync& operator=(const CharacterDownsync& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CharacterDownsync(CharacterDownsync&& from) noexcept
    : CharacterDownsync() {
    *this = ::std::move(from);
  }

  inline CharacterDownsync& operator=(CharacterDownsync&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CharacterDownsync& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterDownsync* internal_default_instance() {
    return reinterpret_cast<const CharacterDownsync*>(
               &_CharacterDownsync_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CharacterDownsync* other);
  friend void swap(CharacterDownsync& a, CharacterDownsync& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CharacterDownsync* New() const final {
    return CreateMaybeMessage<CharacterDownsync>(nullptr);
  }

  CharacterDownsync* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CharacterDownsync>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CharacterDownsync& from);
  void MergeFrom(const CharacterDownsync& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterDownsync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.Buff buff_list = 90;
  int buff_list_size() const;
  void clear_buff_list();
  static const int kBuffListFieldNumber = 90;
  ::shared::Buff* mutable_buff_list(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::Buff >*
      mutable_buff_list();
  const ::shared::Buff& buff_list(int index) const;
  ::shared::Buff* add_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::shared::Buff >&
      buff_list() const;

  // repeated .shared.Debuff debuff_list = 91;
  int debuff_list_size() const;
  void clear_debuff_list();
  static const int kDebuffListFieldNumber = 91;
  ::shared::Debuff* mutable_debuff_list(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::Debuff >*
      mutable_debuff_list();
  const ::shared::Debuff& debuff_list(int index) const;
  ::shared::Debuff* add_debuff_list();
  const ::google::protobuf::RepeatedPtrField< ::shared::Debuff >&
      debuff_list() const;

  // repeated .shared.BulletImmuneRecord bullet_immune_records = 93;
  int bullet_immune_records_size() const;
  void clear_bullet_immune_records();
  static const int kBulletImmuneRecordsFieldNumber = 93;
  ::shared::BulletImmuneRecord* mutable_bullet_immune_records(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::BulletImmuneRecord >*
      mutable_bullet_immune_records();
  const ::shared::BulletImmuneRecord& bullet_immune_records(int index) const;
  ::shared::BulletImmuneRecord* add_bullet_immune_records();
  const ::google::protobuf::RepeatedPtrField< ::shared::BulletImmuneRecord >&
      bullet_immune_records() const;

  // repeated float kinematic_knobs = 94;
  int kinematic_knobs_size() const;
  void clear_kinematic_knobs();
  static const int kKinematicKnobsFieldNumber = 94;
  float kinematic_knobs(int index) const;
  void set_kinematic_knobs(int index, float value);
  void add_kinematic_knobs(float value);
  const ::google::protobuf::RepeatedField< float >&
      kinematic_knobs() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_kinematic_knobs();

  // .shared.Inventory inventory = 92;
  bool has_inventory() const;
  void clear_inventory();
  static const int kInventoryFieldNumber = 92;
  const ::shared::Inventory& inventory() const;
  ::shared::Inventory* release_inventory();
  ::shared::Inventory* mutable_inventory();
  void set_allocated_inventory(::shared::Inventory* inventory);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // int32 dir_x = 4;
  void clear_dir_x();
  static const int kDirXFieldNumber = 4;
  ::google::protobuf::int32 dir_x() const;
  void set_dir_x(::google::protobuf::int32 value);

  // int32 dir_y = 5;
  void clear_dir_y();
  static const int kDirYFieldNumber = 5;
  ::google::protobuf::int32 dir_y() const;
  void set_dir_y(::google::protobuf::int32 value);

  // float vel_x = 6;
  void clear_vel_x();
  static const int kVelXFieldNumber = 6;
  float vel_x() const;
  void set_vel_x(float value);

  // float vel_y = 7;
  void clear_vel_y();
  static const int kVelYFieldNumber = 7;
  float vel_y() const;
  void set_vel_y(float value);

  // float speed = 8;
  void clear_speed();
  static const int kSpeedFieldNumber = 8;
  float speed() const;
  void set_speed(float value);

  // uint32 species_id = 9;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 9;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // int32 join_index = 10;
  void clear_join_index();
  static const int kJoinIndexFieldNumber = 10;
  ::google::protobuf::int32 join_index() const;
  void set_join_index(::google::protobuf::int32 value);

  // int32 frames_to_recover = 11;
  void clear_frames_to_recover();
  static const int kFramesToRecoverFieldNumber = 11;
  ::google::protobuf::int32 frames_to_recover() const;
  void set_frames_to_recover(::google::protobuf::int32 value);

  // int32 frames_captured_by_inertia = 12;
  void clear_frames_captured_by_inertia();
  static const int kFramesCapturedByInertiaFieldNumber = 12;
  ::google::protobuf::int32 frames_captured_by_inertia() const;
  void set_frames_captured_by_inertia(::google::protobuf::int32 value);

  // int32 frames_in_patrol_cue = 14;
  void clear_frames_in_patrol_cue();
  static const int kFramesInPatrolCueFieldNumber = 14;
  ::google::protobuf::int32 frames_in_patrol_cue() const;
  void set_frames_in_patrol_cue(::google::protobuf::int32 value);

  // uint32 beats_cnt = 15;
  void clear_beats_cnt();
  static const int kBeatsCntFieldNumber = 15;
  ::google::protobuf::uint32 beats_cnt() const;
  void set_beats_cnt(::google::protobuf::uint32 value);

  // uint32 beaten_cnt = 16;
  void clear_beaten_cnt();
  static const int kBeatenCntFieldNumber = 16;
  ::google::protobuf::uint32 beaten_cnt() const;
  void set_beaten_cnt(::google::protobuf::uint32 value);

  // int32 hp = 17;
  void clear_hp();
  static const int kHpFieldNumber = 17;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // int32 mp = 18;
  void clear_mp();
  static const int kMpFieldNumber = 18;
  ::google::protobuf::int32 mp() const;
  void set_mp(::google::protobuf::int32 value);

  // int32 btn_b_holding_rdf_count = 19;
  void clear_btn_b_holding_rdf_count();
  static const int kBtnBHoldingRdfCountFieldNumber = 19;
  ::google::protobuf::int32 btn_b_holding_rdf_count() const;
  void set_btn_b_holding_rdf_count(::google::protobuf::int32 value);

  // .shared.CharacterState character_state = 22;
  void clear_character_state();
  static const int kCharacterStateFieldNumber = 22;
  ::shared::CharacterState character_state() const;
  void set_character_state(::shared::CharacterState value);

  // bool captured_by_patrol_cue = 13;
  void clear_captured_by_patrol_cue();
  static const int kCapturedByPatrolCueFieldNumber = 13;
  bool captured_by_patrol_cue() const;
  void set_captured_by_patrol_cue(bool value);

  // bool in_air = 24;
  void clear_in_air();
  static const int kInAirFieldNumber = 24;
  bool in_air() const;
  void set_in_air(bool value);

  // bool jump_triggered = 25;
  void clear_jump_triggered();
  static const int kJumpTriggeredFieldNumber = 25;
  bool jump_triggered() const;
  void set_jump_triggered(bool value);

  // bool on_wall = 26;
  void clear_on_wall();
  static const int kOnWallFieldNumber = 26;
  bool on_wall() const;
  void set_on_wall(bool value);

  // int32 frames_in_ch_state = 23;
  void clear_frames_in_ch_state();
  static const int kFramesInChStateFieldNumber = 23;
  ::google::protobuf::int32 frames_in_ch_state() const;
  void set_frames_in_ch_state(::google::protobuf::int32 value);

  // int32 on_wall_norm_x = 27;
  void clear_on_wall_norm_x();
  static const int kOnWallNormXFieldNumber = 27;
  ::google::protobuf::int32 on_wall_norm_x() const;
  void set_on_wall_norm_x(::google::protobuf::int32 value);

  // int32 on_wall_norm_y = 28;
  void clear_on_wall_norm_y();
  static const int kOnWallNormYFieldNumber = 28;
  ::google::protobuf::int32 on_wall_norm_y() const;
  void set_on_wall_norm_y(::google::protobuf::int32 value);

  // int32 waiving_patrol_cue_id = 31;
  void clear_waiving_patrol_cue_id();
  static const int kWaivingPatrolCueIdFieldNumber = 31;
  ::google::protobuf::int32 waiving_patrol_cue_id() const;
  void set_waiving_patrol_cue_id(::google::protobuf::int32 value);

  // .shared.NpcGoal goal_as_npc = 32;
  void clear_goal_as_npc();
  static const int kGoalAsNpcFieldNumber = 32;
  ::shared::NpcGoal goal_as_npc() const;
  void set_goal_as_npc(::shared::NpcGoal value);

  // float revival_x = 33;
  void clear_revival_x();
  static const int kRevivalXFieldNumber = 33;
  float revival_x() const;
  void set_revival_x(float value);

  // bool omit_gravity = 29;
  void clear_omit_gravity();
  static const int kOmitGravityFieldNumber = 29;
  bool omit_gravity() const;
  void set_omit_gravity(bool value);

  // bool omit_soft_pushback = 30;
  void clear_omit_soft_pushback();
  static const int kOmitSoftPushbackFieldNumber = 30;
  bool omit_soft_pushback() const;
  void set_omit_soft_pushback(bool value);

  // bool on_slope = 37;
  void clear_on_slope();
  static const int kOnSlopeFieldNumber = 37;
  bool on_slope() const;
  void set_on_slope(bool value);

  // bool forced_crouching = 39;
  void clear_forced_crouching();
  static const int kForcedCrouchingFieldNumber = 39;
  bool forced_crouching() const;
  void set_forced_crouching(bool value);

  // float revival_y = 34;
  void clear_revival_y();
  static const int kRevivalYFieldNumber = 34;
  float revival_y() const;
  void set_revival_y(float value);

  // int32 revival_dir_x = 35;
  void clear_revival_dir_x();
  static const int kRevivalDirXFieldNumber = 35;
  ::google::protobuf::int32 revival_dir_x() const;
  void set_revival_dir_x(::google::protobuf::int32 value);

  // int32 revival_dir_y = 36;
  void clear_revival_dir_y();
  static const int kRevivalDirYFieldNumber = 36;
  ::google::protobuf::int32 revival_dir_y() const;
  void set_revival_dir_y(::google::protobuf::int32 value);

  // int32 friction_vel_x = 38;
  void clear_friction_vel_x();
  static const int kFrictionVelXFieldNumber = 38;
  ::google::protobuf::int32 friction_vel_x() const;
  void set_friction_vel_x(::google::protobuf::int32 value);

  // bool slip_jump_triggered = 40;
  void clear_slip_jump_triggered();
  static const int kSlipJumpTriggeredFieldNumber = 40;
  bool slip_jump_triggered() const;
  void set_slip_jump_triggered(bool value);

  // bool primarily_on_slippable_hard_pushback = 41;
  void clear_primarily_on_slippable_hard_pushback();
  static const int kPrimarilyOnSlippableHardPushbackFieldNumber = 41;
  bool primarily_on_slippable_hard_pushback() const;
  void set_primarily_on_slippable_hard_pushback(bool value);

  // bool prev_was_crouching = 42;
  void clear_prev_was_crouching();
  static const int kPrevWasCrouchingFieldNumber = 42;
  bool prev_was_crouching() const;
  void set_prev_was_crouching(bool value);

  // bool new_birth = 43;
  void clear_new_birth();
  static const int kNewBirthFieldNumber = 43;
  bool new_birth() const;
  void set_new_birth(bool value);

  // int32 frames_invinsible = 44;
  void clear_frames_invinsible();
  static const int kFramesInvinsibleFieldNumber = 44;
  ::google::protobuf::int32 frames_invinsible() const;
  void set_frames_invinsible(::google::protobuf::int32 value);

  // int32 frames_to_start_jump = 46;
  void clear_frames_to_start_jump();
  static const int kFramesToStartJumpFieldNumber = 46;
  ::google::protobuf::int32 frames_to_start_jump() const;
  void set_frames_to_start_jump(::google::protobuf::int32 value);

  // uint64 publishing_evt_mask_upon_killed = 48;
  void clear_publishing_evt_mask_upon_killed();
  static const int kPublishingEvtMaskUponKilledFieldNumber = 48;
  ::google::protobuf::uint64 publishing_evt_mask_upon_killed() const;
  void set_publishing_evt_mask_upon_killed(::google::protobuf::uint64 value);

  // int32 publishing_to_trigger_local_id_upon_killed = 49;
  void clear_publishing_to_trigger_local_id_upon_killed();
  static const int kPublishingToTriggerLocalIdUponKilledFieldNumber = 49;
  ::google::protobuf::int32 publishing_to_trigger_local_id_upon_killed() const;
  void set_publishing_to_trigger_local_id_upon_killed(::google::protobuf::int32 value);

  // int32 subscribes_to_trigger_local_id = 50;
  void clear_subscribes_to_trigger_local_id();
  static const int kSubscribesToTriggerLocalIdFieldNumber = 50;
  ::google::protobuf::int32 subscribes_to_trigger_local_id() const;
  void set_subscribes_to_trigger_local_id(::google::protobuf::int32 value);

  // int32 jump_holding_rdf_cnt = 51;
  void clear_jump_holding_rdf_cnt();
  static const int kJumpHoldingRdfCntFieldNumber = 51;
  ::google::protobuf::int32 jump_holding_rdf_cnt() const;
  void set_jump_holding_rdf_cnt(::google::protobuf::int32 value);

  // bool jump_started = 45;
  void clear_jump_started();
  static const int kJumpStartedFieldNumber = 45;
  bool jump_started() const;
  void set_jump_started(bool value);

  // bool repel_soft_pushback = 47;
  void clear_repel_soft_pushback();
  static const int kRepelSoftPushbackFieldNumber = 47;
  bool repel_soft_pushback() const;
  void set_repel_soft_pushback(bool value);

  // bool on_slope_facing_down = 63;
  void clear_on_slope_facing_down();
  static const int kOnSlopeFacingDownFieldNumber = 63;
  bool on_slope_facing_down() const;
  void set_on_slope_facing_down(bool value);

  // uint32 remaining_air_jump_quota = 52;
  void clear_remaining_air_jump_quota();
  static const int kRemainingAirJumpQuotaFieldNumber = 52;
  ::google::protobuf::uint32 remaining_air_jump_quota() const;
  void set_remaining_air_jump_quota(::google::protobuf::uint32 value);

  // uint32 remaining_air_dash_quota = 53;
  void clear_remaining_air_dash_quota();
  static const int kRemainingAirDashQuotaFieldNumber = 53;
  ::google::protobuf::uint32 remaining_air_dash_quota() const;
  void set_remaining_air_dash_quota(::google::protobuf::uint32 value);

  // uint32 killed_to_drop_consumable_species_id = 54;
  void clear_killed_to_drop_consumable_species_id();
  static const int kKilledToDropConsumableSpeciesIdFieldNumber = 54;
  ::google::protobuf::uint32 killed_to_drop_consumable_species_id() const;
  void set_killed_to_drop_consumable_species_id(::google::protobuf::uint32 value);

  // uint32 killed_to_drop_buff_species_id = 55;
  void clear_killed_to_drop_buff_species_id();
  static const int kKilledToDropBuffSpeciesIdFieldNumber = 55;
  ::google::protobuf::uint32 killed_to_drop_buff_species_id() const;
  void set_killed_to_drop_buff_species_id(::google::protobuf::uint32 value);

  // uint32 killed_to_drop_pickup_skill_id = 56;
  void clear_killed_to_drop_pickup_skill_id();
  static const int kKilledToDropPickupSkillIdFieldNumber = 56;
  ::google::protobuf::uint32 killed_to_drop_pickup_skill_id() const;
  void set_killed_to_drop_pickup_skill_id(::google::protobuf::uint32 value);

  // int32 friction_vel_y = 57;
  void clear_friction_vel_y();
  static const int kFrictionVelYFieldNumber = 57;
  ::google::protobuf::int32 friction_vel_y() const;
  void set_friction_vel_y(::google::protobuf::int32 value);

  // int32 frames_since_last_damaged = 58;
  void clear_frames_since_last_damaged();
  static const int kFramesSinceLastDamagedFieldNumber = 58;
  ::google::protobuf::int32 frames_since_last_damaged() const;
  void set_frames_since_last_damaged(::google::protobuf::int32 value);

  // uint32 remaining_def1Quota = 59;
  void clear_remaining_def1quota();
  static const int kRemainingDef1QuotaFieldNumber = 59;
  ::google::protobuf::uint32 remaining_def1quota() const;
  void set_remaining_def1quota(::google::protobuf::uint32 value);

  // uint32 combo_hit_cnt = 60;
  void clear_combo_hit_cnt();
  static const int kComboHitCntFieldNumber = 60;
  ::google::protobuf::uint32 combo_hit_cnt() const;
  void set_combo_hit_cnt(::google::protobuf::uint32 value);

  // int32 combo_frames_remained = 61;
  void clear_combo_frames_remained();
  static const int kComboFramesRemainedFieldNumber = 61;
  ::google::protobuf::int32 combo_frames_remained() const;
  void set_combo_frames_remained(::google::protobuf::int32 value);

  // uint32 damage_elemental_attrs = 62;
  void clear_damage_elemental_attrs();
  static const int kDamageElementalAttrsFieldNumber = 62;
  ::google::protobuf::uint32 damage_elemental_attrs() const;
  void set_damage_elemental_attrs(::google::protobuf::uint32 value);

  // int32 last_damaged_by_join_index = 64;
  void clear_last_damaged_by_join_index();
  static const int kLastDamagedByJoinIndexFieldNumber = 64;
  ::google::protobuf::int32 last_damaged_by_join_index() const;
  void set_last_damaged_by_join_index(::google::protobuf::int32 value);

  // int32 last_damaged_by_bullet_team_id = 65;
  void clear_last_damaged_by_bullet_team_id();
  static const int kLastDamagedByBulletTeamIdFieldNumber = 65;
  ::google::protobuf::int32 last_damaged_by_bullet_team_id() const;
  void set_last_damaged_by_bullet_team_id(::google::protobuf::int32 value);

  // int32 activated_rdf_id = 66;
  void clear_activated_rdf_id();
  static const int kActivatedRdfIdFieldNumber = 66;
  ::google::protobuf::int32 activated_rdf_id() const;
  void set_activated_rdf_id(::google::protobuf::int32 value);

  // uint64 cached_cue_cmd = 67;
  void clear_cached_cue_cmd();
  static const int kCachedCueCmdFieldNumber = 67;
  ::google::protobuf::uint64 cached_cue_cmd() const;
  void set_cached_cue_cmd(::google::protobuf::uint64 value);

  // uint32 active_skill_id = 68;
  void clear_active_skill_id();
  static const int kActiveSkillIdFieldNumber = 68;
  ::google::protobuf::uint32 active_skill_id() const;
  void set_active_skill_id(::google::protobuf::uint32 value);

  // int32 active_skill_hit = 69;
  void clear_active_skill_hit();
  static const int kActiveSkillHitFieldNumber = 69;
  ::google::protobuf::int32 active_skill_hit() const;
  void set_active_skill_hit(::google::protobuf::int32 value);

  // int32 bullet_team_id = 70;
  void clear_bullet_team_id();
  static const int kBulletTeamIdFieldNumber = 70;
  ::google::protobuf::int32 bullet_team_id() const;
  void set_bullet_team_id(::google::protobuf::int32 value);

  // int32 ch_collision_team_id = 71;
  void clear_ch_collision_team_id();
  static const int kChCollisionTeamIdFieldNumber = 71;
  ::google::protobuf::int32 ch_collision_team_id() const;
  void set_ch_collision_team_id(::google::protobuf::int32 value);

  // int32 btn_c_holding_rdf_count = 72;
  void clear_btn_c_holding_rdf_count();
  static const int kBtnCHoldingRdfCountFieldNumber = 72;
  ::google::protobuf::int32 btn_c_holding_rdf_count() const;
  void set_btn_c_holding_rdf_count(::google::protobuf::int32 value);

  // int32 btn_d_Holding_rdf_count = 73;
  void clear_btn_d_holding_rdf_count();
  static const int kBtnDHoldingRdfCountFieldNumber = 73;
  ::google::protobuf::int32 btn_d_holding_rdf_count() const;
  void set_btn_d_holding_rdf_count(::google::protobuf::int32 value);

  // int32 btn_e_holding_rdf_count = 74;
  void clear_btn_e_holding_rdf_count();
  static const int kBtnEHoldingRdfCountFieldNumber = 74;
  ::google::protobuf::int32 btn_e_holding_rdf_count() const;
  void set_btn_e_holding_rdf_count(::google::protobuf::int32 value);

  // int32 parry_prep_rdf_cnt_down = 75;
  void clear_parry_prep_rdf_cnt_down();
  static const int kParryPrepRdfCntDownFieldNumber = 75;
  ::google::protobuf::int32 parry_prep_rdf_cnt_down() const;
  void set_parry_prep_rdf_cnt_down(::google::protobuf::int32 value);

  // int32 mp_regen_rdf_countdown = 76;
  void clear_mp_regen_rdf_countdown();
  static const int kMpRegenRdfCountdownFieldNumber = 76;
  ::google::protobuf::int32 mp_regen_rdf_countdown() const;
  void set_mp_regen_rdf_countdown(::google::protobuf::int32 value);

  // int32 flying_rdf_countdown = 77;
  void clear_flying_rdf_countdown();
  static const int kFlyingRdfCountdownFieldNumber = 77;
  ::google::protobuf::int32 flying_rdf_countdown() const;
  void set_flying_rdf_countdown(::google::protobuf::int32 value);

  // int32 locking_on_join_index = 78;
  void clear_locking_on_join_index();
  static const int kLockingOnJoinIndexFieldNumber = 78;
  ::google::protobuf::int32 locking_on_join_index() const;
  void set_locking_on_join_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.CharacterDownsync)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::Buff > buff_list_;
  ::google::protobuf::RepeatedPtrField< ::shared::Debuff > debuff_list_;
  ::google::protobuf::RepeatedPtrField< ::shared::BulletImmuneRecord > bullet_immune_records_;
  ::google::protobuf::RepeatedField< float > kinematic_knobs_;
  mutable std::atomic<int> _kinematic_knobs_cached_byte_size_;
  ::shared::Inventory* inventory_;
  ::google::protobuf::int32 id_;
  float x_;
  float y_;
  ::google::protobuf::int32 dir_x_;
  ::google::protobuf::int32 dir_y_;
  float vel_x_;
  float vel_y_;
  float speed_;
  ::google::protobuf::uint32 species_id_;
  ::google::protobuf::int32 join_index_;
  ::google::protobuf::int32 frames_to_recover_;
  ::google::protobuf::int32 frames_captured_by_inertia_;
  ::google::protobuf::int32 frames_in_patrol_cue_;
  ::google::protobuf::uint32 beats_cnt_;
  ::google::protobuf::uint32 beaten_cnt_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 mp_;
  ::google::protobuf::int32 btn_b_holding_rdf_count_;
  int character_state_;
  bool captured_by_patrol_cue_;
  bool in_air_;
  bool jump_triggered_;
  bool on_wall_;
  ::google::protobuf::int32 frames_in_ch_state_;
  ::google::protobuf::int32 on_wall_norm_x_;
  ::google::protobuf::int32 on_wall_norm_y_;
  ::google::protobuf::int32 waiving_patrol_cue_id_;
  int goal_as_npc_;
  float revival_x_;
  bool omit_gravity_;
  bool omit_soft_pushback_;
  bool on_slope_;
  bool forced_crouching_;
  float revival_y_;
  ::google::protobuf::int32 revival_dir_x_;
  ::google::protobuf::int32 revival_dir_y_;
  ::google::protobuf::int32 friction_vel_x_;
  bool slip_jump_triggered_;
  bool primarily_on_slippable_hard_pushback_;
  bool prev_was_crouching_;
  bool new_birth_;
  ::google::protobuf::int32 frames_invinsible_;
  ::google::protobuf::int32 frames_to_start_jump_;
  ::google::protobuf::uint64 publishing_evt_mask_upon_killed_;
  ::google::protobuf::int32 publishing_to_trigger_local_id_upon_killed_;
  ::google::protobuf::int32 subscribes_to_trigger_local_id_;
  ::google::protobuf::int32 jump_holding_rdf_cnt_;
  bool jump_started_;
  bool repel_soft_pushback_;
  bool on_slope_facing_down_;
  ::google::protobuf::uint32 remaining_air_jump_quota_;
  ::google::protobuf::uint32 remaining_air_dash_quota_;
  ::google::protobuf::uint32 killed_to_drop_consumable_species_id_;
  ::google::protobuf::uint32 killed_to_drop_buff_species_id_;
  ::google::protobuf::uint32 killed_to_drop_pickup_skill_id_;
  ::google::protobuf::int32 friction_vel_y_;
  ::google::protobuf::int32 frames_since_last_damaged_;
  ::google::protobuf::uint32 remaining_def1quota_;
  ::google::protobuf::uint32 combo_hit_cnt_;
  ::google::protobuf::int32 combo_frames_remained_;
  ::google::protobuf::uint32 damage_elemental_attrs_;
  ::google::protobuf::int32 last_damaged_by_join_index_;
  ::google::protobuf::int32 last_damaged_by_bullet_team_id_;
  ::google::protobuf::int32 activated_rdf_id_;
  ::google::protobuf::uint64 cached_cue_cmd_;
  ::google::protobuf::uint32 active_skill_id_;
  ::google::protobuf::int32 active_skill_hit_;
  ::google::protobuf::int32 bullet_team_id_;
  ::google::protobuf::int32 ch_collision_team_id_;
  ::google::protobuf::int32 btn_c_holding_rdf_count_;
  ::google::protobuf::int32 btn_d_holding_rdf_count_;
  ::google::protobuf::int32 btn_e_holding_rdf_count_;
  ::google::protobuf::int32 parry_prep_rdf_cnt_down_;
  ::google::protobuf::int32 mp_regen_rdf_countdown_;
  ::google::protobuf::int32 flying_rdf_countdown_;
  ::google::protobuf::int32 locking_on_join_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT InputFrameDecoded :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.InputFrameDecoded) */ {
 public:
  InputFrameDecoded();
  virtual ~InputFrameDecoded();

  InputFrameDecoded(const InputFrameDecoded& from);

  inline InputFrameDecoded& operator=(const InputFrameDecoded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputFrameDecoded(InputFrameDecoded&& from) noexcept
    : InputFrameDecoded() {
    *this = ::std::move(from);
  }

  inline InputFrameDecoded& operator=(InputFrameDecoded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InputFrameDecoded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputFrameDecoded* internal_default_instance() {
    return reinterpret_cast<const InputFrameDecoded*>(
               &_InputFrameDecoded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(InputFrameDecoded* other);
  friend void swap(InputFrameDecoded& a, InputFrameDecoded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputFrameDecoded* New() const final {
    return CreateMaybeMessage<InputFrameDecoded>(nullptr);
  }

  InputFrameDecoded* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputFrameDecoded>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputFrameDecoded& from);
  void MergeFrom(const InputFrameDecoded& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputFrameDecoded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dx = 1;
  void clear_dx();
  static const int kDxFieldNumber = 1;
  ::google::protobuf::int32 dx() const;
  void set_dx(::google::protobuf::int32 value);

  // int32 dy = 2;
  void clear_dy();
  static const int kDyFieldNumber = 2;
  ::google::protobuf::int32 dy() const;
  void set_dy(::google::protobuf::int32 value);

  // int32 btn_a_level = 3;
  void clear_btn_a_level();
  static const int kBtnALevelFieldNumber = 3;
  ::google::protobuf::int32 btn_a_level() const;
  void set_btn_a_level(::google::protobuf::int32 value);

  // int32 btn_b_level = 4;
  void clear_btn_b_level();
  static const int kBtnBLevelFieldNumber = 4;
  ::google::protobuf::int32 btn_b_level() const;
  void set_btn_b_level(::google::protobuf::int32 value);

  // int32 btn_c_level = 5;
  void clear_btn_c_level();
  static const int kBtnCLevelFieldNumber = 5;
  ::google::protobuf::int32 btn_c_level() const;
  void set_btn_c_level(::google::protobuf::int32 value);

  // int32 btn_d_level = 6;
  void clear_btn_d_level();
  static const int kBtnDLevelFieldNumber = 6;
  ::google::protobuf::int32 btn_d_level() const;
  void set_btn_d_level(::google::protobuf::int32 value);

  // int32 btn_e_level = 7;
  void clear_btn_e_level();
  static const int kBtnELevelFieldNumber = 7;
  ::google::protobuf::int32 btn_e_level() const;
  void set_btn_e_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.InputFrameDecoded)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dx_;
  ::google::protobuf::int32 dy_;
  ::google::protobuf::int32 btn_a_level_;
  ::google::protobuf::int32 btn_b_level_;
  ::google::protobuf::int32 btn_c_level_;
  ::google::protobuf::int32 btn_d_level_;
  ::google::protobuf::int32 btn_e_level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT InputFrameUpsync :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.InputFrameUpsync) */ {
 public:
  InputFrameUpsync();
  virtual ~InputFrameUpsync();

  InputFrameUpsync(const InputFrameUpsync& from);

  inline InputFrameUpsync& operator=(const InputFrameUpsync& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputFrameUpsync(InputFrameUpsync&& from) noexcept
    : InputFrameUpsync() {
    *this = ::std::move(from);
  }

  inline InputFrameUpsync& operator=(InputFrameUpsync&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InputFrameUpsync& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputFrameUpsync* internal_default_instance() {
    return reinterpret_cast<const InputFrameUpsync*>(
               &_InputFrameUpsync_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(InputFrameUpsync* other);
  friend void swap(InputFrameUpsync& a, InputFrameUpsync& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputFrameUpsync* New() const final {
    return CreateMaybeMessage<InputFrameUpsync>(nullptr);
  }

  InputFrameUpsync* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputFrameUpsync>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputFrameUpsync& from);
  void MergeFrom(const InputFrameUpsync& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputFrameUpsync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 encoded = 2;
  void clear_encoded();
  static const int kEncodedFieldNumber = 2;
  ::google::protobuf::uint64 encoded() const;
  void set_encoded(::google::protobuf::uint64 value);

  // int32 input_frame_id = 1;
  void clear_input_frame_id();
  static const int kInputFrameIdFieldNumber = 1;
  ::google::protobuf::int32 input_frame_id() const;
  void set_input_frame_id(::google::protobuf::int32 value);

  // int32 join_index = 3;
  void clear_join_index();
  static const int kJoinIndexFieldNumber = 3;
  ::google::protobuf::int32 join_index() const;
  void set_join_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.InputFrameUpsync)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 encoded_;
  ::google::protobuf::int32 input_frame_id_;
  ::google::protobuf::int32 join_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT InputFrameDownsync :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.InputFrameDownsync) */ {
 public:
  InputFrameDownsync();
  virtual ~InputFrameDownsync();

  InputFrameDownsync(const InputFrameDownsync& from);

  inline InputFrameDownsync& operator=(const InputFrameDownsync& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputFrameDownsync(InputFrameDownsync&& from) noexcept
    : InputFrameDownsync() {
    *this = ::std::move(from);
  }

  inline InputFrameDownsync& operator=(InputFrameDownsync&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InputFrameDownsync& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputFrameDownsync* internal_default_instance() {
    return reinterpret_cast<const InputFrameDownsync*>(
               &_InputFrameDownsync_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(InputFrameDownsync* other);
  friend void swap(InputFrameDownsync& a, InputFrameDownsync& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputFrameDownsync* New() const final {
    return CreateMaybeMessage<InputFrameDownsync>(nullptr);
  }

  InputFrameDownsync* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputFrameDownsync>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputFrameDownsync& from);
  void MergeFrom(const InputFrameDownsync& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputFrameDownsync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 input_list = 2;
  int input_list_size() const;
  void clear_input_list();
  static const int kInputListFieldNumber = 2;
  ::google::protobuf::uint64 input_list(int index) const;
  void set_input_list(int index, ::google::protobuf::uint64 value);
  void add_input_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      input_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_input_list();

  // uint64 confirmed_list = 3;
  void clear_confirmed_list();
  static const int kConfirmedListFieldNumber = 3;
  ::google::protobuf::uint64 confirmed_list() const;
  void set_confirmed_list(::google::protobuf::uint64 value);

  // uint64 udp_confirmed_list = 4;
  void clear_udp_confirmed_list();
  static const int kUdpConfirmedListFieldNumber = 4;
  ::google::protobuf::uint64 udp_confirmed_list() const;
  void set_udp_confirmed_list(::google::protobuf::uint64 value);

  // int32 input_frame_id = 1;
  void clear_input_frame_id();
  static const int kInputFrameIdFieldNumber = 1;
  ::google::protobuf::int32 input_frame_id() const;
  void set_input_frame_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.InputFrameDownsync)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > input_list_;
  mutable std::atomic<int> _input_list_cached_byte_size_;
  ::google::protobuf::uint64 confirmed_list_;
  ::google::protobuf::uint64 udp_confirmed_list_;
  ::google::protobuf::int32 input_frame_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT WsReq :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.WsReq) */ {
 public:
  WsReq();
  virtual ~WsReq();

  WsReq(const WsReq& from);

  inline WsReq& operator=(const WsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WsReq(WsReq&& from) noexcept
    : WsReq() {
    *this = ::std::move(from);
  }

  inline WsReq& operator=(WsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WsReq* internal_default_instance() {
    return reinterpret_cast<const WsReq*>(
               &_WsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(WsReq* other);
  friend void swap(WsReq& a, WsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WsReq* New() const final {
    return CreateMaybeMessage<WsReq>(nullptr);
  }

  WsReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WsReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WsReq& from);
  void MergeFrom(const WsReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.InputFrameUpsync input_frame_upsync_batch = 7;
  int input_frame_upsync_batch_size() const;
  void clear_input_frame_upsync_batch();
  static const int kInputFrameUpsyncBatchFieldNumber = 7;
  ::shared::InputFrameUpsync* mutable_input_frame_upsync_batch(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::InputFrameUpsync >*
      mutable_input_frame_upsync_batch();
  const ::shared::InputFrameUpsync& input_frame_upsync_batch(int index) const;
  ::shared::InputFrameUpsync* add_input_frame_upsync_batch();
  const ::google::protobuf::RepeatedPtrField< ::shared::InputFrameUpsync >&
      input_frame_upsync_batch() const;

  // repeated .shared.SerializableConvexPolygon serialized_barrier_polygons = 12;
  int serialized_barrier_polygons_size() const;
  void clear_serialized_barrier_polygons();
  static const int kSerializedBarrierPolygonsFieldNumber = 12;
  ::shared::SerializableConvexPolygon* mutable_serialized_barrier_polygons(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::SerializableConvexPolygon >*
      mutable_serialized_barrier_polygons();
  const ::shared::SerializableConvexPolygon& serialized_barrier_polygons(int index) const;
  ::shared::SerializableConvexPolygon* add_serialized_barrier_polygons();
  const ::google::protobuf::RepeatedPtrField< ::shared::SerializableConvexPolygon >&
      serialized_barrier_polygons() const;

  // repeated .shared.SerializedCompletelyStaticPatrolCueCollider serialized_static_patrol_cues = 13;
  int serialized_static_patrol_cues_size() const;
  void clear_serialized_static_patrol_cues();
  static const int kSerializedStaticPatrolCuesFieldNumber = 13;
  ::shared::SerializedCompletelyStaticPatrolCueCollider* mutable_serialized_static_patrol_cues(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticPatrolCueCollider >*
      mutable_serialized_static_patrol_cues();
  const ::shared::SerializedCompletelyStaticPatrolCueCollider& serialized_static_patrol_cues(int index) const;
  ::shared::SerializedCompletelyStaticPatrolCueCollider* add_serialized_static_patrol_cues();
  const ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticPatrolCueCollider >&
      serialized_static_patrol_cues() const;

  // repeated .shared.SerializedCompletelyStaticTrapCollider serialized_completely_static_traps = 14;
  int serialized_completely_static_traps_size() const;
  void clear_serialized_completely_static_traps();
  static const int kSerializedCompletelyStaticTrapsFieldNumber = 14;
  ::shared::SerializedCompletelyStaticTrapCollider* mutable_serialized_completely_static_traps(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTrapCollider >*
      mutable_serialized_completely_static_traps();
  const ::shared::SerializedCompletelyStaticTrapCollider& serialized_completely_static_traps(int index) const;
  ::shared::SerializedCompletelyStaticTrapCollider* add_serialized_completely_static_traps();
  const ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTrapCollider >&
      serialized_completely_static_traps() const;

  // repeated .shared.SerializedCompletelyStaticTriggerCollider serialized_static_triggers = 15;
  int serialized_static_triggers_size() const;
  void clear_serialized_static_triggers();
  static const int kSerializedStaticTriggersFieldNumber = 15;
  ::shared::SerializedCompletelyStaticTriggerCollider* mutable_serialized_static_triggers(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTriggerCollider >*
      mutable_serialized_static_triggers();
  const ::shared::SerializedCompletelyStaticTriggerCollider& serialized_static_triggers(int index) const;
  ::shared::SerializedCompletelyStaticTriggerCollider* add_serialized_static_triggers();
  const ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTriggerCollider >&
      serialized_static_triggers() const;

  // string player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::std::string& player_id() const;
  void set_player_id(const ::std::string& value);
  #if LANG_CXX11
  void set_player_id(::std::string&& value);
  #endif
  void set_player_id(const char* value);
  void set_player_id(const char* value, size_t size);
  ::std::string* mutable_player_id();
  ::std::string* release_player_id();
  void set_allocated_player_id(::std::string* player_id);

  // .shared.RenderFrame self_parsed_rdf = 8;
  bool has_self_parsed_rdf() const;
  void clear_self_parsed_rdf();
  static const int kSelfParsedRdfFieldNumber = 8;
  const ::shared::RenderFrame& self_parsed_rdf() const;
  ::shared::RenderFrame* release_self_parsed_rdf();
  ::shared::RenderFrame* mutable_self_parsed_rdf();
  void set_allocated_self_parsed_rdf(::shared::RenderFrame* self_parsed_rdf);

  // .shared.SerializedTrapLocalIdToColliderAttrs serialized_trap_local_id_to_collider_attrs = 16;
  bool has_serialized_trap_local_id_to_collider_attrs() const;
  void clear_serialized_trap_local_id_to_collider_attrs();
  static const int kSerializedTrapLocalIdToColliderAttrsFieldNumber = 16;
  const ::shared::SerializedTrapLocalIdToColliderAttrs& serialized_trap_local_id_to_collider_attrs() const;
  ::shared::SerializedTrapLocalIdToColliderAttrs* release_serialized_trap_local_id_to_collider_attrs();
  ::shared::SerializedTrapLocalIdToColliderAttrs* mutable_serialized_trap_local_id_to_collider_attrs();
  void set_allocated_serialized_trap_local_id_to_collider_attrs(::shared::SerializedTrapLocalIdToColliderAttrs* serialized_trap_local_id_to_collider_attrs);

  // .shared.SerializedTriggerEditorIdToLocalId serialized_trigger_editor_id_to_local_id = 18;
  bool has_serialized_trigger_editor_id_to_local_id() const;
  void clear_serialized_trigger_editor_id_to_local_id();
  static const int kSerializedTriggerEditorIdToLocalIdFieldNumber = 18;
  const ::shared::SerializedTriggerEditorIdToLocalId& serialized_trigger_editor_id_to_local_id() const;
  ::shared::SerializedTriggerEditorIdToLocalId* release_serialized_trigger_editor_id_to_local_id();
  ::shared::SerializedTriggerEditorIdToLocalId* mutable_serialized_trigger_editor_id_to_local_id();
  void set_allocated_serialized_trigger_editor_id_to_local_id(::shared::SerializedTriggerEditorIdToLocalId* serialized_trigger_editor_id_to_local_id);

  // int32 act = 2;
  void clear_act();
  static const int kActFieldNumber = 2;
  ::google::protobuf::int32 act() const;
  void set_act(::google::protobuf::int32 value);

  // int32 join_index = 3;
  void clear_join_index();
  static const int kJoinIndexFieldNumber = 3;
  ::google::protobuf::int32 join_index() const;
  void set_join_index(::google::protobuf::int32 value);

  // int32 acking_frame_id = 4;
  void clear_acking_frame_id();
  static const int kAckingFrameIdFieldNumber = 4;
  ::google::protobuf::int32 acking_frame_id() const;
  void set_acking_frame_id(::google::protobuf::int32 value);

  // int32 acking_input_frame_id = 5;
  void clear_acking_input_frame_id();
  static const int kAckingInputFrameIdFieldNumber = 5;
  ::google::protobuf::int32 acking_input_frame_id() const;
  void set_acking_input_frame_id(::google::protobuf::int32 value);

  // int32 auth_key = 6;
  void clear_auth_key();
  static const int kAuthKeyFieldNumber = 6;
  ::google::protobuf::int32 auth_key() const;
  void set_auth_key(::google::protobuf::int32 value);

  // int32 collision_space_half_width = 9;
  void clear_collision_space_half_width();
  static const int kCollisionSpaceHalfWidthFieldNumber = 9;
  ::google::protobuf::int32 collision_space_half_width() const;
  void set_collision_space_half_width(::google::protobuf::int32 value);

  // int32 collision_space_half_height = 10;
  void clear_collision_space_half_height();
  static const int kCollisionSpaceHalfHeightFieldNumber = 10;
  ::google::protobuf::int32 collision_space_half_height() const;
  void set_collision_space_half_height(::google::protobuf::int32 value);

  // int32 battle_duration_seconds = 11;
  void clear_battle_duration_seconds();
  static const int kBattleDurationSecondsFieldNumber = 11;
  ::google::protobuf::int32 battle_duration_seconds() const;
  void set_battle_duration_seconds(::google::protobuf::int32 value);

  // uint32 seq_no = 19;
  void clear_seq_no();
  static const int kSeqNoFieldNumber = 19;
  ::google::protobuf::uint32 seq_no() const;
  void set_seq_no(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.WsReq)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::InputFrameUpsync > input_frame_upsync_batch_;
  ::google::protobuf::RepeatedPtrField< ::shared::SerializableConvexPolygon > serialized_barrier_polygons_;
  ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticPatrolCueCollider > serialized_static_patrol_cues_;
  ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTrapCollider > serialized_completely_static_traps_;
  ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTriggerCollider > serialized_static_triggers_;
  ::google::protobuf::internal::ArenaStringPtr player_id_;
  ::shared::RenderFrame* self_parsed_rdf_;
  ::shared::SerializedTrapLocalIdToColliderAttrs* serialized_trap_local_id_to_collider_attrs_;
  ::shared::SerializedTriggerEditorIdToLocalId* serialized_trigger_editor_id_to_local_id_;
  ::google::protobuf::int32 act_;
  ::google::protobuf::int32 join_index_;
  ::google::protobuf::int32 acking_frame_id_;
  ::google::protobuf::int32 acking_input_frame_id_;
  ::google::protobuf::int32 auth_key_;
  ::google::protobuf::int32 collision_space_half_width_;
  ::google::protobuf::int32 collision_space_half_height_;
  ::google::protobuf::int32 battle_duration_seconds_;
  ::google::protobuf::uint32 seq_no_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT InputBufferSnapshot :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.InputBufferSnapshot) */ {
 public:
  InputBufferSnapshot();
  virtual ~InputBufferSnapshot();

  InputBufferSnapshot(const InputBufferSnapshot& from);

  inline InputBufferSnapshot& operator=(const InputBufferSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputBufferSnapshot(InputBufferSnapshot&& from) noexcept
    : InputBufferSnapshot() {
    *this = ::std::move(from);
  }

  inline InputBufferSnapshot& operator=(InputBufferSnapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InputBufferSnapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputBufferSnapshot* internal_default_instance() {
    return reinterpret_cast<const InputBufferSnapshot*>(
               &_InputBufferSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(InputBufferSnapshot* other);
  friend void swap(InputBufferSnapshot& a, InputBufferSnapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputBufferSnapshot* New() const final {
    return CreateMaybeMessage<InputBufferSnapshot>(nullptr);
  }

  InputBufferSnapshot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputBufferSnapshot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputBufferSnapshot& from);
  void MergeFrom(const InputBufferSnapshot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputBufferSnapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.InputFrameDownsync to_send_input_frame_downsyncs = 3;
  int to_send_input_frame_downsyncs_size() const;
  void clear_to_send_input_frame_downsyncs();
  static const int kToSendInputFrameDownsyncsFieldNumber = 3;
  ::shared::InputFrameDownsync* mutable_to_send_input_frame_downsyncs(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >*
      mutable_to_send_input_frame_downsyncs();
  const ::shared::InputFrameDownsync& to_send_input_frame_downsyncs(int index) const;
  ::shared::InputFrameDownsync* add_to_send_input_frame_downsyncs();
  const ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >&
      to_send_input_frame_downsyncs() const;

  // uint64 unconfirmed_mask = 2;
  void clear_unconfirmed_mask();
  static const int kUnconfirmedMaskFieldNumber = 2;
  ::google::protobuf::uint64 unconfirmed_mask() const;
  void set_unconfirmed_mask(::google::protobuf::uint64 value);

  // int32 ref_render_frame_id = 1;
  void clear_ref_render_frame_id();
  static const int kRefRenderFrameIdFieldNumber = 1;
  ::google::protobuf::int32 ref_render_frame_id() const;
  void set_ref_render_frame_id(::google::protobuf::int32 value);

  // bool should_force_resync = 4;
  void clear_should_force_resync();
  static const int kShouldForceResyncFieldNumber = 4;
  bool should_force_resync() const;
  void set_should_force_resync(bool value);

  // int32 peer_join_index = 5;
  void clear_peer_join_index();
  static const int kPeerJoinIndexFieldNumber = 5;
  ::google::protobuf::int32 peer_join_index() const;
  void set_peer_join_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.InputBufferSnapshot)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync > to_send_input_frame_downsyncs_;
  ::google::protobuf::uint64 unconfirmed_mask_;
  ::google::protobuf::int32 ref_render_frame_id_;
  bool should_force_resync_;
  ::google::protobuf::int32 peer_join_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PatrolCue :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PatrolCue) */ {
 public:
  PatrolCue();
  virtual ~PatrolCue();

  PatrolCue(const PatrolCue& from);

  inline PatrolCue& operator=(const PatrolCue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PatrolCue(PatrolCue&& from) noexcept
    : PatrolCue() {
    *this = ::std::move(from);
  }

  inline PatrolCue& operator=(PatrolCue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PatrolCue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PatrolCue* internal_default_instance() {
    return reinterpret_cast<const PatrolCue*>(
               &_PatrolCue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(PatrolCue* other);
  friend void swap(PatrolCue& a, PatrolCue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PatrolCue* New() const final {
    return CreateMaybeMessage<PatrolCue>(nullptr);
  }

  PatrolCue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PatrolCue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PatrolCue& from);
  void MergeFrom(const PatrolCue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PatrolCue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 fl_act = 2;
  void clear_fl_act();
  static const int kFlActFieldNumber = 2;
  ::google::protobuf::uint64 fl_act() const;
  void set_fl_act(::google::protobuf::uint64 value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 fl_capture_frames = 4;
  void clear_fl_capture_frames();
  static const int kFlCaptureFramesFieldNumber = 4;
  ::google::protobuf::int32 fl_capture_frames() const;
  void set_fl_capture_frames(::google::protobuf::int32 value);

  // uint64 fr_act = 3;
  void clear_fr_act();
  static const int kFrActFieldNumber = 3;
  ::google::protobuf::uint64 fr_act() const;
  void set_fr_act(::google::protobuf::uint64 value);

  // uint64 fd_act = 6;
  void clear_fd_act();
  static const int kFdActFieldNumber = 6;
  ::google::protobuf::uint64 fd_act() const;
  void set_fd_act(::google::protobuf::uint64 value);

  // int32 fr_capture_frames = 5;
  void clear_fr_capture_frames();
  static const int kFrCaptureFramesFieldNumber = 5;
  ::google::protobuf::int32 fr_capture_frames() const;
  void set_fr_capture_frames(::google::protobuf::int32 value);

  // int32 fd_capture_frames = 8;
  void clear_fd_capture_frames();
  static const int kFdCaptureFramesFieldNumber = 8;
  ::google::protobuf::int32 fd_capture_frames() const;
  void set_fd_capture_frames(::google::protobuf::int32 value);

  // uint64 fu_act = 7;
  void clear_fu_act();
  static const int kFuActFieldNumber = 7;
  ::google::protobuf::uint64 fu_act() const;
  void set_fu_act(::google::protobuf::uint64 value);

  // int32 fu_capture_frames = 9;
  void clear_fu_capture_frames();
  static const int kFuCaptureFramesFieldNumber = 9;
  ::google::protobuf::int32 fu_capture_frames() const;
  void set_fu_capture_frames(::google::protobuf::int32 value);

  // uint64 collision_type_mask = 1029;
  void clear_collision_type_mask();
  static const int kCollisionTypeMaskFieldNumber = 1029;
  ::google::protobuf::uint64 collision_type_mask() const;
  void set_collision_type_mask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:shared.PatrolCue)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 fl_act_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 fl_capture_frames_;
  ::google::protobuf::uint64 fr_act_;
  ::google::protobuf::uint64 fd_act_;
  ::google::protobuf::int32 fr_capture_frames_;
  ::google::protobuf::int32 fd_capture_frames_;
  ::google::protobuf::uint64 fu_act_;
  ::google::protobuf::int32 fu_capture_frames_;
  ::google::protobuf::uint64 collision_type_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT VfxConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.VfxConfig) */ {
 public:
  VfxConfig();
  virtual ~VfxConfig();

  VfxConfig(const VfxConfig& from);

  inline VfxConfig& operator=(const VfxConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VfxConfig(VfxConfig&& from) noexcept
    : VfxConfig() {
    *this = ::std::move(from);
  }

  inline VfxConfig& operator=(VfxConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VfxConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VfxConfig* internal_default_instance() {
    return reinterpret_cast<const VfxConfig*>(
               &_VfxConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(VfxConfig* other);
  friend void swap(VfxConfig& a, VfxConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VfxConfig* New() const final {
    return CreateMaybeMessage<VfxConfig>(nullptr);
  }

  VfxConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VfxConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VfxConfig& from);
  void MergeFrom(const VfxConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VfxConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1024;
  void clear_name();
  static const int kNameFieldNumber = 1024;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // .shared.VfxMotionType motion_type = 2;
  void clear_motion_type();
  static const int kMotionTypeFieldNumber = 2;
  ::shared::VfxMotionType motion_type() const;
  void set_motion_type(::shared::VfxMotionType value);

  // .shared.VfxDurationType duration_type = 3;
  void clear_duration_type();
  static const int kDurationTypeFieldNumber = 3;
  ::shared::VfxDurationType duration_type() const;
  void set_duration_type(::shared::VfxDurationType value);

  // bool on_character = 4;
  void clear_on_character();
  static const int kOnCharacterFieldNumber = 4;
  bool on_character() const;
  void set_on_character(bool value);

  // bool on_bullet = 5;
  void clear_on_bullet();
  static const int kOnBulletFieldNumber = 5;
  bool on_bullet() const;
  void set_on_bullet(bool value);

  // bool on_trap = 6;
  void clear_on_trap();
  static const int kOnTrapFieldNumber = 6;
  bool on_trap() const;
  void set_on_trap(bool value);

  // bool use_pixelated_ver = 7;
  void clear_use_pixelated_ver();
  static const int kUsePixelatedVerFieldNumber = 7;
  bool use_pixelated_ver() const;
  void set_use_pixelated_ver(bool value);

  // @@protoc_insertion_point(class_scope:shared.VfxConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 species_id_;
  int motion_type_;
  int duration_type_;
  bool on_character_;
  bool on_bullet_;
  bool on_trap_;
  bool use_pixelated_ver_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class BulletConfig_CancelTransitEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<BulletConfig_CancelTransitEntry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<BulletConfig_CancelTransitEntry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > SuperType;
  BulletConfig_CancelTransitEntry_DoNotUse();
  BulletConfig_CancelTransitEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const BulletConfig_CancelTransitEntry_DoNotUse& other);
  static const BulletConfig_CancelTransitEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const BulletConfig_CancelTransitEntry_DoNotUse*>(&_BulletConfig_CancelTransitEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT BulletConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BulletConfig) */ {
 public:
  BulletConfig();
  virtual ~BulletConfig();

  BulletConfig(const BulletConfig& from);

  inline BulletConfig& operator=(const BulletConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulletConfig(BulletConfig&& from) noexcept
    : BulletConfig() {
    *this = ::std::move(from);
  }

  inline BulletConfig& operator=(BulletConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BulletConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulletConfig* internal_default_instance() {
    return reinterpret_cast<const BulletConfig*>(
               &_BulletConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(BulletConfig* other);
  friend void swap(BulletConfig& a, BulletConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulletConfig* New() const final {
    return CreateMaybeMessage<BulletConfig>(nullptr);
  }

  BulletConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulletConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulletConfig& from);
  void MergeFrom(const BulletConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulletConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, uint32> cancel_transit = 25;
  int cancel_transit_size() const;
  void clear_cancel_transit();
  static const int kCancelTransitFieldNumber = 25;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint32 >&
      cancel_transit() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint32 >*
      mutable_cancel_transit();

  // string character_emit_sfx_name = 2048;
  void clear_character_emit_sfx_name();
  static const int kCharacterEmitSfxNameFieldNumber = 2048;
  const ::std::string& character_emit_sfx_name() const;
  void set_character_emit_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_character_emit_sfx_name(::std::string&& value);
  #endif
  void set_character_emit_sfx_name(const char* value);
  void set_character_emit_sfx_name(const char* value, size_t size);
  ::std::string* mutable_character_emit_sfx_name();
  ::std::string* release_character_emit_sfx_name();
  void set_allocated_character_emit_sfx_name(::std::string* character_emit_sfx_name);

  // string fireball_emit_sfx_name = 2049;
  void clear_fireball_emit_sfx_name();
  static const int kFireballEmitSfxNameFieldNumber = 2049;
  const ::std::string& fireball_emit_sfx_name() const;
  void set_fireball_emit_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_fireball_emit_sfx_name(::std::string&& value);
  #endif
  void set_fireball_emit_sfx_name(const char* value);
  void set_fireball_emit_sfx_name(const char* value, size_t size);
  ::std::string* mutable_fireball_emit_sfx_name();
  ::std::string* release_fireball_emit_sfx_name();
  void set_allocated_fireball_emit_sfx_name(::std::string* fireball_emit_sfx_name);

  // string explosion_sfx_name = 2050;
  void clear_explosion_sfx_name();
  static const int kExplosionSfxNameFieldNumber = 2050;
  const ::std::string& explosion_sfx_name() const;
  void set_explosion_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_explosion_sfx_name(::std::string&& value);
  #endif
  void set_explosion_sfx_name(const char* value);
  void set_explosion_sfx_name(const char* value, size_t size);
  ::std::string* mutable_explosion_sfx_name();
  ::std::string* release_explosion_sfx_name();
  void set_allocated_explosion_sfx_name(::std::string* explosion_sfx_name);

  // string active_sfx_name = 2051;
  void clear_active_sfx_name();
  static const int kActiveSfxNameFieldNumber = 2051;
  const ::std::string& active_sfx_name() const;
  void set_active_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_active_sfx_name(::std::string&& value);
  #endif
  void set_active_sfx_name(const char* value);
  void set_active_sfx_name(const char* value, size_t size);
  ::std::string* mutable_active_sfx_name();
  ::std::string* release_active_sfx_name();
  void set_allocated_active_sfx_name(::std::string* active_sfx_name);

  // string explosion_on_flesh_sfx_name = 2052;
  void clear_explosion_on_flesh_sfx_name();
  static const int kExplosionOnFleshSfxNameFieldNumber = 2052;
  const ::std::string& explosion_on_flesh_sfx_name() const;
  void set_explosion_on_flesh_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_explosion_on_flesh_sfx_name(::std::string&& value);
  #endif
  void set_explosion_on_flesh_sfx_name(const char* value);
  void set_explosion_on_flesh_sfx_name(const char* value, size_t size);
  ::std::string* mutable_explosion_on_flesh_sfx_name();
  ::std::string* release_explosion_on_flesh_sfx_name();
  void set_allocated_explosion_on_flesh_sfx_name(::std::string* explosion_on_flesh_sfx_name);

  // string explosion_on_rock_sfx_name = 2053;
  void clear_explosion_on_rock_sfx_name();
  static const int kExplosionOnRockSfxNameFieldNumber = 2053;
  const ::std::string& explosion_on_rock_sfx_name() const;
  void set_explosion_on_rock_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_explosion_on_rock_sfx_name(::std::string&& value);
  #endif
  void set_explosion_on_rock_sfx_name(const char* value);
  void set_explosion_on_rock_sfx_name(const char* value, size_t size);
  ::std::string* mutable_explosion_on_rock_sfx_name();
  ::std::string* release_explosion_on_rock_sfx_name();
  void set_allocated_explosion_on_rock_sfx_name(::std::string* explosion_on_rock_sfx_name);

  // string explosion_on_metal_sfx_name = 2054;
  void clear_explosion_on_metal_sfx_name();
  static const int kExplosionOnMetalSfxNameFieldNumber = 2054;
  const ::std::string& explosion_on_metal_sfx_name() const;
  void set_explosion_on_metal_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_explosion_on_metal_sfx_name(::std::string&& value);
  #endif
  void set_explosion_on_metal_sfx_name(const char* value);
  void set_explosion_on_metal_sfx_name(const char* value, size_t size);
  ::std::string* mutable_explosion_on_metal_sfx_name();
  ::std::string* release_explosion_on_metal_sfx_name();
  void set_allocated_explosion_on_metal_sfx_name(::std::string* explosion_on_metal_sfx_name);

  // string explosion_on_wood_sfx_name = 2055;
  void clear_explosion_on_wood_sfx_name();
  static const int kExplosionOnWoodSfxNameFieldNumber = 2055;
  const ::std::string& explosion_on_wood_sfx_name() const;
  void set_explosion_on_wood_sfx_name(const ::std::string& value);
  #if LANG_CXX11
  void set_explosion_on_wood_sfx_name(::std::string&& value);
  #endif
  void set_explosion_on_wood_sfx_name(const char* value);
  void set_explosion_on_wood_sfx_name(const char* value, size_t size);
  ::std::string* mutable_explosion_on_wood_sfx_name();
  ::std::string* release_explosion_on_wood_sfx_name();
  void set_allocated_explosion_on_wood_sfx_name(::std::string* explosion_on_wood_sfx_name);

  // .shared.BuffConfig buff_config = 1031;
  bool has_buff_config() const;
  void clear_buff_config();
  static const int kBuffConfigFieldNumber = 1031;
  const ::shared::BuffConfig& buff_config() const;
  ::shared::BuffConfig* release_buff_config();
  ::shared::BuffConfig* mutable_buff_config();
  void set_allocated_buff_config(::shared::BuffConfig* buff_config);

  // int32 startup_frames = 1;
  void clear_startup_frames();
  static const int kStartupFramesFieldNumber = 1;
  ::google::protobuf::int32 startup_frames() const;
  void set_startup_frames(::google::protobuf::int32 value);

  // int32 cancellable_st_frame = 2;
  void clear_cancellable_st_frame();
  static const int kCancellableStFrameFieldNumber = 2;
  ::google::protobuf::int32 cancellable_st_frame() const;
  void set_cancellable_st_frame(::google::protobuf::int32 value);

  // int32 cancellable_ed_frame = 3;
  void clear_cancellable_ed_frame();
  static const int kCancellableEdFrameFieldNumber = 3;
  ::google::protobuf::int32 cancellable_ed_frame() const;
  void set_cancellable_ed_frame(::google::protobuf::int32 value);

  // int32 active_frames = 4;
  void clear_active_frames();
  static const int kActiveFramesFieldNumber = 4;
  ::google::protobuf::int32 active_frames() const;
  void set_active_frames(::google::protobuf::int32 value);

  // int32 hit_stun_frames = 5;
  void clear_hit_stun_frames();
  static const int kHitStunFramesFieldNumber = 5;
  ::google::protobuf::int32 hit_stun_frames() const;
  void set_hit_stun_frames(::google::protobuf::int32 value);

  // int32 block_stun_frames = 6;
  void clear_block_stun_frames();
  static const int kBlockStunFramesFieldNumber = 6;
  ::google::protobuf::int32 block_stun_frames() const;
  void set_block_stun_frames(::google::protobuf::int32 value);

  // float pushback_vel_x = 7;
  void clear_pushback_vel_x();
  static const int kPushbackVelXFieldNumber = 7;
  float pushback_vel_x() const;
  void set_pushback_vel_x(float value);

  // float pushback_vel_y = 8;
  void clear_pushback_vel_y();
  static const int kPushbackVelYFieldNumber = 8;
  float pushback_vel_y() const;
  void set_pushback_vel_y(float value);

  // int32 damage = 9;
  void clear_damage();
  static const int kDamageFieldNumber = 9;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // float self_lock_vel_x = 10;
  void clear_self_lock_vel_x();
  static const int kSelfLockVelXFieldNumber = 10;
  float self_lock_vel_x() const;
  void set_self_lock_vel_x(float value);

  // float self_lock_vel_y = 11;
  void clear_self_lock_vel_y();
  static const int kSelfLockVelYFieldNumber = 11;
  float self_lock_vel_y() const;
  void set_self_lock_vel_y(float value);

  // float hitbox_offset_x = 12;
  void clear_hitbox_offset_x();
  static const int kHitboxOffsetXFieldNumber = 12;
  float hitbox_offset_x() const;
  void set_hitbox_offset_x(float value);

  // float hitbox_offset_y = 13;
  void clear_hitbox_offset_y();
  static const int kHitboxOffsetYFieldNumber = 13;
  float hitbox_offset_y() const;
  void set_hitbox_offset_y(float value);

  // float hitbox_size_x = 14;
  void clear_hitbox_size_x();
  static const int kHitboxSizeXFieldNumber = 14;
  float hitbox_size_x() const;
  void set_hitbox_size_x(float value);

  // float hitbox_size_y = 15;
  void clear_hitbox_size_y();
  static const int kHitboxSizeYFieldNumber = 15;
  float hitbox_size_y() const;
  void set_hitbox_size_y(float value);

  // int32 species_id = 17;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 17;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // int32 explosion_frames = 18;
  void clear_explosion_frames();
  static const int kExplosionFramesFieldNumber = 18;
  ::google::protobuf::int32 explosion_frames() const;
  void set_explosion_frames(::google::protobuf::int32 value);

  // .shared.BulletType b_type = 19;
  void clear_b_type();
  static const int kBTypeFieldNumber = 19;
  ::shared::BulletType b_type() const;
  void set_b_type(::shared::BulletType value);

  // .shared.MultiHitType mh_type = 20;
  void clear_mh_type();
  static const int kMhTypeFieldNumber = 20;
  ::shared::MultiHitType mh_type() const;
  void set_mh_type(::shared::MultiHitType value);

  // uint32 simultaneous_multi_hit_cnt = 21;
  void clear_simultaneous_multi_hit_cnt();
  static const int kSimultaneousMultiHitCntFieldNumber = 21;
  ::google::protobuf::uint32 simultaneous_multi_hit_cnt() const;
  void set_simultaneous_multi_hit_cnt(::google::protobuf::uint32 value);

  // float speed = 22;
  void clear_speed();
  static const int kSpeedFieldNumber = 22;
  float speed() const;
  void set_speed(float value);

  // int32 dir_x = 23;
  void clear_dir_x();
  static const int kDirXFieldNumber = 23;
  ::google::protobuf::int32 dir_x() const;
  void set_dir_x(::google::protobuf::int32 value);

  // int32 dir_y = 24;
  void clear_dir_y();
  static const int kDirYFieldNumber = 24;
  ::google::protobuf::int32 dir_y() const;
  void set_dir_y(::google::protobuf::int32 value);

  // int32 repeat_quota = 26;
  void clear_repeat_quota();
  static const int kRepeatQuotaFieldNumber = 26;
  ::google::protobuf::int32 repeat_quota() const;
  void set_repeat_quota(::google::protobuf::int32 value);

  // int32 active_vfx_species_id = 27;
  void clear_active_vfx_species_id();
  static const int kActiveVfxSpeciesIdFieldNumber = 27;
  ::google::protobuf::int32 active_vfx_species_id() const;
  void set_active_vfx_species_id(::google::protobuf::int32 value);

  // bool blow_up = 16;
  void clear_blow_up();
  static const int kBlowUpFieldNumber = 16;
  bool blow_up() const;
  void set_blow_up(bool value);

  // bool allows_walking = 29;
  void clear_allows_walking();
  static const int kAllowsWalkingFieldNumber = 29;
  bool allows_walking() const;
  void set_allows_walking(bool value);

  // bool allows_crouching = 30;
  void clear_allows_crouching();
  static const int kAllowsCrouchingFieldNumber = 30;
  bool allows_crouching() const;
  void set_allows_crouching(bool value);

  // bool delay_self_vel_to_active = 36;
  void clear_delay_self_vel_to_active();
  static const int kDelaySelfVelToActiveFieldNumber = 36;
  bool delay_self_vel_to_active() const;
  void set_delay_self_vel_to_active(bool value);

  // int32 explosion_vfx_species_id = 28;
  void clear_explosion_vfx_species_id();
  static const int kExplosionVfxSpeciesIdFieldNumber = 28;
  ::google::protobuf::int32 explosion_vfx_species_id() const;
  void set_explosion_vfx_species_id(::google::protobuf::int32 value);

  // int32 hardness = 31;
  void clear_hardness();
  static const int kHardnessFieldNumber = 31;
  ::google::protobuf::int32 hardness() const;
  void set_hardness(::google::protobuf::int32 value);

  // int32 startup_invinsible_frames = 32;
  void clear_startup_invinsible_frames();
  static const int kStartupInvinsibleFramesFieldNumber = 32;
  ::google::protobuf::int32 startup_invinsible_frames() const;
  void set_startup_invinsible_frames(::google::protobuf::int32 value);

  // int32 hit_invinsible_frames = 33;
  void clear_hit_invinsible_frames();
  static const int kHitInvinsibleFramesFieldNumber = 33;
  ::google::protobuf::int32 hit_invinsible_frames() const;
  void set_hit_invinsible_frames(::google::protobuf::int32 value);

  // int32 explosion_species_id = 34;
  void clear_explosion_species_id();
  static const int kExplosionSpeciesIdFieldNumber = 34;
  ::google::protobuf::int32 explosion_species_id() const;
  void set_explosion_species_id(::google::protobuf::int32 value);

  // int32 perp_acc_mag = 35;
  void clear_perp_acc_mag();
  static const int kPerpAccMagFieldNumber = 35;
  ::google::protobuf::int32 perp_acc_mag() const;
  void set_perp_acc_mag(::google::protobuf::int32 value);

  // float speed_if_not_hit = 37;
  void clear_speed_if_not_hit();
  static const int kSpeedIfNotHitFieldNumber = 37;
  float speed_if_not_hit() const;
  void set_speed_if_not_hit(float value);

  // float hitbox_size_inc_x = 39;
  void clear_hitbox_size_inc_x();
  static const int kHitboxSizeIncXFieldNumber = 39;
  float hitbox_size_inc_x() const;
  void set_hitbox_size_inc_x(float value);

  // float hitbox_size_inc_y = 40;
  void clear_hitbox_size_inc_y();
  static const int kHitboxSizeIncYFieldNumber = 40;
  float hitbox_size_inc_y() const;
  void set_hitbox_size_inc_y(float value);

  // bool omit_soft_pushback = 38;
  void clear_omit_soft_pushback();
  static const int kOmitSoftPushbackFieldNumber = 38;
  bool omit_soft_pushback() const;
  void set_omit_soft_pushback(bool value);

  // bool remains_upon_hit = 41;
  void clear_remains_upon_hit();
  static const int kRemainsUponHitFieldNumber = 41;
  bool remains_upon_hit() const;
  void set_remains_upon_hit(bool value);

  // bool rotates_along_velocity = 42;
  void clear_rotates_along_velocity();
  static const int kRotatesAlongVelocityFieldNumber = 42;
  bool rotates_along_velocity() const;
  void set_rotates_along_velocity(bool value);

  // bool is_pixelated_active_vfx = 46;
  void clear_is_pixelated_active_vfx();
  static const int kIsPixelatedActiveVfxFieldNumber = 46;
  bool is_pixelated_active_vfx() const;
  void set_is_pixelated_active_vfx(bool value);

  // int32 default_hard_pushback_bounce_quota = 43;
  void clear_default_hard_pushback_bounce_quota();
  static const int kDefaultHardPushbackBounceQuotaFieldNumber = 43;
  ::google::protobuf::int32 default_hard_pushback_bounce_quota() const;
  void set_default_hard_pushback_bounce_quota(::google::protobuf::int32 value);

  // float hard_pushback_bounce_norm_factor = 44;
  void clear_hard_pushback_bounce_norm_factor();
  static const int kHardPushbackBounceNormFactorFieldNumber = 44;
  float hard_pushback_bounce_norm_factor() const;
  void set_hard_pushback_bounce_norm_factor(float value);

  // float hard_pushback_bounce_sheer_factor = 45;
  void clear_hard_pushback_bounce_sheer_factor();
  static const int kHardPushbackBounceSheerFactorFieldNumber = 45;
  float hard_pushback_bounce_sheer_factor() const;
  void set_hard_pushback_bounce_sheer_factor(float value);

  // float down_slope_primer_vel_y = 49;
  void clear_down_slope_primer_vel_y();
  static const int kDownSlopePrimerVelYFieldNumber = 49;
  float down_slope_primer_vel_y() const;
  void set_down_slope_primer_vel_y(float value);

  // bool is_pixelated_explostion_vfx = 47;
  void clear_is_pixelated_explostion_vfx();
  static const int kIsPixelatedExplostionVfxFieldNumber = 47;
  bool is_pixelated_explostion_vfx() const;
  void set_is_pixelated_explostion_vfx(bool value);

  // bool mh_vanish_on_melee_hit = 48;
  void clear_mh_vanish_on_melee_hit();
  static const int kMhVanishOnMeleeHitFieldNumber = 48;
  bool mh_vanish_on_melee_hit() const;
  void set_mh_vanish_on_melee_hit(bool value);

  // bool mh_updates_origin_pos = 50;
  void clear_mh_updates_origin_pos();
  static const int kMhUpdatesOriginPosFieldNumber = 50;
  bool mh_updates_origin_pos() const;
  void set_mh_updates_origin_pos(bool value);

  // bool beam_collision = 51;
  void clear_beam_collision();
  static const int kBeamCollisionFieldNumber = 51;
  bool beam_collision() const;
  void set_beam_collision(bool value);

  // float angular_frame_vel_cos = 52;
  void clear_angular_frame_vel_cos();
  static const int kAngularFrameVelCosFieldNumber = 52;
  float angular_frame_vel_cos() const;
  void set_angular_frame_vel_cos(float value);

  // float angular_frame_vel_sin = 53;
  void clear_angular_frame_vel_sin();
  static const int kAngularFrameVelSinFieldNumber = 53;
  float angular_frame_vel_sin() const;
  void set_angular_frame_vel_sin(float value);

  // float vision_offset_x = 54;
  void clear_vision_offset_x();
  static const int kVisionOffsetXFieldNumber = 54;
  float vision_offset_x() const;
  void set_vision_offset_x(float value);

  // float vision_offset_y = 55;
  void clear_vision_offset_y();
  static const int kVisionOffsetYFieldNumber = 55;
  float vision_offset_y() const;
  void set_vision_offset_y(float value);

  // float vision_size_x = 56;
  void clear_vision_size_x();
  static const int kVisionSizeXFieldNumber = 56;
  float vision_size_x() const;
  void set_vision_size_x(float value);

  // float vision_size_y = 57;
  void clear_vision_size_y();
  static const int kVisionSizeYFieldNumber = 57;
  float vision_size_y() const;
  void set_vision_size_y(float value);

  // int32 self_lock_vel_yWhen_flying = 58;
  void clear_self_lock_vel_ywhen_flying();
  static const int kSelfLockVelYWhenFlyingFieldNumber = 58;
  ::google::protobuf::int32 self_lock_vel_ywhen_flying() const;
  void set_self_lock_vel_ywhen_flying(::google::protobuf::int32 value);

  // uint32 elemental_attrs = 59;
  void clear_elemental_attrs();
  static const int kElementalAttrsFieldNumber = 59;
  ::google::protobuf::uint32 elemental_attrs() const;
  void set_elemental_attrs(::google::protobuf::uint32 value);

  // float spin_anchor_x = 62;
  void clear_spin_anchor_x();
  static const int kSpinAnchorXFieldNumber = 62;
  float spin_anchor_x() const;
  void set_spin_anchor_x(float value);

  // float spin_anchor_y = 63;
  void clear_spin_anchor_y();
  static const int kSpinAnchorYFieldNumber = 63;
  float spin_anchor_y() const;
  void set_spin_anchor_y(float value);

  // bool cancellable_by_inventory_slot_c = 60;
  void clear_cancellable_by_inventory_slot_c();
  static const int kCancellableByInventorySlotCFieldNumber = 60;
  bool cancellable_by_inventory_slot_c() const;
  void set_cancellable_by_inventory_slot_c(bool value);

  // bool cancellable_by_inventory_slot_d = 61;
  void clear_cancellable_by_inventory_slot_d();
  static const int kCancellableByInventorySlotDFieldNumber = 61;
  bool cancellable_by_inventory_slot_d() const;
  void set_cancellable_by_inventory_slot_d(bool value);

  // bool touch_explosion_bomb_collision = 65;
  void clear_touch_explosion_bomb_collision();
  static const int kTouchExplosionBombCollisionFieldNumber = 65;
  bool touch_explosion_bomb_collision() const;
  void set_touch_explosion_bomb_collision(bool value);

  // bool air_riding_ground_wave = 66;
  void clear_air_riding_ground_wave();
  static const int kAirRidingGroundWaveFieldNumber = 66;
  bool air_riding_ground_wave() const;
  void set_air_riding_ground_wave(bool value);

  // float beam_visual_size_y = 64;
  void clear_beam_visual_size_y();
  static const int kBeamVisualSizeYFieldNumber = 64;
  float beam_visual_size_y() const;
  void set_beam_visual_size_y(float value);

  // bool ground_impact_melee_collision = 67;
  void clear_ground_impact_melee_collision();
  static const int kGroundImpactMeleeCollisionFieldNumber = 67;
  bool ground_impact_melee_collision() const;
  void set_ground_impact_melee_collision(bool value);

  // bool wall_impact_melee_collision = 68;
  void clear_wall_impact_melee_collision();
  static const int kWallImpactMeleeCollisionFieldNumber = 68;
  bool wall_impact_melee_collision() const;
  void set_wall_impact_melee_collision(bool value);

  // bool mh_inherits_spin = 69;
  void clear_mh_inherits_spin();
  static const int kMhInheritsSpinFieldNumber = 69;
  bool mh_inherits_spin() const;
  void set_mh_inherits_spin(bool value);

  // bool no_explosion_on_hard_pushback = 73;
  void clear_no_explosion_on_hard_pushback();
  static const int kNoExplosionOnHardPushbackFieldNumber = 73;
  bool no_explosion_on_hard_pushback() const;
  void set_no_explosion_on_hard_pushback(bool value);

  // float init_spin_cos = 70;
  void clear_init_spin_cos();
  static const int kInitSpinCosFieldNumber = 70;
  float init_spin_cos() const;
  void set_init_spin_cos(float value);

  // float init_spin_sin = 71;
  void clear_init_spin_sin();
  static const int kInitSpinSinFieldNumber = 71;
  float init_spin_sin() const;
  void set_init_spin_sin(float value);

  // int32 finishing_frames = 72;
  void clear_finishing_frames();
  static const int kFinishingFramesFieldNumber = 72;
  ::google::protobuf::int32 finishing_frames() const;
  void set_finishing_frames(::google::protobuf::int32 value);

  // int32 startup_vfx_species_id = 74;
  void clear_startup_vfx_species_id();
  static const int kStartupVfxSpeciesIdFieldNumber = 74;
  ::google::protobuf::int32 startup_vfx_species_id() const;
  void set_startup_vfx_species_id(::google::protobuf::int32 value);

  // .shared.IfaceCat ifc = 75;
  void clear_ifc();
  static const int kIfcFieldNumber = 75;
  ::shared::IfaceCat ifc() const;
  void set_ifc(::shared::IfaceCat value);

  // bool reflect_fireball_xIf_not_harder = 76;
  void clear_reflect_fireball_xif_not_harder();
  static const int kReflectFireballXIfNotHarderFieldNumber = 76;
  bool reflect_fireball_xif_not_harder() const;
  void set_reflect_fireball_xif_not_harder(bool value);

  // bool rejects_reflection_from_another_bullet = 77;
  void clear_rejects_reflection_from_another_bullet();
  static const int kRejectsReflectionFromAnotherBulletFieldNumber = 77;
  bool rejects_reflection_from_another_bullet() const;
  void set_rejects_reflection_from_another_bullet(bool value);

  // bool provides_xHard_pushback = 78;
  void clear_provides_xhard_pushback();
  static const int kProvidesXHardPushbackFieldNumber = 78;
  bool provides_xhard_pushback() const;
  void set_provides_xhard_pushback(bool value);

  // bool provides_yHard_pushback_top = 79;
  void clear_provides_yhard_pushback_top();
  static const int kProvidesYHardPushbackTopFieldNumber = 79;
  bool provides_yhard_pushback_top() const;
  void set_provides_yhard_pushback_top(bool value);

  // bool provides_yHard_pushback_bottom = 80;
  void clear_provides_yhard_pushback_bottom();
  static const int kProvidesYHardPushbackBottomFieldNumber = 80;
  bool provides_yhard_pushback_bottom() const;
  void set_provides_yhard_pushback_bottom(bool value);

  // bool ignore_slope_deceleration = 81;
  void clear_ignore_slope_deceleration();
  static const int kIgnoreSlopeDecelerationFieldNumber = 81;
  bool ignore_slope_deceleration() const;
  void set_ignore_slope_deceleration(bool value);

  // bool rotate_offender_with_spin = 82;
  void clear_rotate_offender_with_spin();
  static const int kRotateOffenderWithSpinFieldNumber = 82;
  bool rotate_offender_with_spin() const;
  void set_rotate_offender_with_spin(bool value);

  // bool mh_not_trigger_on_ch_hit = 83;
  void clear_mh_not_trigger_on_ch_hit();
  static const int kMhNotTriggerOnChHitFieldNumber = 83;
  bool mh_not_trigger_on_ch_hit() const;
  void set_mh_not_trigger_on_ch_hit(bool value);

  // bool mh_not_trigger_on_harder_bullet_hit = 84;
  void clear_mh_not_trigger_on_harder_bullet_hit();
  static const int kMhNotTriggerOnHarderBulletHitFieldNumber = 84;
  bool mh_not_trigger_on_harder_bullet_hit() const;
  void set_mh_not_trigger_on_harder_bullet_hit(bool value);

  // bool mh_not_trigger_on_hard_pushback_hit = 85;
  void clear_mh_not_trigger_on_hard_pushback_hit();
  static const int kMhNotTriggerOnHardPushbackHitFieldNumber = 85;
  bool mh_not_trigger_on_hard_pushback_hit() const;
  void set_mh_not_trigger_on_hard_pushback_hit(bool value);

  // bool hopper_missile = 86;
  void clear_hopper_missile();
  static const int kHopperMissileFieldNumber = 86;
  bool hopper_missile() const;
  void set_hopper_missile(bool value);

  // bool beam_rendering = 87;
  void clear_beam_rendering();
  static const int kBeamRenderingFieldNumber = 87;
  bool beam_rendering() const;
  void set_beam_rendering(bool value);

  // uint32 missile_search_interval_pow2Minus1 = 88;
  void clear_missile_search_interval_pow2minus1();
  static const int kMissileSearchIntervalPow2Minus1FieldNumber = 88;
  ::google::protobuf::uint32 missile_search_interval_pow2minus1() const;
  void set_missile_search_interval_pow2minus1(::google::protobuf::uint32 value);

  // int32 inplace_vanish_explosion_species_id = 90;
  void clear_inplace_vanish_explosion_species_id();
  static const int kInplaceVanishExplosionSpeciesIdFieldNumber = 90;
  ::google::protobuf::int32 inplace_vanish_explosion_species_id() const;
  void set_inplace_vanish_explosion_species_id(::google::protobuf::int32 value);

  // int32 anim_looping_rdf_offset = 91;
  void clear_anim_looping_rdf_offset();
  static const int kAnimLoopingRdfOffsetFieldNumber = 91;
  ::google::protobuf::int32 anim_looping_rdf_offset() const;
  void set_anim_looping_rdf_offset(::google::protobuf::int32 value);

  // int32 explosion_anim_looping_rdf_offset = 92;
  void clear_explosion_anim_looping_rdf_offset();
  static const int kExplosionAnimLoopingRdfOffsetFieldNumber = 92;
  ::google::protobuf::int32 explosion_anim_looping_rdf_offset() const;
  void set_explosion_anim_looping_rdf_offset(::google::protobuf::int32 value);

  // float gauge_inc_reduction_ratio = 93;
  void clear_gauge_inc_reduction_ratio();
  static const int kGaugeIncReductionRatioFieldNumber = 93;
  float gauge_inc_reduction_ratio() const;
  void set_gauge_inc_reduction_ratio(float value);

  // uint32 guard_breaker_extra_hit_cnt = 95;
  void clear_guard_breaker_extra_hit_cnt();
  static const int kGuardBreakerExtraHitCntFieldNumber = 95;
  ::google::protobuf::uint32 guard_breaker_extra_hit_cnt() const;
  void set_guard_breaker_extra_hit_cnt(::google::protobuf::uint32 value);

  // bool use_ch_offset_regardless_of_emission_mh = 89;
  void clear_use_ch_offset_regardless_of_emission_mh();
  static const int kUseChOffsetRegardlessOfEmissionMhFieldNumber = 89;
  bool use_ch_offset_regardless_of_emission_mh() const;
  void set_use_ch_offset_regardless_of_emission_mh(bool value);

  // bool mh_inherits_frames_in_bl_state = 94;
  void clear_mh_inherits_frames_in_bl_state();
  static const int kMhInheritsFramesInBlStateFieldNumber = 94;
  bool mh_inherits_frames_in_bl_state() const;
  void set_mh_inherits_frames_in_bl_state(bool value);

  // bool takes_def1As_hard_pushback = 96;
  void clear_takes_def1as_hard_pushback();
  static const int kTakesDef1AsHardPushbackFieldNumber = 96;
  bool takes_def1as_hard_pushback() const;
  void set_takes_def1as_hard_pushback(bool value);

  // bool takes_gravity = 1030;
  void clear_takes_gravity();
  static const int kTakesGravityFieldNumber = 1030;
  bool takes_gravity() const;
  void set_takes_gravity(bool value);

  // uint64 collision_type_mask = 1029;
  void clear_collision_type_mask();
  static const int kCollisionTypeMaskFieldNumber = 1029;
  ::google::protobuf::uint64 collision_type_mask() const;
  void set_collision_type_mask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:shared.BulletConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      BulletConfig_CancelTransitEntry_DoNotUse,
      ::google::protobuf::int32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > cancel_transit_;
  ::google::protobuf::internal::ArenaStringPtr character_emit_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr fireball_emit_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr explosion_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr active_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr explosion_on_flesh_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr explosion_on_rock_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr explosion_on_metal_sfx_name_;
  ::google::protobuf::internal::ArenaStringPtr explosion_on_wood_sfx_name_;
  ::shared::BuffConfig* buff_config_;
  ::google::protobuf::int32 startup_frames_;
  ::google::protobuf::int32 cancellable_st_frame_;
  ::google::protobuf::int32 cancellable_ed_frame_;
  ::google::protobuf::int32 active_frames_;
  ::google::protobuf::int32 hit_stun_frames_;
  ::google::protobuf::int32 block_stun_frames_;
  float pushback_vel_x_;
  float pushback_vel_y_;
  ::google::protobuf::int32 damage_;
  float self_lock_vel_x_;
  float self_lock_vel_y_;
  float hitbox_offset_x_;
  float hitbox_offset_y_;
  float hitbox_size_x_;
  float hitbox_size_y_;
  ::google::protobuf::int32 species_id_;
  ::google::protobuf::int32 explosion_frames_;
  int b_type_;
  int mh_type_;
  ::google::protobuf::uint32 simultaneous_multi_hit_cnt_;
  float speed_;
  ::google::protobuf::int32 dir_x_;
  ::google::protobuf::int32 dir_y_;
  ::google::protobuf::int32 repeat_quota_;
  ::google::protobuf::int32 active_vfx_species_id_;
  bool blow_up_;
  bool allows_walking_;
  bool allows_crouching_;
  bool delay_self_vel_to_active_;
  ::google::protobuf::int32 explosion_vfx_species_id_;
  ::google::protobuf::int32 hardness_;
  ::google::protobuf::int32 startup_invinsible_frames_;
  ::google::protobuf::int32 hit_invinsible_frames_;
  ::google::protobuf::int32 explosion_species_id_;
  ::google::protobuf::int32 perp_acc_mag_;
  float speed_if_not_hit_;
  float hitbox_size_inc_x_;
  float hitbox_size_inc_y_;
  bool omit_soft_pushback_;
  bool remains_upon_hit_;
  bool rotates_along_velocity_;
  bool is_pixelated_active_vfx_;
  ::google::protobuf::int32 default_hard_pushback_bounce_quota_;
  float hard_pushback_bounce_norm_factor_;
  float hard_pushback_bounce_sheer_factor_;
  float down_slope_primer_vel_y_;
  bool is_pixelated_explostion_vfx_;
  bool mh_vanish_on_melee_hit_;
  bool mh_updates_origin_pos_;
  bool beam_collision_;
  float angular_frame_vel_cos_;
  float angular_frame_vel_sin_;
  float vision_offset_x_;
  float vision_offset_y_;
  float vision_size_x_;
  float vision_size_y_;
  ::google::protobuf::int32 self_lock_vel_ywhen_flying_;
  ::google::protobuf::uint32 elemental_attrs_;
  float spin_anchor_x_;
  float spin_anchor_y_;
  bool cancellable_by_inventory_slot_c_;
  bool cancellable_by_inventory_slot_d_;
  bool touch_explosion_bomb_collision_;
  bool air_riding_ground_wave_;
  float beam_visual_size_y_;
  bool ground_impact_melee_collision_;
  bool wall_impact_melee_collision_;
  bool mh_inherits_spin_;
  bool no_explosion_on_hard_pushback_;
  float init_spin_cos_;
  float init_spin_sin_;
  ::google::protobuf::int32 finishing_frames_;
  ::google::protobuf::int32 startup_vfx_species_id_;
  int ifc_;
  bool reflect_fireball_xif_not_harder_;
  bool rejects_reflection_from_another_bullet_;
  bool provides_xhard_pushback_;
  bool provides_yhard_pushback_top_;
  bool provides_yhard_pushback_bottom_;
  bool ignore_slope_deceleration_;
  bool rotate_offender_with_spin_;
  bool mh_not_trigger_on_ch_hit_;
  bool mh_not_trigger_on_harder_bullet_hit_;
  bool mh_not_trigger_on_hard_pushback_hit_;
  bool hopper_missile_;
  bool beam_rendering_;
  ::google::protobuf::uint32 missile_search_interval_pow2minus1_;
  ::google::protobuf::int32 inplace_vanish_explosion_species_id_;
  ::google::protobuf::int32 anim_looping_rdf_offset_;
  ::google::protobuf::int32 explosion_anim_looping_rdf_offset_;
  float gauge_inc_reduction_ratio_;
  ::google::protobuf::uint32 guard_breaker_extra_hit_cnt_;
  bool use_ch_offset_regardless_of_emission_mh_;
  bool mh_inherits_frames_in_bl_state_;
  bool takes_def1as_hard_pushback_;
  bool takes_gravity_;
  ::google::protobuf::uint64 collision_type_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Bullet :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Bullet) */ {
 public:
  Bullet();
  virtual ~Bullet();

  Bullet(const Bullet& from);

  inline Bullet& operator=(const Bullet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Bullet(Bullet&& from) noexcept
    : Bullet() {
    *this = ::std::move(from);
  }

  inline Bullet& operator=(Bullet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Bullet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Bullet* internal_default_instance() {
    return reinterpret_cast<const Bullet*>(
               &_Bullet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(Bullet* other);
  friend void swap(Bullet& a, Bullet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Bullet* New() const final {
    return CreateMaybeMessage<Bullet>(nullptr);
  }

  Bullet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Bullet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Bullet& from);
  void MergeFrom(const Bullet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bullet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.BulletState bl_state = 1;
  void clear_bl_state();
  static const int kBlStateFieldNumber = 1;
  ::shared::BulletState bl_state() const;
  void set_bl_state(::shared::BulletState value);

  // int32 frames_in_bl_state = 2;
  void clear_frames_in_bl_state();
  static const int kFramesInBlStateFieldNumber = 2;
  ::google::protobuf::int32 frames_in_bl_state() const;
  void set_frames_in_bl_state(::google::protobuf::int32 value);

  // int32 bullet_local_id = 3;
  void clear_bullet_local_id();
  static const int kBulletLocalIdFieldNumber = 3;
  ::google::protobuf::int32 bullet_local_id() const;
  void set_bullet_local_id(::google::protobuf::int32 value);

  // int32 originated_render_frame_id = 4;
  void clear_originated_render_frame_id();
  static const int kOriginatedRenderFrameIdFieldNumber = 4;
  ::google::protobuf::int32 originated_render_frame_id() const;
  void set_originated_render_frame_id(::google::protobuf::int32 value);

  // int32 offender_join_index = 5;
  void clear_offender_join_index();
  static const int kOffenderJoinIndexFieldNumber = 5;
  ::google::protobuf::int32 offender_join_index() const;
  void set_offender_join_index(::google::protobuf::int32 value);

  // int32 offender_trap_local_id = 6;
  void clear_offender_trap_local_id();
  static const int kOffenderTrapLocalIdFieldNumber = 6;
  ::google::protobuf::int32 offender_trap_local_id() const;
  void set_offender_trap_local_id(::google::protobuf::int32 value);

  // int32 team_id = 7;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 7;
  ::google::protobuf::int32 team_id() const;
  void set_team_id(::google::protobuf::int32 value);

  // int32 vert_moving_trap_local_id_upon_active = 8;
  void clear_vert_moving_trap_local_id_upon_active();
  static const int kVertMovingTrapLocalIdUponActiveFieldNumber = 8;
  ::google::protobuf::int32 vert_moving_trap_local_id_upon_active() const;
  void set_vert_moving_trap_local_id_upon_active(::google::protobuf::int32 value);

  // int32 repeat_quota_left = 9;
  void clear_repeat_quota_left();
  static const int kRepeatQuotaLeftFieldNumber = 9;
  ::google::protobuf::int32 repeat_quota_left() const;
  void set_repeat_quota_left(::google::protobuf::int32 value);

  // int32 remaining_hard_pushback_bounce_quota = 10;
  void clear_remaining_hard_pushback_bounce_quota();
  static const int kRemainingHardPushbackBounceQuotaFieldNumber = 10;
  ::google::protobuf::int32 remaining_hard_pushback_bounce_quota() const;
  void set_remaining_hard_pushback_bounce_quota(::google::protobuf::int32 value);

  // int32 target_character_join_index = 11;
  void clear_target_character_join_index();
  static const int kTargetCharacterJoinIndexFieldNumber = 11;
  ::google::protobuf::int32 target_character_join_index() const;
  void set_target_character_join_index(::google::protobuf::int32 value);

  // int32 damage_dealed = 12;
  void clear_damage_dealed();
  static const int kDamageDealedFieldNumber = 12;
  ::google::protobuf::int32 damage_dealed() const;
  void set_damage_dealed(::google::protobuf::int32 value);

  // .shared.IfaceCat exploded_on_ifc = 13;
  void clear_exploded_on_ifc();
  static const int kExplodedOnIfcFieldNumber = 13;
  ::shared::IfaceCat exploded_on_ifc() const;
  void set_exploded_on_ifc(::shared::IfaceCat value);

  // float x = 14;
  void clear_x();
  static const int kXFieldNumber = 14;
  float x() const;
  void set_x(float value);

  // float y = 15;
  void clear_y();
  static const int kYFieldNumber = 15;
  float y() const;
  void set_y(float value);

  // float dir_x = 16;
  void clear_dir_x();
  static const int kDirXFieldNumber = 16;
  float dir_x() const;
  void set_dir_x(float value);

  // float dir_y = 17;
  void clear_dir_y();
  static const int kDirYFieldNumber = 17;
  float dir_y() const;
  void set_dir_y(float value);

  // float vel_x = 18;
  void clear_vel_x();
  static const int kVelXFieldNumber = 18;
  float vel_x() const;
  void set_vel_x(float value);

  // float vel_y = 19;
  void clear_vel_y();
  static const int kVelYFieldNumber = 19;
  float vel_y() const;
  void set_vel_y(float value);

  // float originated_x = 20;
  void clear_originated_x();
  static const int kOriginatedXFieldNumber = 20;
  float originated_x() const;
  void set_originated_x(float value);

  // float originated_y = 21;
  void clear_originated_y();
  static const int kOriginatedYFieldNumber = 21;
  float originated_y() const;
  void set_originated_y(float value);

  // float spin_cos = 22;
  void clear_spin_cos();
  static const int kSpinCosFieldNumber = 22;
  float spin_cos() const;
  void set_spin_cos(float value);

  // float spin_sin = 23;
  void clear_spin_sin();
  static const int kSpinSinFieldNumber = 23;
  float spin_sin() const;
  void set_spin_sin(float value);

  // int32 active_skill_hit = 24;
  void clear_active_skill_hit();
  static const int kActiveSkillHitFieldNumber = 24;
  ::google::protobuf::int32 active_skill_hit() const;
  void set_active_skill_hit(::google::protobuf::int32 value);

  // uint32 skill_id = 25;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 25;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.Bullet)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int bl_state_;
  ::google::protobuf::int32 frames_in_bl_state_;
  ::google::protobuf::int32 bullet_local_id_;
  ::google::protobuf::int32 originated_render_frame_id_;
  ::google::protobuf::int32 offender_join_index_;
  ::google::protobuf::int32 offender_trap_local_id_;
  ::google::protobuf::int32 team_id_;
  ::google::protobuf::int32 vert_moving_trap_local_id_upon_active_;
  ::google::protobuf::int32 repeat_quota_left_;
  ::google::protobuf::int32 remaining_hard_pushback_bounce_quota_;
  ::google::protobuf::int32 target_character_join_index_;
  ::google::protobuf::int32 damage_dealed_;
  int exploded_on_ifc_;
  float x_;
  float y_;
  float dir_x_;
  float dir_y_;
  float vel_x_;
  float vel_y_;
  float originated_x_;
  float originated_y_;
  float spin_cos_;
  float spin_sin_;
  ::google::protobuf::int32 active_skill_hit_;
  ::google::protobuf::uint32 skill_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT TrapConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TrapConfig) */ {
 public:
  TrapConfig();
  virtual ~TrapConfig();

  TrapConfig(const TrapConfig& from);

  inline TrapConfig& operator=(const TrapConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrapConfig(TrapConfig&& from) noexcept
    : TrapConfig() {
    *this = ::std::move(from);
  }

  inline TrapConfig& operator=(TrapConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrapConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrapConfig* internal_default_instance() {
    return reinterpret_cast<const TrapConfig*>(
               &_TrapConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(TrapConfig* other);
  friend void swap(TrapConfig& a, TrapConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrapConfig* New() const final {
    return CreateMaybeMessage<TrapConfig>(nullptr);
  }

  TrapConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrapConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrapConfig& from);
  void MergeFrom(const TrapConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrapConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string species_name = 1024;
  void clear_species_name();
  static const int kSpeciesNameFieldNumber = 1024;
  const ::std::string& species_name() const;
  void set_species_name(const ::std::string& value);
  #if LANG_CXX11
  void set_species_name(::std::string&& value);
  #endif
  void set_species_name(const char* value);
  void set_species_name(const char* value, size_t size);
  ::std::string* mutable_species_name();
  ::std::string* release_species_name();
  void set_allocated_species_name(::std::string* species_name);

  // int32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // int32 explosion_species_id = 2;
  void clear_explosion_species_id();
  static const int kExplosionSpeciesIdFieldNumber = 2;
  ::google::protobuf::int32 explosion_species_id() const;
  void set_explosion_species_id(::google::protobuf::int32 value);

  // int32 explosion_frames = 3;
  void clear_explosion_frames();
  static const int kExplosionFramesFieldNumber = 3;
  ::google::protobuf::int32 explosion_frames() const;
  void set_explosion_frames(::google::protobuf::int32 value);

  // int32 damage = 5;
  void clear_damage();
  static const int kDamageFieldNumber = 5;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // int32 hit_stun_frames = 6;
  void clear_hit_stun_frames();
  static const int kHitStunFramesFieldNumber = 6;
  ::google::protobuf::int32 hit_stun_frames() const;
  void set_hit_stun_frames(::google::protobuf::int32 value);

  // int32 hit_invinsible_frames = 7;
  void clear_hit_invinsible_frames();
  static const int kHitInvinsibleFramesFieldNumber = 7;
  ::google::protobuf::int32 hit_invinsible_frames() const;
  void set_hit_invinsible_frames(::google::protobuf::int32 value);

  // int32 hardness = 9;
  void clear_hardness();
  static const int kHardnessFieldNumber = 9;
  ::google::protobuf::int32 hardness() const;
  void set_hardness(::google::protobuf::int32 value);

  // bool blow_up = 4;
  void clear_blow_up();
  static const int kBlowUpFieldNumber = 4;
  bool blow_up() const;
  void set_blow_up(bool value);

  // bool deactivatable = 8;
  void clear_deactivatable();
  static const int kDeactivatableFieldNumber = 8;
  bool deactivatable() const;
  void set_deactivatable(bool value);

  // bool deactivate_upon_triggered = 10;
  void clear_deactivate_upon_triggered();
  static const int kDeactivateUponTriggeredFieldNumber = 10;
  bool deactivate_upon_triggered() const;
  void set_deactivate_upon_triggered(bool value);

  // bool patrol_cue_requires_full_contain = 15;
  void clear_patrol_cue_requires_full_contain();
  static const int kPatrolCueRequiresFullContainFieldNumber = 15;
  bool patrol_cue_requires_full_contain() const;
  void set_patrol_cue_requires_full_contain(bool value);

  // float const_friction_vel_x_top = 11;
  void clear_const_friction_vel_x_top();
  static const int kConstFrictionVelXTopFieldNumber = 11;
  float const_friction_vel_x_top() const;
  void set_const_friction_vel_x_top(float value);

  // float const_friction_vel_x_bottom = 12;
  void clear_const_friction_vel_x_bottom();
  static const int kConstFrictionVelXBottomFieldNumber = 12;
  float const_friction_vel_x_bottom() const;
  void set_const_friction_vel_x_bottom(float value);

  // float const_friction_vel_y_left = 13;
  void clear_const_friction_vel_y_left();
  static const int kConstFrictionVelYLeftFieldNumber = 13;
  float const_friction_vel_y_left() const;
  void set_const_friction_vel_y_left(float value);

  // float const_friction_vel_y_right = 14;
  void clear_const_friction_vel_y_right();
  static const int kConstFrictionVelYRightFieldNumber = 14;
  float const_friction_vel_y_right() const;
  void set_const_friction_vel_y_right(float value);

  // float spin_anchor_x = 16;
  void clear_spin_anchor_x();
  static const int kSpinAnchorXFieldNumber = 16;
  float spin_anchor_x() const;
  void set_spin_anchor_x(float value);

  // float spin_anchor_y = 17;
  void clear_spin_anchor_y();
  static const int kSpinAnchorYFieldNumber = 17;
  float spin_anchor_y() const;
  void set_spin_anchor_y(float value);

  // float angular_frame_vel_cos = 18;
  void clear_angular_frame_vel_cos();
  static const int kAngularFrameVelCosFieldNumber = 18;
  float angular_frame_vel_cos() const;
  void set_angular_frame_vel_cos(float value);

  // float angular_frame_vel_sin = 19;
  void clear_angular_frame_vel_sin();
  static const int kAngularFrameVelSinFieldNumber = 19;
  float angular_frame_vel_sin() const;
  void set_angular_frame_vel_sin(float value);

  // float intrinsic_spin_cos = 20;
  void clear_intrinsic_spin_cos();
  static const int kIntrinsicSpinCosFieldNumber = 20;
  float intrinsic_spin_cos() const;
  void set_intrinsic_spin_cos(float value);

  // float intrinsic_spin_sin = 21;
  void clear_intrinsic_spin_sin();
  static const int kIntrinsicSpinSinFieldNumber = 21;
  float intrinsic_spin_sin() const;
  void set_intrinsic_spin_sin(float value);

  // uint32 atk1_skill_id = 23;
  void clear_atk1_skill_id();
  static const int kAtk1SkillIdFieldNumber = 23;
  ::google::protobuf::uint32 atk1_skill_id() const;
  void set_atk1_skill_id(::google::protobuf::uint32 value);

  // bool atk1_upon_triggered = 22;
  void clear_atk1_upon_triggered();
  static const int kAtk1UponTriggeredFieldNumber = 22;
  bool atk1_upon_triggered() const;
  void set_atk1_upon_triggered(bool value);

  // bool is_rotary = 24;
  void clear_is_rotary();
  static const int kIsRotaryFieldNumber = 24;
  bool is_rotary() const;
  void set_is_rotary(bool value);

  // bool no_x_flip_rendering = 25;
  void clear_no_x_flip_rendering();
  static const int kNoXFlipRenderingFieldNumber = 25;
  bool no_x_flip_rendering() const;
  void set_no_x_flip_rendering(bool value);

  // @@protoc_insertion_point(class_scope:shared.TrapConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr species_name_;
  ::google::protobuf::int32 species_id_;
  ::google::protobuf::int32 explosion_species_id_;
  ::google::protobuf::int32 explosion_frames_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 hit_stun_frames_;
  ::google::protobuf::int32 hit_invinsible_frames_;
  ::google::protobuf::int32 hardness_;
  bool blow_up_;
  bool deactivatable_;
  bool deactivate_upon_triggered_;
  bool patrol_cue_requires_full_contain_;
  float const_friction_vel_x_top_;
  float const_friction_vel_x_bottom_;
  float const_friction_vel_y_left_;
  float const_friction_vel_y_right_;
  float spin_anchor_x_;
  float spin_anchor_y_;
  float angular_frame_vel_cos_;
  float angular_frame_vel_sin_;
  float intrinsic_spin_cos_;
  float intrinsic_spin_sin_;
  ::google::protobuf::uint32 atk1_skill_id_;
  bool atk1_upon_triggered_;
  bool is_rotary_;
  bool no_x_flip_rendering_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT TrapConfigFromTiled :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TrapConfigFromTiled) */ {
 public:
  TrapConfigFromTiled();
  virtual ~TrapConfigFromTiled();

  TrapConfigFromTiled(const TrapConfigFromTiled& from);

  inline TrapConfigFromTiled& operator=(const TrapConfigFromTiled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrapConfigFromTiled(TrapConfigFromTiled&& from) noexcept
    : TrapConfigFromTiled() {
    *this = ::std::move(from);
  }

  inline TrapConfigFromTiled& operator=(TrapConfigFromTiled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrapConfigFromTiled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrapConfigFromTiled* internal_default_instance() {
    return reinterpret_cast<const TrapConfigFromTiled*>(
               &_TrapConfigFromTiled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(TrapConfigFromTiled* other);
  friend void swap(TrapConfigFromTiled& a, TrapConfigFromTiled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrapConfigFromTiled* New() const final {
    return CreateMaybeMessage<TrapConfigFromTiled>(nullptr);
  }

  TrapConfigFromTiled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrapConfigFromTiled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrapConfigFromTiled& from);
  void MergeFrom(const TrapConfigFromTiled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrapConfigFromTiled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // int32 quota = 2;
  void clear_quota();
  static const int kQuotaFieldNumber = 2;
  ::google::protobuf::int32 quota() const;
  void set_quota(::google::protobuf::int32 value);

  // float speed = 3;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  float speed() const;
  void set_speed(float value);

  // int32 dir_x = 4;
  void clear_dir_x();
  static const int kDirXFieldNumber = 4;
  ::google::protobuf::int32 dir_x() const;
  void set_dir_x(::google::protobuf::int32 value);

  // int32 dir_y = 5;
  void clear_dir_y();
  static const int kDirYFieldNumber = 5;
  ::google::protobuf::int32 dir_y() const;
  void set_dir_y(::google::protobuf::int32 value);

  // int32 subscribes_to_id = 7;
  void clear_subscribes_to_id();
  static const int kSubscribesToIdFieldNumber = 7;
  ::google::protobuf::int32 subscribes_to_id() const;
  void set_subscribes_to_id(::google::protobuf::int32 value);

  // int32 subscribes_to_id_after_initial_fire = 8;
  void clear_subscribes_to_id_after_initial_fire();
  static const int kSubscribesToIdAfterInitialFireFieldNumber = 8;
  ::google::protobuf::int32 subscribes_to_id_after_initial_fire() const;
  void set_subscribes_to_id_after_initial_fire(::google::protobuf::int32 value);

  // int32 subscribes_to_id_alt = 9;
  void clear_subscribes_to_id_alt();
  static const int kSubscribesToIdAltFieldNumber = 9;
  ::google::protobuf::int32 subscribes_to_id_alt() const;
  void set_subscribes_to_id_alt(::google::protobuf::int32 value);

  // float box_cw = 10;
  void clear_box_cw();
  static const int kBoxCwFieldNumber = 10;
  float box_cw() const;
  void set_box_cw(float value);

  // float box_ch = 11;
  void clear_box_ch();
  static const int kBoxChFieldNumber = 11;
  float box_ch() const;
  void set_box_ch(float value);

  // float init_no_angular_vel = 12;
  void clear_init_no_angular_vel();
  static const int kInitNoAngularVelFieldNumber = 12;
  float init_no_angular_vel() const;
  void set_init_no_angular_vel(float value);

  // @@protoc_insertion_point(class_scope:shared.TrapConfigFromTiled)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 species_id_;
  ::google::protobuf::int32 quota_;
  float speed_;
  ::google::protobuf::int32 dir_x_;
  ::google::protobuf::int32 dir_y_;
  ::google::protobuf::int32 subscribes_to_id_;
  ::google::protobuf::int32 subscribes_to_id_after_initial_fire_;
  ::google::protobuf::int32 subscribes_to_id_alt_;
  float box_cw_;
  float box_ch_;
  float init_no_angular_vel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT TrapColliderAttr :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TrapColliderAttr) */ {
 public:
  TrapColliderAttr();
  virtual ~TrapColliderAttr();

  TrapColliderAttr(const TrapColliderAttr& from);

  inline TrapColliderAttr& operator=(const TrapColliderAttr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrapColliderAttr(TrapColliderAttr&& from) noexcept
    : TrapColliderAttr() {
    *this = ::std::move(from);
  }

  inline TrapColliderAttr& operator=(TrapColliderAttr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrapColliderAttr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrapColliderAttr* internal_default_instance() {
    return reinterpret_cast<const TrapColliderAttr*>(
               &_TrapColliderAttr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(TrapColliderAttr* other);
  friend void swap(TrapColliderAttr& a, TrapColliderAttr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrapColliderAttr* New() const final {
    return CreateMaybeMessage<TrapColliderAttr>(nullptr);
  }

  TrapColliderAttr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrapColliderAttr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrapColliderAttr& from);
  void MergeFrom(const TrapColliderAttr& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrapColliderAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.PatrolCue tc_pc = 15;
  bool has_tc_pc() const;
  void clear_tc_pc();
  static const int kTcPcFieldNumber = 15;
  const ::shared::PatrolCue& tc_pc() const;
  ::shared::PatrolCue* release_tc_pc();
  ::shared::PatrolCue* mutable_tc_pc();
  void set_allocated_tc_pc(::shared::PatrolCue* tc_pc);

  // int32 hitbox_offset_x = 1;
  void clear_hitbox_offset_x();
  static const int kHitboxOffsetXFieldNumber = 1;
  ::google::protobuf::int32 hitbox_offset_x() const;
  void set_hitbox_offset_x(::google::protobuf::int32 value);

  // int32 hitbox_offset_y = 2;
  void clear_hitbox_offset_y();
  static const int kHitboxOffsetYFieldNumber = 2;
  ::google::protobuf::int32 hitbox_offset_y() const;
  void set_hitbox_offset_y(::google::protobuf::int32 value);

  // int32 hitbox_size_x = 3;
  void clear_hitbox_size_x();
  static const int kHitboxSizeXFieldNumber = 3;
  ::google::protobuf::int32 hitbox_size_x() const;
  void set_hitbox_size_x(::google::protobuf::int32 value);

  // int32 hitbox_size_y = 4;
  void clear_hitbox_size_y();
  static const int kHitboxSizeYFieldNumber = 4;
  ::google::protobuf::int32 hitbox_size_y() const;
  void set_hitbox_size_y(::google::protobuf::int32 value);

  // bool provides_hard_pushback = 5;
  void clear_provides_hard_pushback();
  static const int kProvidesHardPushbackFieldNumber = 5;
  bool provides_hard_pushback() const;
  void set_provides_hard_pushback(bool value);

  // bool provides_damage = 6;
  void clear_provides_damage();
  static const int kProvidesDamageFieldNumber = 6;
  bool provides_damage() const;
  void set_provides_damage(bool value);

  // bool provides_escape = 7;
  void clear_provides_escape();
  static const int kProvidesEscapeFieldNumber = 7;
  bool provides_escape() const;
  void set_provides_escape(bool value);

  // bool provides_slip_jump = 8;
  void clear_provides_slip_jump();
  static const int kProvidesSlipJumpFieldNumber = 8;
  bool provides_slip_jump() const;
  void set_provides_slip_jump(bool value);

  // int32 species_id = 11;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 11;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // bool prohibits_wall_grabbing = 9;
  void clear_prohibits_wall_grabbing();
  static const int kProhibitsWallGrabbingFieldNumber = 9;
  bool prohibits_wall_grabbing() const;
  void set_prohibits_wall_grabbing(bool value);

  // bool forces_crouching = 10;
  void clear_forces_crouching();
  static const int kForcesCrouchingFieldNumber = 10;
  bool forces_crouching() const;
  void set_forces_crouching(bool value);

  // bool as_patrol_cue = 14;
  void clear_as_patrol_cue();
  static const int kAsPatrolCueFieldNumber = 14;
  bool as_patrol_cue() const;
  void set_as_patrol_cue(bool value);

  // int32 only_allows_aligned_vel_x = 12;
  void clear_only_allows_aligned_vel_x();
  static const int kOnlyAllowsAlignedVelXFieldNumber = 12;
  ::google::protobuf::int32 only_allows_aligned_vel_x() const;
  void set_only_allows_aligned_vel_x(::google::protobuf::int32 value);

  // int32 only_allows_aligned_vel_y = 13;
  void clear_only_allows_aligned_vel_y();
  static const int kOnlyAllowsAlignedVelYFieldNumber = 13;
  ::google::protobuf::int32 only_allows_aligned_vel_y() const;
  void set_only_allows_aligned_vel_y(::google::protobuf::int32 value);

  // int32 trap_local_id = 1024;
  void clear_trap_local_id();
  static const int kTrapLocalIdFieldNumber = 1024;
  ::google::protobuf::int32 trap_local_id() const;
  void set_trap_local_id(::google::protobuf::int32 value);

  // uint64 collision_type_mask = 1029;
  void clear_collision_type_mask();
  static const int kCollisionTypeMaskFieldNumber = 1029;
  ::google::protobuf::uint64 collision_type_mask() const;
  void set_collision_type_mask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:shared.TrapColliderAttr)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::PatrolCue* tc_pc_;
  ::google::protobuf::int32 hitbox_offset_x_;
  ::google::protobuf::int32 hitbox_offset_y_;
  ::google::protobuf::int32 hitbox_size_x_;
  ::google::protobuf::int32 hitbox_size_y_;
  bool provides_hard_pushback_;
  bool provides_damage_;
  bool provides_escape_;
  bool provides_slip_jump_;
  ::google::protobuf::int32 species_id_;
  bool prohibits_wall_grabbing_;
  bool forces_crouching_;
  bool as_patrol_cue_;
  ::google::protobuf::int32 only_allows_aligned_vel_x_;
  ::google::protobuf::int32 only_allows_aligned_vel_y_;
  ::google::protobuf::int32 trap_local_id_;
  ::google::protobuf::uint64 collision_type_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Trap :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Trap) */ {
 public:
  Trap();
  virtual ~Trap();

  Trap(const Trap& from);

  inline Trap& operator=(const Trap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Trap(Trap&& from) noexcept
    : Trap() {
    *this = ::std::move(from);
  }

  inline Trap& operator=(Trap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Trap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Trap* internal_default_instance() {
    return reinterpret_cast<const Trap*>(
               &_Trap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(Trap* other);
  friend void swap(Trap& a, Trap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Trap* New() const final {
    return CreateMaybeMessage<Trap>(nullptr);
  }

  Trap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Trap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Trap& from);
  void MergeFrom(const Trap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.TrapConfigFromTiled config_from_tiled = 3;
  bool has_config_from_tiled() const;
  void clear_config_from_tiled();
  static const int kConfigFromTiledFieldNumber = 3;
  const ::shared::TrapConfigFromTiled& config_from_tiled() const;
  ::shared::TrapConfigFromTiled* release_config_from_tiled();
  ::shared::TrapConfigFromTiled* mutable_config_from_tiled();
  void set_allocated_config_from_tiled(::shared::TrapConfigFromTiled* config_from_tiled);

  // int32 trap_local_id = 1;
  void clear_trap_local_id();
  static const int kTrapLocalIdFieldNumber = 1;
  ::google::protobuf::int32 trap_local_id() const;
  void set_trap_local_id(::google::protobuf::int32 value);

  // int32 patrol_cue_angular_vel_flip_mark = 2;
  void clear_patrol_cue_angular_vel_flip_mark();
  static const int kPatrolCueAngularVelFlipMarkFieldNumber = 2;
  ::google::protobuf::int32 patrol_cue_angular_vel_flip_mark() const;
  void set_patrol_cue_angular_vel_flip_mark(::google::protobuf::int32 value);

  // .shared.TrapState trap_state = 4;
  void clear_trap_state();
  static const int kTrapStateFieldNumber = 4;
  ::shared::TrapState trap_state() const;
  void set_trap_state(::shared::TrapState value);

  // int32 frames_in_trap_state = 5;
  void clear_frames_in_trap_state();
  static const int kFramesInTrapStateFieldNumber = 5;
  ::google::protobuf::int32 frames_in_trap_state() const;
  void set_frames_in_trap_state(::google::protobuf::int32 value);

  // bool is_completely_static = 6;
  void clear_is_completely_static();
  static const int kIsCompletelyStaticFieldNumber = 6;
  bool is_completely_static() const;
  void set_is_completely_static(bool value);

  // bool captured_by_patrol_cue = 7;
  void clear_captured_by_patrol_cue();
  static const int kCapturedByPatrolCueFieldNumber = 7;
  bool captured_by_patrol_cue() const;
  void set_captured_by_patrol_cue(bool value);

  // bool waiving_spontaneous_patrol = 10;
  void clear_waiving_spontaneous_patrol();
  static const int kWaivingSpontaneousPatrolFieldNumber = 10;
  bool waiving_spontaneous_patrol() const;
  void set_waiving_spontaneous_patrol(bool value);

  // int32 frames_in_patrol_cue = 8;
  void clear_frames_in_patrol_cue();
  static const int kFramesInPatrolCueFieldNumber = 8;
  ::google::protobuf::int32 frames_in_patrol_cue() const;
  void set_frames_in_patrol_cue(::google::protobuf::int32 value);

  // int32 waiving_patrol_cue_id = 9;
  void clear_waiving_patrol_cue_id();
  static const int kWaivingPatrolCueIdFieldNumber = 9;
  ::google::protobuf::int32 waiving_patrol_cue_id() const;
  void set_waiving_patrol_cue_id(::google::protobuf::int32 value);

  // int32 subscribes_to_trigger_local_id = 11;
  void clear_subscribes_to_trigger_local_id();
  static const int kSubscribesToTriggerLocalIdFieldNumber = 11;
  ::google::protobuf::int32 subscribes_to_trigger_local_id() const;
  void set_subscribes_to_trigger_local_id(::google::protobuf::int32 value);

  // int32 subscribes_to_trigger_local_id_alt = 12;
  void clear_subscribes_to_trigger_local_id_alt();
  static const int kSubscribesToTriggerLocalIdAltFieldNumber = 12;
  ::google::protobuf::int32 subscribes_to_trigger_local_id_alt() const;
  void set_subscribes_to_trigger_local_id_alt(::google::protobuf::int32 value);

  // float spin_cos = 13;
  void clear_spin_cos();
  static const int kSpinCosFieldNumber = 13;
  float spin_cos() const;
  void set_spin_cos(float value);

  // float spin_sin = 14;
  void clear_spin_sin();
  static const int kSpinSinFieldNumber = 14;
  float spin_sin() const;
  void set_spin_sin(float value);

  // float angular_frame_vel_cos = 15;
  void clear_angular_frame_vel_cos();
  static const int kAngularFrameVelCosFieldNumber = 15;
  float angular_frame_vel_cos() const;
  void set_angular_frame_vel_cos(float value);

  // float angular_frame_vel_sin = 16;
  void clear_angular_frame_vel_sin();
  static const int kAngularFrameVelSinFieldNumber = 16;
  float angular_frame_vel_sin() const;
  void set_angular_frame_vel_sin(float value);

  // float x = 17;
  void clear_x();
  static const int kXFieldNumber = 17;
  float x() const;
  void set_x(float value);

  // float y = 18;
  void clear_y();
  static const int kYFieldNumber = 18;
  float y() const;
  void set_y(float value);

  // int32 dir_x = 19;
  void clear_dir_x();
  static const int kDirXFieldNumber = 19;
  ::google::protobuf::int32 dir_x() const;
  void set_dir_x(::google::protobuf::int32 value);

  // int32 dir_y = 20;
  void clear_dir_y();
  static const int kDirYFieldNumber = 20;
  ::google::protobuf::int32 dir_y() const;
  void set_dir_y(::google::protobuf::int32 value);

  // float vel_x = 21;
  void clear_vel_x();
  static const int kVelXFieldNumber = 21;
  float vel_x() const;
  void set_vel_x(float value);

  // float vel_y = 22;
  void clear_vel_y();
  static const int kVelYFieldNumber = 22;
  float vel_y() const;
  void set_vel_y(float value);

  // @@protoc_insertion_point(class_scope:shared.Trap)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::TrapConfigFromTiled* config_from_tiled_;
  ::google::protobuf::int32 trap_local_id_;
  ::google::protobuf::int32 patrol_cue_angular_vel_flip_mark_;
  int trap_state_;
  ::google::protobuf::int32 frames_in_trap_state_;
  bool is_completely_static_;
  bool captured_by_patrol_cue_;
  bool waiving_spontaneous_patrol_;
  ::google::protobuf::int32 frames_in_patrol_cue_;
  ::google::protobuf::int32 waiving_patrol_cue_id_;
  ::google::protobuf::int32 subscribes_to_trigger_local_id_;
  ::google::protobuf::int32 subscribes_to_trigger_local_id_alt_;
  float spin_cos_;
  float spin_sin_;
  float angular_frame_vel_cos_;
  float angular_frame_vel_sin_;
  float x_;
  float y_;
  ::google::protobuf::int32 dir_x_;
  ::google::protobuf::int32 dir_y_;
  float vel_x_;
  float vel_y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT TriggerConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TriggerConfig) */ {
 public:
  TriggerConfig();
  virtual ~TriggerConfig();

  TriggerConfig(const TriggerConfig& from);

  inline TriggerConfig& operator=(const TriggerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerConfig(TriggerConfig&& from) noexcept
    : TriggerConfig() {
    *this = ::std::move(from);
  }

  inline TriggerConfig& operator=(TriggerConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TriggerConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerConfig* internal_default_instance() {
    return reinterpret_cast<const TriggerConfig*>(
               &_TriggerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(TriggerConfig* other);
  friend void swap(TriggerConfig& a, TriggerConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerConfig* New() const final {
    return CreateMaybeMessage<TriggerConfig>(nullptr);
  }

  TriggerConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerConfig& from);
  void MergeFrom(const TriggerConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string species_name = 2;
  void clear_species_name();
  static const int kSpeciesNameFieldNumber = 2;
  const ::std::string& species_name() const;
  void set_species_name(const ::std::string& value);
  #if LANG_CXX11
  void set_species_name(::std::string&& value);
  #endif
  void set_species_name(const char* value);
  void set_species_name(const char* value, size_t size);
  ::std::string* mutable_species_name();
  ::std::string* release_species_name();
  void set_allocated_species_name(::std::string* species_name);

  // int32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // .shared.TriggerType trigger_type = 3;
  void clear_trigger_type();
  static const int kTriggerTypeFieldNumber = 3;
  ::shared::TriggerType trigger_type() const;
  void set_trigger_type(::shared::TriggerType value);

  // uint64 collision_type_mask = 4;
  void clear_collision_type_mask();
  static const int kCollisionTypeMaskFieldNumber = 4;
  ::google::protobuf::uint64 collision_type_mask() const;
  void set_collision_type_mask(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:shared.TriggerConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr species_name_;
  ::google::protobuf::int32 species_id_;
  int trigger_type_;
  ::google::protobuf::uint64 collision_type_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PeerUdpAddr :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PeerUdpAddr) */ {
 public:
  PeerUdpAddr();
  virtual ~PeerUdpAddr();

  PeerUdpAddr(const PeerUdpAddr& from);

  inline PeerUdpAddr& operator=(const PeerUdpAddr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PeerUdpAddr(PeerUdpAddr&& from) noexcept
    : PeerUdpAddr() {
    *this = ::std::move(from);
  }

  inline PeerUdpAddr& operator=(PeerUdpAddr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PeerUdpAddr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PeerUdpAddr* internal_default_instance() {
    return reinterpret_cast<const PeerUdpAddr*>(
               &_PeerUdpAddr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(PeerUdpAddr* other);
  friend void swap(PeerUdpAddr& a, PeerUdpAddr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PeerUdpAddr* New() const final {
    return CreateMaybeMessage<PeerUdpAddr>(nullptr);
  }

  PeerUdpAddr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PeerUdpAddr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PeerUdpAddr& from);
  void MergeFrom(const PeerUdpAddr& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PeerUdpAddr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // int32 auth_key = 3;
  void clear_auth_key();
  static const int kAuthKeyFieldNumber = 3;
  ::google::protobuf::int32 auth_key() const;
  void set_auth_key(::google::protobuf::int32 value);

  // uint32 seq_no = 4;
  void clear_seq_no();
  static const int kSeqNoFieldNumber = 4;
  ::google::protobuf::uint32 seq_no() const;
  void set_seq_no(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.PeerUdpAddr)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 auth_key_;
  ::google::protobuf::uint32 seq_no_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT BattleColliderInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BattleColliderInfo) */ {
 public:
  BattleColliderInfo();
  virtual ~BattleColliderInfo();

  BattleColliderInfo(const BattleColliderInfo& from);

  inline BattleColliderInfo& operator=(const BattleColliderInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BattleColliderInfo(BattleColliderInfo&& from) noexcept
    : BattleColliderInfo() {
    *this = ::std::move(from);
  }

  inline BattleColliderInfo& operator=(BattleColliderInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BattleColliderInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BattleColliderInfo* internal_default_instance() {
    return reinterpret_cast<const BattleColliderInfo*>(
               &_BattleColliderInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(BattleColliderInfo* other);
  friend void swap(BattleColliderInfo& a, BattleColliderInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BattleColliderInfo* New() const final {
    return CreateMaybeMessage<BattleColliderInfo>(nullptr);
  }

  BattleColliderInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BattleColliderInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BattleColliderInfo& from);
  void MergeFrom(const BattleColliderInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleColliderInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string stage_name = 1;
  void clear_stage_name();
  static const int kStageNameFieldNumber = 1;
  const ::std::string& stage_name() const;
  void set_stage_name(const ::std::string& value);
  #if LANG_CXX11
  void set_stage_name(::std::string&& value);
  #endif
  void set_stage_name(const char* value);
  void set_stage_name(const char* value, size_t size);
  ::std::string* mutable_stage_name();
  ::std::string* release_stage_name();
  void set_allocated_stage_name(::std::string* stage_name);

  // .shared.PeerUdpAddr battle_udp_tunnel = 1024;
  bool has_battle_udp_tunnel() const;
  void clear_battle_udp_tunnel();
  static const int kBattleUdpTunnelFieldNumber = 1024;
  const ::shared::PeerUdpAddr& battle_udp_tunnel() const;
  ::shared::PeerUdpAddr* release_battle_udp_tunnel();
  ::shared::PeerUdpAddr* mutable_battle_udp_tunnel();
  void set_allocated_battle_udp_tunnel(::shared::PeerUdpAddr* battle_udp_tunnel);

  // int64 battle_duration_frames = 3;
  void clear_battle_duration_frames();
  static const int kBattleDurationFramesFieldNumber = 3;
  ::google::protobuf::int64 battle_duration_frames() const;
  void set_battle_duration_frames(::google::protobuf::int64 value);

  // int32 bound_room_id = 2;
  void clear_bound_room_id();
  static const int kBoundRoomIdFieldNumber = 2;
  ::google::protobuf::int32 bound_room_id() const;
  void set_bound_room_id(::google::protobuf::int32 value);

  // int32 input_frame_upsync_delay_tolerance = 4;
  void clear_input_frame_upsync_delay_tolerance();
  static const int kInputFrameUpsyncDelayToleranceFieldNumber = 4;
  ::google::protobuf::int32 input_frame_upsync_delay_tolerance() const;
  void set_input_frame_upsync_delay_tolerance(::google::protobuf::int32 value);

  // double rollback_estimated_dt_millis = 6;
  void clear_rollback_estimated_dt_millis();
  static const int kRollbackEstimatedDtMillisFieldNumber = 6;
  double rollback_estimated_dt_millis() const;
  void set_rollback_estimated_dt_millis(double value);

  // int32 max_chasing_render_frames_per_update = 5;
  void clear_max_chasing_render_frames_per_update();
  static const int kMaxChasingRenderFramesPerUpdateFieldNumber = 5;
  ::google::protobuf::int32 max_chasing_render_frames_per_update() const;
  void set_max_chasing_render_frames_per_update(::google::protobuf::int32 value);

  // int32 render_buffer_size = 8;
  void clear_render_buffer_size();
  static const int kRenderBufferSizeFieldNumber = 8;
  ::google::protobuf::int32 render_buffer_size() const;
  void set_render_buffer_size(::google::protobuf::int32 value);

  // int64 rollback_estimated_dt_nanos = 7;
  void clear_rollback_estimated_dt_nanos();
  static const int kRollbackEstimatedDtNanosFieldNumber = 7;
  ::google::protobuf::int64 rollback_estimated_dt_nanos() const;
  void set_rollback_estimated_dt_nanos(::google::protobuf::int64 value);

  // int32 collision_min_step = 9;
  void clear_collision_min_step();
  static const int kCollisionMinStepFieldNumber = 9;
  ::google::protobuf::int32 collision_min_step() const;
  void set_collision_min_step(::google::protobuf::int32 value);

  // int32 bound_room_capacity = 10;
  void clear_bound_room_capacity();
  static const int kBoundRoomCapacityFieldNumber = 10;
  ::google::protobuf::int32 bound_room_capacity() const;
  void set_bound_room_capacity(::google::protobuf::int32 value);

  // int32 prealloc_npc_capacity = 11;
  void clear_prealloc_npc_capacity();
  static const int kPreallocNpcCapacityFieldNumber = 11;
  ::google::protobuf::int32 prealloc_npc_capacity() const;
  void set_prealloc_npc_capacity(::google::protobuf::int32 value);

  // int32 prealloc_bullet_capacity = 12;
  void clear_prealloc_bullet_capacity();
  static const int kPreallocBulletCapacityFieldNumber = 12;
  ::google::protobuf::int32 prealloc_bullet_capacity() const;
  void set_prealloc_bullet_capacity(::google::protobuf::int32 value);

  // bool frame_log_enabled = 1025;
  void clear_frame_log_enabled();
  static const int kFrameLogEnabledFieldNumber = 1025;
  bool frame_log_enabled() const;
  void set_frame_log_enabled(bool value);

  // @@protoc_insertion_point(class_scope:shared.BattleColliderInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stage_name_;
  ::shared::PeerUdpAddr* battle_udp_tunnel_;
  ::google::protobuf::int64 battle_duration_frames_;
  ::google::protobuf::int32 bound_room_id_;
  ::google::protobuf::int32 input_frame_upsync_delay_tolerance_;
  double rollback_estimated_dt_millis_;
  ::google::protobuf::int32 max_chasing_render_frames_per_update_;
  ::google::protobuf::int32 render_buffer_size_;
  ::google::protobuf::int64 rollback_estimated_dt_nanos_;
  ::google::protobuf::int32 collision_min_step_;
  ::google::protobuf::int32 bound_room_capacity_;
  ::google::protobuf::int32 prealloc_npc_capacity_;
  ::google::protobuf::int32 prealloc_bullet_capacity_;
  bool frame_log_enabled_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT RenderFrame :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.RenderFrame) */ {
 public:
  RenderFrame();
  virtual ~RenderFrame();

  RenderFrame(const RenderFrame& from);

  inline RenderFrame& operator=(const RenderFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RenderFrame(RenderFrame&& from) noexcept
    : RenderFrame() {
    *this = ::std::move(from);
  }

  inline RenderFrame& operator=(RenderFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RenderFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RenderFrame* internal_default_instance() {
    return reinterpret_cast<const RenderFrame*>(
               &_RenderFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(RenderFrame* other);
  friend void swap(RenderFrame& a, RenderFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RenderFrame* New() const final {
    return CreateMaybeMessage<RenderFrame>(nullptr);
  }

  RenderFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RenderFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RenderFrame& from);
  void MergeFrom(const RenderFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RenderFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.CharacterDownsync players_arr = 2;
  int players_arr_size() const;
  void clear_players_arr();
  static const int kPlayersArrFieldNumber = 2;
  ::shared::CharacterDownsync* mutable_players_arr(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >*
      mutable_players_arr();
  const ::shared::CharacterDownsync& players_arr(int index) const;
  ::shared::CharacterDownsync* add_players_arr();
  const ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >&
      players_arr() const;

  // repeated .shared.Bullet bullets = 4;
  int bullets_size() const;
  void clear_bullets();
  static const int kBulletsFieldNumber = 4;
  ::shared::Bullet* mutable_bullets(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::Bullet >*
      mutable_bullets();
  const ::shared::Bullet& bullets(int index) const;
  ::shared::Bullet* add_bullets();
  const ::google::protobuf::RepeatedPtrField< ::shared::Bullet >&
      bullets() const;

  // repeated .shared.CharacterDownsync npcs_arr = 5;
  int npcs_arr_size() const;
  void clear_npcs_arr();
  static const int kNpcsArrFieldNumber = 5;
  ::shared::CharacterDownsync* mutable_npcs_arr(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >*
      mutable_npcs_arr();
  const ::shared::CharacterDownsync& npcs_arr(int index) const;
  ::shared::CharacterDownsync* add_npcs_arr();
  const ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >&
      npcs_arr() const;

  // repeated .shared.Trap traps_arr = 6;
  int traps_arr_size() const;
  void clear_traps_arr();
  static const int kTrapsArrFieldNumber = 6;
  ::shared::Trap* mutable_traps_arr(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::Trap >*
      mutable_traps_arr();
  const ::shared::Trap& traps_arr(int index) const;
  ::shared::Trap* add_traps_arr();
  const ::google::protobuf::RepeatedPtrField< ::shared::Trap >&
      traps_arr() const;

  // repeated .shared.Trigger triggers_arr = 7;
  int triggers_arr_size() const;
  void clear_triggers_arr();
  static const int kTriggersArrFieldNumber = 7;
  ::shared::Trigger* mutable_triggers_arr(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::Trigger >*
      mutable_triggers_arr();
  const ::shared::Trigger& triggers_arr(int index) const;
  ::shared::Trigger* add_triggers_arr();
  const ::google::protobuf::RepeatedPtrField< ::shared::Trigger >&
      triggers_arr() const;

  // repeated .shared.Pickable pickables = 10;
  int pickables_size() const;
  void clear_pickables();
  static const int kPickablesFieldNumber = 10;
  ::shared::Pickable* mutable_pickables(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::Pickable >*
      mutable_pickables();
  const ::shared::Pickable& pickables(int index) const;
  ::shared::Pickable* add_pickables();
  const ::google::protobuf::RepeatedPtrField< ::shared::Pickable >&
      pickables() const;

  // repeated int32 species_id_list = 1026;
  int species_id_list_size() const;
  void clear_species_id_list();
  static const int kSpeciesIdListFieldNumber = 1026;
  ::google::protobuf::int32 species_id_list(int index) const;
  void set_species_id_list(int index, ::google::protobuf::int32 value);
  void add_species_id_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      species_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_species_id_list();

  // int64 countdown_nanos = 3;
  void clear_countdown_nanos();
  static const int kCountdownNanosFieldNumber = 3;
  ::google::protobuf::int64 countdown_nanos() const;
  void set_countdown_nanos(::google::protobuf::int64 value);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // bool should_force_resync = 1025;
  void clear_should_force_resync();
  static const int kShouldForceResyncFieldNumber = 1025;
  bool should_force_resync() const;
  void set_should_force_resync(bool value);

  // uint64 backend_unconfirmed_mask = 1024;
  void clear_backend_unconfirmed_mask();
  static const int kBackendUnconfirmedMaskFieldNumber = 1024;
  ::google::protobuf::uint64 backend_unconfirmed_mask() const;
  void set_backend_unconfirmed_mask(::google::protobuf::uint64 value);

  // int32 bullet_local_id_counter = 1027;
  void clear_bullet_local_id_counter();
  static const int kBulletLocalIdCounterFieldNumber = 1027;
  ::google::protobuf::int32 bullet_local_id_counter() const;
  void set_bullet_local_id_counter(::google::protobuf::int32 value);

  // int32 npc_local_id_counter = 1028;
  void clear_npc_local_id_counter();
  static const int kNpcLocalIdCounterFieldNumber = 1028;
  ::google::protobuf::int32 npc_local_id_counter() const;
  void set_npc_local_id_counter(::google::protobuf::int32 value);

  // int32 participant_change_id = 1029;
  void clear_participant_change_id();
  static const int kParticipantChangeIdFieldNumber = 1029;
  ::google::protobuf::int32 participant_change_id() const;
  void set_participant_change_id(::google::protobuf::int32 value);

  // int32 pickable_local_id_counter = 1030;
  void clear_pickable_local_id_counter();
  static const int kPickableLocalIdCounterFieldNumber = 1030;
  ::google::protobuf::int32 pickable_local_id_counter() const;
  void set_pickable_local_id_counter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.RenderFrame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync > players_arr_;
  ::google::protobuf::RepeatedPtrField< ::shared::Bullet > bullets_;
  ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync > npcs_arr_;
  ::google::protobuf::RepeatedPtrField< ::shared::Trap > traps_arr_;
  ::google::protobuf::RepeatedPtrField< ::shared::Trigger > triggers_arr_;
  ::google::protobuf::RepeatedPtrField< ::shared::Pickable > pickables_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > species_id_list_;
  mutable std::atomic<int> _species_id_list_cached_byte_size_;
  ::google::protobuf::int64 countdown_nanos_;
  ::google::protobuf::int32 id_;
  bool should_force_resync_;
  ::google::protobuf::uint64 backend_unconfirmed_mask_;
  ::google::protobuf::int32 bullet_local_id_counter_;
  ::google::protobuf::int32 npc_local_id_counter_;
  ::google::protobuf::int32 participant_change_id_;
  ::google::protobuf::int32 pickable_local_id_counter_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT WsResp :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.WsResp) */ {
 public:
  WsResp();
  virtual ~WsResp();

  WsResp(const WsResp& from);

  inline WsResp& operator=(const WsResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WsResp(WsResp&& from) noexcept
    : WsResp() {
    *this = ::std::move(from);
  }

  inline WsResp& operator=(WsResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WsResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WsResp* internal_default_instance() {
    return reinterpret_cast<const WsResp*>(
               &_WsResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(WsResp* other);
  friend void swap(WsResp& a, WsResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WsResp* New() const final {
    return CreateMaybeMessage<WsResp>(nullptr);
  }

  WsResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WsResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WsResp& from);
  void MergeFrom(const WsResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WsResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.InputFrameDownsync input_frame_downsync_batch = 4;
  int input_frame_downsync_batch_size() const;
  void clear_input_frame_downsync_batch();
  static const int kInputFrameDownsyncBatchFieldNumber = 4;
  ::shared::InputFrameDownsync* mutable_input_frame_downsync_batch(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >*
      mutable_input_frame_downsync_batch();
  const ::shared::InputFrameDownsync& input_frame_downsync_batch(int index) const;
  ::shared::InputFrameDownsync* add_input_frame_downsync_batch();
  const ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >&
      input_frame_downsync_batch() const;

  // repeated .shared.PeerUdpAddr peer_udp_addr_list = 7;
  int peer_udp_addr_list_size() const;
  void clear_peer_udp_addr_list();
  static const int kPeerUdpAddrListFieldNumber = 7;
  ::shared::PeerUdpAddr* mutable_peer_udp_addr_list(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::PeerUdpAddr >*
      mutable_peer_udp_addr_list();
  const ::shared::PeerUdpAddr& peer_udp_addr_list(int index) const;
  ::shared::PeerUdpAddr* add_peer_udp_addr_list();
  const ::google::protobuf::RepeatedPtrField< ::shared::PeerUdpAddr >&
      peer_udp_addr_list() const;

  // string err_msg = 2048;
  void clear_err_msg();
  static const int kErrMsgFieldNumber = 2048;
  const ::std::string& err_msg() const;
  void set_err_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_err_msg(::std::string&& value);
  #endif
  void set_err_msg(const char* value);
  void set_err_msg(const char* value, size_t size);
  ::std::string* mutable_err_msg();
  ::std::string* release_err_msg();
  void set_allocated_err_msg(::std::string* err_msg);

  // .shared.RenderFrame rdf = 3;
  bool has_rdf() const;
  void clear_rdf();
  static const int kRdfFieldNumber = 3;
  const ::shared::RenderFrame& rdf() const;
  ::shared::RenderFrame* release_rdf();
  ::shared::RenderFrame* mutable_rdf();
  void set_allocated_rdf(::shared::RenderFrame* rdf);

  // .shared.BattleColliderInfo bci_frame = 5;
  bool has_bci_frame() const;
  void clear_bci_frame();
  static const int kBciFrameFieldNumber = 5;
  const ::shared::BattleColliderInfo& bci_frame() const;
  ::shared::BattleColliderInfo* release_bci_frame();
  ::shared::BattleColliderInfo* mutable_bci_frame();
  void set_allocated_bci_frame(::shared::BattleColliderInfo* bci_frame);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // int32 act = 2;
  void clear_act();
  static const int kActFieldNumber = 2;
  ::google::protobuf::int32 act() const;
  void set_act(::google::protobuf::int32 value);

  // int32 peer_join_index = 6;
  void clear_peer_join_index();
  static const int kPeerJoinIndexFieldNumber = 6;
  ::google::protobuf::int32 peer_join_index() const;
  void set_peer_join_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.WsResp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync > input_frame_downsync_batch_;
  ::google::protobuf::RepeatedPtrField< ::shared::PeerUdpAddr > peer_udp_addr_list_;
  ::google::protobuf::internal::ArenaStringPtr err_msg_;
  ::shared::RenderFrame* rdf_;
  ::shared::BattleColliderInfo* bci_frame_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 act_;
  ::google::protobuf::int32 peer_join_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Skill :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Skill) */ {
 public:
  Skill();
  virtual ~Skill();

  Skill(const Skill& from);

  inline Skill& operator=(const Skill& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Skill(Skill&& from) noexcept
    : Skill() {
    *this = ::std::move(from);
  }

  inline Skill& operator=(Skill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Skill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Skill* internal_default_instance() {
    return reinterpret_cast<const Skill*>(
               &_Skill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(Skill* other);
  friend void swap(Skill& a, Skill& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Skill* New() const final {
    return CreateMaybeMessage<Skill>(nullptr);
  }

  Skill* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Skill>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Skill& from);
  void MergeFrom(const Skill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Skill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.BulletConfig hits = 1024;
  int hits_size() const;
  void clear_hits();
  static const int kHitsFieldNumber = 1024;
  ::shared::BulletConfig* mutable_hits(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::BulletConfig >*
      mutable_hits();
  const ::shared::BulletConfig& hits(int index) const;
  ::shared::BulletConfig* add_hits();
  const ::google::protobuf::RepeatedPtrField< ::shared::BulletConfig >&
      hits() const;

  // .shared.BuffConfig self_non_stock_buff = 1025;
  bool has_self_non_stock_buff() const;
  void clear_self_non_stock_buff();
  static const int kSelfNonStockBuffFieldNumber = 1025;
  const ::shared::BuffConfig& self_non_stock_buff() const;
  ::shared::BuffConfig* release_self_non_stock_buff();
  ::shared::BuffConfig* mutable_self_non_stock_buff();
  void set_allocated_self_non_stock_buff(::shared::BuffConfig* self_non_stock_buff);

  // int32 battle_local_id = 1;
  void clear_battle_local_id();
  static const int kBattleLocalIdFieldNumber = 1;
  ::google::protobuf::int32 battle_local_id() const;
  void set_battle_local_id(::google::protobuf::int32 value);

  // int32 recovery_frames = 2;
  void clear_recovery_frames();
  static const int kRecoveryFramesFieldNumber = 2;
  ::google::protobuf::int32 recovery_frames() const;
  void set_recovery_frames(::google::protobuf::int32 value);

  // int32 recovery_frames_on_block = 3;
  void clear_recovery_frames_on_block();
  static const int kRecoveryFramesOnBlockFieldNumber = 3;
  ::google::protobuf::int32 recovery_frames_on_block() const;
  void set_recovery_frames_on_block(::google::protobuf::int32 value);

  // int32 recovery_frames_on_hit = 4;
  void clear_recovery_frames_on_hit();
  static const int kRecoveryFramesOnHitFieldNumber = 4;
  ::google::protobuf::int32 recovery_frames_on_hit() const;
  void set_recovery_frames_on_hit(::google::protobuf::int32 value);

  // .shared.SkillTriggerType trigger_type = 5;
  void clear_trigger_type();
  static const int kTriggerTypeFieldNumber = 5;
  ::shared::SkillTriggerType trigger_type() const;
  void set_trigger_type(::shared::SkillTriggerType value);

  // .shared.CharacterState bound_ch_state = 6;
  void clear_bound_ch_state();
  static const int kBoundChStateFieldNumber = 6;
  ::shared::CharacterState bound_ch_state() const;
  void set_bound_ch_state(::shared::CharacterState value);

  // .shared.CharacterState bound_ch_state_on_hit = 7;
  void clear_bound_ch_state_on_hit();
  static const int kBoundChStateOnHitFieldNumber = 7;
  ::shared::CharacterState bound_ch_state_on_hit() const;
  void set_bound_ch_state_on_hit(::shared::CharacterState value);

  // int32 mp_delta = 8;
  void clear_mp_delta();
  static const int kMpDeltaFieldNumber = 8;
  ::google::protobuf::int32 mp_delta() const;
  void set_mp_delta(::google::protobuf::int32 value);

  // uint32 id = 9;
  void clear_id();
  static const int kIdFieldNumber = 9;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.Skill)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::BulletConfig > hits_;
  ::shared::BuffConfig* self_non_stock_buff_;
  ::google::protobuf::int32 battle_local_id_;
  ::google::protobuf::int32 recovery_frames_;
  ::google::protobuf::int32 recovery_frames_on_block_;
  ::google::protobuf::int32 recovery_frames_on_hit_;
  int trigger_type_;
  int bound_ch_state_;
  int bound_ch_state_on_hit_;
  ::google::protobuf::int32 mp_delta_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT FrameLog :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.FrameLog) */ {
 public:
  FrameLog();
  virtual ~FrameLog();

  FrameLog(const FrameLog& from);

  inline FrameLog& operator=(const FrameLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrameLog(FrameLog&& from) noexcept
    : FrameLog() {
    *this = ::std::move(from);
  }

  inline FrameLog& operator=(FrameLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FrameLog& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrameLog* internal_default_instance() {
    return reinterpret_cast<const FrameLog*>(
               &_FrameLog_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(FrameLog* other);
  friend void swap(FrameLog& a, FrameLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrameLog* New() const final {
    return CreateMaybeMessage<FrameLog>(nullptr);
  }

  FrameLog* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FrameLog>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FrameLog& from);
  void MergeFrom(const FrameLog& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FrameLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.RenderFrame rdf = 1;
  bool has_rdf() const;
  void clear_rdf();
  static const int kRdfFieldNumber = 1;
  const ::shared::RenderFrame& rdf() const;
  ::shared::RenderFrame* release_rdf();
  ::shared::RenderFrame* mutable_rdf();
  void set_allocated_rdf(::shared::RenderFrame* rdf);

  // .shared.InputFrameDownsync actually_used_idf = 2;
  bool has_actually_used_idf() const;
  void clear_actually_used_idf();
  static const int kActuallyUsedIdfFieldNumber = 2;
  const ::shared::InputFrameDownsync& actually_used_idf() const;
  ::shared::InputFrameDownsync* release_actually_used_idf();
  ::shared::InputFrameDownsync* mutable_actually_used_idf();
  void set_allocated_actually_used_idf(::shared::InputFrameDownsync* actually_used_idf);

  // @@protoc_insertion_point(class_scope:shared.FrameLog)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::RenderFrame* rdf_;
  ::shared::InputFrameDownsync* actually_used_idf_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT BattleResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BattleResult) */ {
 public:
  BattleResult();
  virtual ~BattleResult();

  BattleResult(const BattleResult& from);

  inline BattleResult& operator=(const BattleResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BattleResult(BattleResult&& from) noexcept
    : BattleResult() {
    *this = ::std::move(from);
  }

  inline BattleResult& operator=(BattleResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BattleResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BattleResult* internal_default_instance() {
    return reinterpret_cast<const BattleResult*>(
               &_BattleResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(BattleResult* other);
  friend void swap(BattleResult& a, BattleResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BattleResult* New() const final {
    return CreateMaybeMessage<BattleResult>(nullptr);
  }

  BattleResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BattleResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BattleResult& from);
  void MergeFrom(const BattleResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 winner_join_index = 1;
  void clear_winner_join_index();
  static const int kWinnerJoinIndexFieldNumber = 1;
  ::google::protobuf::int32 winner_join_index() const;
  void set_winner_join_index(::google::protobuf::int32 value);

  // int32 winner_bullet_team_id = 2;
  void clear_winner_bullet_team_id();
  static const int kWinnerBulletTeamIdFieldNumber = 2;
  ::google::protobuf::int32 winner_bullet_team_id() const;
  void set_winner_bullet_team_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.BattleResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 winner_join_index_;
  ::google::protobuf::int32 winner_bullet_team_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT DebuffConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.DebuffConfig) */ {
 public:
  DebuffConfig();
  virtual ~DebuffConfig();

  DebuffConfig(const DebuffConfig& from);

  inline DebuffConfig& operator=(const DebuffConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DebuffConfig(DebuffConfig&& from) noexcept
    : DebuffConfig() {
    *this = ::std::move(from);
  }

  inline DebuffConfig& operator=(DebuffConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DebuffConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DebuffConfig* internal_default_instance() {
    return reinterpret_cast<const DebuffConfig*>(
               &_DebuffConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(DebuffConfig* other);
  friend void swap(DebuffConfig& a, DebuffConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DebuffConfig* New() const final {
    return CreateMaybeMessage<DebuffConfig>(nullptr);
  }

  DebuffConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DebuffConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DebuffConfig& from);
  void MergeFrom(const DebuffConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DebuffConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // .shared.BuffStockType stock_type = 2;
  void clear_stock_type();
  static const int kStockTypeFieldNumber = 2;
  ::shared::BuffStockType stock_type() const;
  void set_stock_type(::shared::BuffStockType value);

  // int32 stock = 3;
  void clear_stock();
  static const int kStockFieldNumber = 3;
  ::google::protobuf::int32 stock() const;
  void set_stock(::google::protobuf::int32 value);

  // .shared.DebuffType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::shared::DebuffType type() const;
  void set_type(::shared::DebuffType value);

  // int32 arr_idx = 5;
  void clear_arr_idx();
  static const int kArrIdxFieldNumber = 5;
  ::google::protobuf::int32 arr_idx() const;
  void set_arr_idx(::google::protobuf::int32 value);

  // int32 impact_per_interval = 6;
  void clear_impact_per_interval();
  static const int kImpactPerIntervalFieldNumber = 6;
  ::google::protobuf::int32 impact_per_interval() const;
  void set_impact_per_interval(::google::protobuf::int32 value);

  // int32 impact_interval = 7;
  void clear_impact_interval();
  static const int kImpactIntervalFieldNumber = 7;
  ::google::protobuf::int32 impact_interval() const;
  void set_impact_interval(::google::protobuf::int32 value);

  // int32 friction_vel_x = 8;
  void clear_friction_vel_x();
  static const int kFrictionVelXFieldNumber = 8;
  ::google::protobuf::int32 friction_vel_x() const;
  void set_friction_vel_x(::google::protobuf::int32 value);

  // int32 friction_vel_y = 9;
  void clear_friction_vel_y();
  static const int kFrictionVelYFieldNumber = 9;
  ::google::protobuf::int32 friction_vel_y() const;
  void set_friction_vel_y(::google::protobuf::int32 value);

  // int32 friction_acc_x = 10;
  void clear_friction_acc_x();
  static const int kFrictionAccXFieldNumber = 10;
  ::google::protobuf::int32 friction_acc_x() const;
  void set_friction_acc_x(::google::protobuf::int32 value);

  // int32 friction_acc_y = 11;
  void clear_friction_acc_y();
  static const int kFrictionAccYFieldNumber = 11;
  ::google::protobuf::int32 friction_acc_y() const;
  void set_friction_acc_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.DebuffConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 species_id_;
  int stock_type_;
  ::google::protobuf::int32 stock_;
  int type_;
  ::google::protobuf::int32 arr_idx_;
  ::google::protobuf::int32 impact_per_interval_;
  ::google::protobuf::int32 impact_interval_;
  ::google::protobuf::int32 friction_vel_x_;
  ::google::protobuf::int32 friction_vel_y_;
  ::google::protobuf::int32 friction_acc_x_;
  ::google::protobuf::int32 friction_acc_y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT BuffConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BuffConfig) */ {
 public:
  BuffConfig();
  virtual ~BuffConfig();

  BuffConfig(const BuffConfig& from);

  inline BuffConfig& operator=(const BuffConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BuffConfig(BuffConfig&& from) noexcept
    : BuffConfig() {
    *this = ::std::move(from);
  }

  inline BuffConfig& operator=(BuffConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BuffConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BuffConfig* internal_default_instance() {
    return reinterpret_cast<const BuffConfig*>(
               &_BuffConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(BuffConfig* other);
  friend void swap(BuffConfig& a, BuffConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BuffConfig* New() const final {
    return CreateMaybeMessage<BuffConfig>(nullptr);
  }

  BuffConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BuffConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BuffConfig& from);
  void MergeFrom(const BuffConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BuffConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 associated_debuffs = 17;
  int associated_debuffs_size() const;
  void clear_associated_debuffs();
  static const int kAssociatedDebuffsFieldNumber = 17;
  ::google::protobuf::uint32 associated_debuffs(int index) const;
  void set_associated_debuffs(int index, ::google::protobuf::uint32 value);
  void add_associated_debuffs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      associated_debuffs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_associated_debuffs();

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // .shared.BuffStockType stock_type = 2;
  void clear_stock_type();
  static const int kStockTypeFieldNumber = 2;
  ::shared::BuffStockType stock_type() const;
  void set_stock_type(::shared::BuffStockType value);

  // int32 stock = 3;
  void clear_stock();
  static const int kStockFieldNumber = 3;
  ::google::protobuf::int32 stock() const;
  void set_stock(::google::protobuf::int32 value);

  // float speed_delta = 4;
  void clear_speed_delta();
  static const int kSpeedDeltaFieldNumber = 4;
  float speed_delta() const;
  void set_speed_delta(float value);

  // float hitbox_size_x_delta = 5;
  void clear_hitbox_size_x_delta();
  static const int kHitboxSizeXDeltaFieldNumber = 5;
  float hitbox_size_x_delta() const;
  void set_hitbox_size_x_delta(float value);

  // float hitbox_size_y_delta = 6;
  void clear_hitbox_size_y_delta();
  static const int kHitboxSizeYDeltaFieldNumber = 6;
  float hitbox_size_y_delta() const;
  void set_hitbox_size_y_delta(float value);

  // int32 damage_delta = 7;
  void clear_damage_delta();
  static const int kDamageDeltaFieldNumber = 7;
  ::google::protobuf::int32 damage_delta() const;
  void set_damage_delta(::google::protobuf::int32 value);

  // int32 damage_delta_by_percentage = 8;
  void clear_damage_delta_by_percentage();
  static const int kDamageDeltaByPercentageFieldNumber = 8;
  ::google::protobuf::int32 damage_delta_by_percentage() const;
  void set_damage_delta_by_percentage(::google::protobuf::int32 value);

  // int32 character_hardness_delta = 9;
  void clear_character_hardness_delta();
  static const int kCharacterHardnessDeltaFieldNumber = 9;
  ::google::protobuf::int32 character_hardness_delta() const;
  void set_character_hardness_delta(::google::protobuf::int32 value);

  // int32 melee_hardness_delta = 10;
  void clear_melee_hardness_delta();
  static const int kMeleeHardnessDeltaFieldNumber = 10;
  ::google::protobuf::int32 melee_hardness_delta() const;
  void set_melee_hardness_delta(::google::protobuf::int32 value);

  // int32 fireball_hardness_delta = 11;
  void clear_fireball_hardness_delta();
  static const int kFireballHardnessDeltaFieldNumber = 11;
  ::google::protobuf::int32 fireball_hardness_delta() const;
  void set_fireball_hardness_delta(::google::protobuf::int32 value);

  // uint32 xform_ch_species_id = 13;
  void clear_xform_ch_species_id();
  static const int kXformChSpeciesIdFieldNumber = 13;
  ::google::protobuf::uint32 xform_ch_species_id() const;
  void set_xform_ch_species_id(::google::protobuf::uint32 value);

  // bool invinsible = 12;
  void clear_invinsible();
  static const int kInvinsibleFieldNumber = 12;
  bool invinsible() const;
  void set_invinsible(bool value);

  // bool repel_soft_pushback = 14;
  void clear_repel_soft_pushback();
  static const int kRepelSoftPushbackFieldNumber = 14;
  bool repel_soft_pushback() const;
  void set_repel_soft_pushback(bool value);

  // bool omit_gravity = 15;
  void clear_omit_gravity();
  static const int kOmitGravityFieldNumber = 15;
  bool omit_gravity() const;
  void set_omit_gravity(bool value);

  // bool auto_def1 = 16;
  void clear_auto_def1();
  static const int kAutoDef1FieldNumber = 16;
  bool auto_def1() const;
  void set_auto_def1(bool value);

  // int32 character_vfx_species_id = 18;
  void clear_character_vfx_species_id();
  static const int kCharacterVfxSpeciesIdFieldNumber = 18;
  ::google::protobuf::int32 character_vfx_species_id() const;
  void set_character_vfx_species_id(::google::protobuf::int32 value);

  // bool is_pixelated_vfx_on_character = 19;
  void clear_is_pixelated_vfx_on_character();
  static const int kIsPixelatedVfxOnCharacterFieldNumber = 19;
  bool is_pixelated_vfx_on_character() const;
  void set_is_pixelated_vfx_on_character(bool value);

  // @@protoc_insertion_point(class_scope:shared.BuffConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > associated_debuffs_;
  mutable std::atomic<int> _associated_debuffs_cached_byte_size_;
  ::google::protobuf::uint32 species_id_;
  int stock_type_;
  ::google::protobuf::int32 stock_;
  float speed_delta_;
  float hitbox_size_x_delta_;
  float hitbox_size_y_delta_;
  ::google::protobuf::int32 damage_delta_;
  ::google::protobuf::int32 damage_delta_by_percentage_;
  ::google::protobuf::int32 character_hardness_delta_;
  ::google::protobuf::int32 melee_hardness_delta_;
  ::google::protobuf::int32 fireball_hardness_delta_;
  ::google::protobuf::uint32 xform_ch_species_id_;
  bool invinsible_;
  bool repel_soft_pushback_;
  bool omit_gravity_;
  bool auto_def1_;
  ::google::protobuf::int32 character_vfx_species_id_;
  bool is_pixelated_vfx_on_character_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Buff :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Buff) */ {
 public:
  Buff();
  virtual ~Buff();

  Buff(const Buff& from);

  inline Buff& operator=(const Buff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Buff(Buff&& from) noexcept
    : Buff() {
    *this = ::std::move(from);
  }

  inline Buff& operator=(Buff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Buff& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Buff* internal_default_instance() {
    return reinterpret_cast<const Buff*>(
               &_Buff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(Buff* other);
  friend void swap(Buff& a, Buff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Buff* New() const final {
    return CreateMaybeMessage<Buff>(nullptr);
  }

  Buff* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Buff>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Buff& from);
  void MergeFrom(const Buff& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Buff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // int32 stock = 2;
  void clear_stock();
  static const int kStockFieldNumber = 2;
  ::google::protobuf::int32 stock() const;
  void set_stock(::google::protobuf::int32 value);

  // int32 originated_render_frame_id = 3;
  void clear_originated_render_frame_id();
  static const int kOriginatedRenderFrameIdFieldNumber = 3;
  ::google::protobuf::int32 originated_render_frame_id() const;
  void set_originated_render_frame_id(::google::protobuf::int32 value);

  // uint32 orig_ch_species_id = 4;
  void clear_orig_ch_species_id();
  static const int kOrigChSpeciesIdFieldNumber = 4;
  ::google::protobuf::uint32 orig_ch_species_id() const;
  void set_orig_ch_species_id(::google::protobuf::uint32 value);

  // bool orig_repel_soft_pushback = 5;
  void clear_orig_repel_soft_pushback();
  static const int kOrigRepelSoftPushbackFieldNumber = 5;
  bool orig_repel_soft_pushback() const;
  void set_orig_repel_soft_pushback(bool value);

  // bool orig_omit_gravity = 6;
  void clear_orig_omit_gravity();
  static const int kOrigOmitGravityFieldNumber = 6;
  bool orig_omit_gravity() const;
  void set_orig_omit_gravity(bool value);

  // @@protoc_insertion_point(class_scope:shared.Buff)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 species_id_;
  ::google::protobuf::int32 stock_;
  ::google::protobuf::int32 originated_render_frame_id_;
  ::google::protobuf::uint32 orig_ch_species_id_;
  bool orig_repel_soft_pushback_;
  bool orig_omit_gravity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Debuff :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Debuff) */ {
 public:
  Debuff();
  virtual ~Debuff();

  Debuff(const Debuff& from);

  inline Debuff& operator=(const Debuff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Debuff(Debuff&& from) noexcept
    : Debuff() {
    *this = ::std::move(from);
  }

  inline Debuff& operator=(Debuff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Debuff& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Debuff* internal_default_instance() {
    return reinterpret_cast<const Debuff*>(
               &_Debuff_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(Debuff* other);
  friend void swap(Debuff& a, Debuff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Debuff* New() const final {
    return CreateMaybeMessage<Debuff>(nullptr);
  }

  Debuff* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Debuff>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Debuff& from);
  void MergeFrom(const Debuff& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Debuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // int32 stock = 2;
  void clear_stock();
  static const int kStockFieldNumber = 2;
  ::google::protobuf::int32 stock() const;
  void set_stock(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.Debuff)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 species_id_;
  ::google::protobuf::int32 stock_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT BulletImmuneRecord :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BulletImmuneRecord) */ {
 public:
  BulletImmuneRecord();
  virtual ~BulletImmuneRecord();

  BulletImmuneRecord(const BulletImmuneRecord& from);

  inline BulletImmuneRecord& operator=(const BulletImmuneRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BulletImmuneRecord(BulletImmuneRecord&& from) noexcept
    : BulletImmuneRecord() {
    *this = ::std::move(from);
  }

  inline BulletImmuneRecord& operator=(BulletImmuneRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BulletImmuneRecord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BulletImmuneRecord* internal_default_instance() {
    return reinterpret_cast<const BulletImmuneRecord*>(
               &_BulletImmuneRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(BulletImmuneRecord* other);
  friend void swap(BulletImmuneRecord& a, BulletImmuneRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BulletImmuneRecord* New() const final {
    return CreateMaybeMessage<BulletImmuneRecord>(nullptr);
  }

  BulletImmuneRecord* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BulletImmuneRecord>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BulletImmuneRecord& from);
  void MergeFrom(const BulletImmuneRecord& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BulletImmuneRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bullet_local_id = 1;
  void clear_bullet_local_id();
  static const int kBulletLocalIdFieldNumber = 1;
  ::google::protobuf::int32 bullet_local_id() const;
  void set_bullet_local_id(::google::protobuf::int32 value);

  // int32 remaining_lifetime_rdf_count = 2;
  void clear_remaining_lifetime_rdf_count();
  static const int kRemainingLifetimeRdfCountFieldNumber = 2;
  ::google::protobuf::int32 remaining_lifetime_rdf_count() const;
  void set_remaining_lifetime_rdf_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.BulletImmuneRecord)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bullet_local_id_;
  ::google::protobuf::int32 remaining_lifetime_rdf_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT ConsumableConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.ConsumableConfig) */ {
 public:
  ConsumableConfig();
  virtual ~ConsumableConfig();

  ConsumableConfig(const ConsumableConfig& from);

  inline ConsumableConfig& operator=(const ConsumableConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConsumableConfig(ConsumableConfig&& from) noexcept
    : ConsumableConfig() {
    *this = ::std::move(from);
  }

  inline ConsumableConfig& operator=(ConsumableConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConsumableConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConsumableConfig* internal_default_instance() {
    return reinterpret_cast<const ConsumableConfig*>(
               &_ConsumableConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(ConsumableConfig* other);
  friend void swap(ConsumableConfig& a, ConsumableConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConsumableConfig* New() const final {
    return CreateMaybeMessage<ConsumableConfig>(nullptr);
  }

  ConsumableConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConsumableConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConsumableConfig& from);
  void MergeFrom(const ConsumableConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConsumableConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // int32 refill_delta = 2;
  void clear_refill_delta();
  static const int kRefillDeltaFieldNumber = 2;
  ::google::protobuf::int32 refill_delta() const;
  void set_refill_delta(::google::protobuf::int32 value);

  // int32 vfx_id_on_picker = 3;
  void clear_vfx_id_on_picker();
  static const int kVfxIdOnPickerFieldNumber = 3;
  ::google::protobuf::int32 vfx_id_on_picker() const;
  void set_vfx_id_on_picker(::google::protobuf::int32 value);

  // bool is_pixelated_vfx_on_picker = 4;
  void clear_is_pixelated_vfx_on_picker();
  static const int kIsPixelatedVfxOnPickerFieldNumber = 4;
  bool is_pixelated_vfx_on_picker() const;
  void set_is_pixelated_vfx_on_picker(bool value);

  // @@protoc_insertion_point(class_scope:shared.ConsumableConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 species_id_;
  ::google::protobuf::int32 refill_delta_;
  ::google::protobuf::int32 vfx_id_on_picker_;
  bool is_pixelated_vfx_on_picker_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PickableSkillConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PickableSkillConfig) */ {
 public:
  PickableSkillConfig();
  virtual ~PickableSkillConfig();

  PickableSkillConfig(const PickableSkillConfig& from);

  inline PickableSkillConfig& operator=(const PickableSkillConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PickableSkillConfig(PickableSkillConfig&& from) noexcept
    : PickableSkillConfig() {
    *this = ::std::move(from);
  }

  inline PickableSkillConfig& operator=(PickableSkillConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PickableSkillConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PickableSkillConfig* internal_default_instance() {
    return reinterpret_cast<const PickableSkillConfig*>(
               &_PickableSkillConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(PickableSkillConfig* other);
  friend void swap(PickableSkillConfig& a, PickableSkillConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PickableSkillConfig* New() const final {
    return CreateMaybeMessage<PickableSkillConfig>(nullptr);
  }

  PickableSkillConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PickableSkillConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PickableSkillConfig& from);
  void MergeFrom(const PickableSkillConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PickableSkillConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 skill_id = 1;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // int32 vfx_id_on_picker = 2;
  void clear_vfx_id_on_picker();
  static const int kVfxIdOnPickerFieldNumber = 2;
  ::google::protobuf::int32 vfx_id_on_picker() const;
  void set_vfx_id_on_picker(::google::protobuf::int32 value);

  // bool is_pixelated_vfx_on_picker = 3;
  void clear_is_pixelated_vfx_on_picker();
  static const int kIsPixelatedVfxOnPickerFieldNumber = 3;
  bool is_pixelated_vfx_on_picker() const;
  void set_is_pixelated_vfx_on_picker(bool value);

  // @@protoc_insertion_point(class_scope:shared.PickableSkillConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::int32 vfx_id_on_picker_;
  bool is_pixelated_vfx_on_picker_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT InventorySlot :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.InventorySlot) */ {
 public:
  InventorySlot();
  virtual ~InventorySlot();

  InventorySlot(const InventorySlot& from);

  inline InventorySlot& operator=(const InventorySlot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InventorySlot(InventorySlot&& from) noexcept
    : InventorySlot() {
    *this = ::std::move(from);
  }

  inline InventorySlot& operator=(InventorySlot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InventorySlot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InventorySlot* internal_default_instance() {
    return reinterpret_cast<const InventorySlot*>(
               &_InventorySlot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(InventorySlot* other);
  friend void swap(InventorySlot& a, InventorySlot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InventorySlot* New() const final {
    return CreateMaybeMessage<InventorySlot>(nullptr);
  }

  InventorySlot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InventorySlot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InventorySlot& from);
  void MergeFrom(const InventorySlot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InventorySlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.InventorySlotStockType stock_type = 1;
  void clear_stock_type();
  static const int kStockTypeFieldNumber = 1;
  ::shared::InventorySlotStockType stock_type() const;
  void set_stock_type(::shared::InventorySlotStockType value);

  // uint32 quota = 2;
  void clear_quota();
  static const int kQuotaFieldNumber = 2;
  ::google::protobuf::uint32 quota() const;
  void set_quota(::google::protobuf::uint32 value);

  // int32 frames_to_recover = 3;
  void clear_frames_to_recover();
  static const int kFramesToRecoverFieldNumber = 3;
  ::google::protobuf::int32 frames_to_recover() const;
  void set_frames_to_recover(::google::protobuf::int32 value);

  // uint32 default_quota = 4;
  void clear_default_quota();
  static const int kDefaultQuotaFieldNumber = 4;
  ::google::protobuf::uint32 default_quota() const;
  void set_default_quota(::google::protobuf::uint32 value);

  // int32 default_frames_to_recover = 5;
  void clear_default_frames_to_recover();
  static const int kDefaultFramesToRecoverFieldNumber = 5;
  ::google::protobuf::int32 default_frames_to_recover() const;
  void set_default_frames_to_recover(::google::protobuf::int32 value);

  // uint32 buff_species_id = 6;
  void clear_buff_species_id();
  static const int kBuffSpeciesIdFieldNumber = 6;
  ::google::protobuf::uint32 buff_species_id() const;
  void set_buff_species_id(::google::protobuf::uint32 value);

  // uint32 skill_id = 7;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 7;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // uint32 skill_id_air = 8;
  void clear_skill_id_air();
  static const int kSkillIdAirFieldNumber = 8;
  ::google::protobuf::uint32 skill_id_air() const;
  void set_skill_id_air(::google::protobuf::uint32 value);

  // int32 gauge_charged = 9;
  void clear_gauge_charged();
  static const int kGaugeChargedFieldNumber = 9;
  ::google::protobuf::int32 gauge_charged() const;
  void set_gauge_charged(::google::protobuf::int32 value);

  // int32 gauge_required = 10;
  void clear_gauge_required();
  static const int kGaugeRequiredFieldNumber = 10;
  ::google::protobuf::int32 gauge_required() const;
  void set_gauge_required(::google::protobuf::int32 value);

  // uint32 full_charge_buff_species_id = 11;
  void clear_full_charge_buff_species_id();
  static const int kFullChargeBuffSpeciesIdFieldNumber = 11;
  ::google::protobuf::uint32 full_charge_buff_species_id() const;
  void set_full_charge_buff_species_id(::google::protobuf::uint32 value);

  // uint32 full_charge_skill_id = 12;
  void clear_full_charge_skill_id();
  static const int kFullChargeSkillIdFieldNumber = 12;
  ::google::protobuf::uint32 full_charge_skill_id() const;
  void set_full_charge_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.InventorySlot)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int stock_type_;
  ::google::protobuf::uint32 quota_;
  ::google::protobuf::int32 frames_to_recover_;
  ::google::protobuf::uint32 default_quota_;
  ::google::protobuf::int32 default_frames_to_recover_;
  ::google::protobuf::uint32 buff_species_id_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_id_air_;
  ::google::protobuf::int32 gauge_charged_;
  ::google::protobuf::int32 gauge_required_;
  ::google::protobuf::uint32 full_charge_buff_species_id_;
  ::google::protobuf::uint32 full_charge_skill_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Inventory :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Inventory) */ {
 public:
  Inventory();
  virtual ~Inventory();

  Inventory(const Inventory& from);

  inline Inventory& operator=(const Inventory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Inventory(Inventory&& from) noexcept
    : Inventory() {
    *this = ::std::move(from);
  }

  inline Inventory& operator=(Inventory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Inventory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Inventory* internal_default_instance() {
    return reinterpret_cast<const Inventory*>(
               &_Inventory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(Inventory* other);
  friend void swap(Inventory& a, Inventory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Inventory* New() const final {
    return CreateMaybeMessage<Inventory>(nullptr);
  }

  Inventory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Inventory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Inventory& from);
  void MergeFrom(const Inventory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Inventory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.InventorySlot slots = 1;
  int slots_size() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 1;
  ::shared::InventorySlot* mutable_slots(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >*
      mutable_slots();
  const ::shared::InventorySlot& slots(int index) const;
  ::shared::InventorySlot* add_slots();
  const ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >&
      slots() const;

  // @@protoc_insertion_point(class_scope:shared.Inventory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot > slots_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT BattleEquipment :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.BattleEquipment) */ {
 public:
  BattleEquipment();
  virtual ~BattleEquipment();

  BattleEquipment(const BattleEquipment& from);

  inline BattleEquipment& operator=(const BattleEquipment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BattleEquipment(BattleEquipment&& from) noexcept
    : BattleEquipment() {
    *this = ::std::move(from);
  }

  inline BattleEquipment& operator=(BattleEquipment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BattleEquipment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BattleEquipment* internal_default_instance() {
    return reinterpret_cast<const BattleEquipment*>(
               &_BattleEquipment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(BattleEquipment* other);
  friend void swap(BattleEquipment& a, BattleEquipment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BattleEquipment* New() const final {
    return CreateMaybeMessage<BattleEquipment>(nullptr);
  }

  BattleEquipment* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BattleEquipment>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BattleEquipment& from);
  void MergeFrom(const BattleEquipment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleEquipment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.BattleEquipment)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 species_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerSettings :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerSettings) */ {
 public:
  PlayerSettings();
  virtual ~PlayerSettings();

  PlayerSettings(const PlayerSettings& from);

  inline PlayerSettings& operator=(const PlayerSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSettings(PlayerSettings&& from) noexcept
    : PlayerSettings() {
    *this = ::std::move(from);
  }

  inline PlayerSettings& operator=(PlayerSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerSettings* internal_default_instance() {
    return reinterpret_cast<const PlayerSettings*>(
               &_PlayerSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(PlayerSettings* other);
  friend void swap(PlayerSettings& a, PlayerSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSettings* New() const final {
    return CreateMaybeMessage<PlayerSettings>(nullptr);
  }

  PlayerSettings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerSettings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerSettings& from);
  void MergeFrom(const PlayerSettings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sound_volume = 1;
  void clear_sound_volume();
  static const int kSoundVolumeFieldNumber = 1;
  ::google::protobuf::int32 sound_volume() const;
  void set_sound_volume(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.PlayerSettings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sound_volume_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse();
  PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse& other);
  static const PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse*>(&_PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse();
  PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse& other);
  static const PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse*>(&_PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerRegionProgress :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerRegionProgress) */ {
 public:
  PlayerRegionProgress();
  virtual ~PlayerRegionProgress();

  PlayerRegionProgress(const PlayerRegionProgress& from);

  inline PlayerRegionProgress& operator=(const PlayerRegionProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRegionProgress(PlayerRegionProgress&& from) noexcept
    : PlayerRegionProgress() {
    *this = ::std::move(from);
  }

  inline PlayerRegionProgress& operator=(PlayerRegionProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerRegionProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerRegionProgress* internal_default_instance() {
    return reinterpret_cast<const PlayerRegionProgress*>(
               &_PlayerRegionProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(PlayerRegionProgress* other);
  friend void swap(PlayerRegionProgress& a, PlayerRegionProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRegionProgress* New() const final {
    return CreateMaybeMessage<PlayerRegionProgress>(nullptr);
  }

  PlayerRegionProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerRegionProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerRegionProgress& from);
  void MergeFrom(const PlayerRegionProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerRegionProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, bool> remaining_dependencies = 3;
  int remaining_dependencies_size() const;
  void clear_remaining_dependencies();
  static const int kRemainingDependenciesFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
      remaining_dependencies() const;
  ::google::protobuf::Map< ::google::protobuf::int32, bool >*
      mutable_remaining_dependencies();

  // map<int32, bool> removed_dependencies = 4;
  int removed_dependencies_size() const;
  void clear_removed_dependencies();
  static const int kRemovedDependenciesFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
      removed_dependencies() const;
  ::google::protobuf::Map< ::google::protobuf::int32, bool >*
      mutable_removed_dependencies();

  // int32 region_id = 1;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 1;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 completed_level_count = 2;
  void clear_completed_level_count();
  static const int kCompletedLevelCountFieldNumber = 2;
  ::google::protobuf::int32 completed_level_count() const;
  void set_completed_level_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.PlayerRegionProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PlayerRegionProgress_RemainingDependenciesEntry_DoNotUse,
      ::google::protobuf::int32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > remaining_dependencies_;
  ::google::protobuf::internal::MapField<
      PlayerRegionProgress_RemovedDependenciesEntry_DoNotUse,
      ::google::protobuf::int32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > removed_dependencies_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 completed_level_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse();
  PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse& other);
  static const PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse*>(&_PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse();
  PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse& other);
  static const PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse*>(&_PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerLevelProgress :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerLevelProgress) */ {
 public:
  PlayerLevelProgress();
  virtual ~PlayerLevelProgress();

  PlayerLevelProgress(const PlayerLevelProgress& from);

  inline PlayerLevelProgress& operator=(const PlayerLevelProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLevelProgress(PlayerLevelProgress&& from) noexcept
    : PlayerLevelProgress() {
    *this = ::std::move(from);
  }

  inline PlayerLevelProgress& operator=(PlayerLevelProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerLevelProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLevelProgress* internal_default_instance() {
    return reinterpret_cast<const PlayerLevelProgress*>(
               &_PlayerLevelProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(PlayerLevelProgress* other);
  friend void swap(PlayerLevelProgress& a, PlayerLevelProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLevelProgress* New() const final {
    return CreateMaybeMessage<PlayerLevelProgress>(nullptr);
  }

  PlayerLevelProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerLevelProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerLevelProgress& from);
  void MergeFrom(const PlayerLevelProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerLevelProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, bool> remaining_dependencies = 9;
  int remaining_dependencies_size() const;
  void clear_remaining_dependencies();
  static const int kRemainingDependenciesFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
      remaining_dependencies() const;
  ::google::protobuf::Map< ::google::protobuf::int32, bool >*
      mutable_remaining_dependencies();

  // map<int32, bool> removed_dependencies = 10;
  int removed_dependencies_size() const;
  void clear_removed_dependencies();
  static const int kRemovedDependenciesFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
      removed_dependencies() const;
  ::google::protobuf::Map< ::google::protobuf::int32, bool >*
      mutable_removed_dependencies();

  // int32 region_id = 1;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 1;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 level_id = 2;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 2;
  ::google::protobuf::int32 level_id() const;
  void set_level_id(::google::protobuf::int32 value);

  // int32 highest_score = 3;
  void clear_highest_score();
  static const int kHighestScoreFieldNumber = 3;
  ::google::protobuf::int32 highest_score() const;
  void set_highest_score(::google::protobuf::int32 value);

  // int32 shortest_finish_time_at_highest_score = 4;
  void clear_shortest_finish_time_at_highest_score();
  static const int kShortestFinishTimeAtHighestScoreFieldNumber = 4;
  ::google::protobuf::int32 shortest_finish_time_at_highest_score() const;
  void set_shortest_finish_time_at_highest_score(::google::protobuf::int32 value);

  // uint32 character_species_id_at_highest_score = 5;
  void clear_character_species_id_at_highest_score();
  static const int kCharacterSpeciesIdAtHighestScoreFieldNumber = 5;
  ::google::protobuf::uint32 character_species_id_at_highest_score() const;
  void set_character_species_id_at_highest_score(::google::protobuf::uint32 value);

  // int32 shortest_finish_time = 6;
  void clear_shortest_finish_time();
  static const int kShortestFinishTimeFieldNumber = 6;
  ::google::protobuf::int32 shortest_finish_time() const;
  void set_shortest_finish_time(::google::protobuf::int32 value);

  // int32 score_at_shortest_finish_time = 7;
  void clear_score_at_shortest_finish_time();
  static const int kScoreAtShortestFinishTimeFieldNumber = 7;
  ::google::protobuf::int32 score_at_shortest_finish_time() const;
  void set_score_at_shortest_finish_time(::google::protobuf::int32 value);

  // uint32 character_species_id_at_shortest_finish_time = 8;
  void clear_character_species_id_at_shortest_finish_time();
  static const int kCharacterSpeciesIdAtShortestFinishTimeFieldNumber = 8;
  ::google::protobuf::uint32 character_species_id_at_shortest_finish_time() const;
  void set_character_species_id_at_shortest_finish_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.PlayerLevelProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PlayerLevelProgress_RemainingDependenciesEntry_DoNotUse,
      ::google::protobuf::int32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > remaining_dependencies_;
  ::google::protobuf::internal::MapField<
      PlayerLevelProgress_RemovedDependenciesEntry_DoNotUse,
      ::google::protobuf::int32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > removed_dependencies_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 level_id_;
  ::google::protobuf::int32 highest_score_;
  ::google::protobuf::int32 shortest_finish_time_at_highest_score_;
  ::google::protobuf::uint32 character_species_id_at_highest_score_;
  ::google::protobuf::int32 shortest_finish_time_;
  ::google::protobuf::int32 score_at_shortest_finish_time_;
  ::google::protobuf::uint32 character_species_id_at_shortest_finish_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse();
  PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse& other);
  static const PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse*>(&_PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse, 
    ::google::protobuf::int32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse();
  PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse& other);
  static const PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse*>(&_PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerChUnlockProgress :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerChUnlockProgress) */ {
 public:
  PlayerChUnlockProgress();
  virtual ~PlayerChUnlockProgress();

  PlayerChUnlockProgress(const PlayerChUnlockProgress& from);

  inline PlayerChUnlockProgress& operator=(const PlayerChUnlockProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChUnlockProgress(PlayerChUnlockProgress&& from) noexcept
    : PlayerChUnlockProgress() {
    *this = ::std::move(from);
  }

  inline PlayerChUnlockProgress& operator=(PlayerChUnlockProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerChUnlockProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChUnlockProgress* internal_default_instance() {
    return reinterpret_cast<const PlayerChUnlockProgress*>(
               &_PlayerChUnlockProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(PlayerChUnlockProgress* other);
  friend void swap(PlayerChUnlockProgress& a, PlayerChUnlockProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChUnlockProgress* New() const final {
    return CreateMaybeMessage<PlayerChUnlockProgress>(nullptr);
  }

  PlayerChUnlockProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChUnlockProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerChUnlockProgress& from);
  void MergeFrom(const PlayerChUnlockProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChUnlockProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, bool> remaining_dependencies = 2;
  int remaining_dependencies_size() const;
  void clear_remaining_dependencies();
  static const int kRemainingDependenciesFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
      remaining_dependencies() const;
  ::google::protobuf::Map< ::google::protobuf::int32, bool >*
      mutable_remaining_dependencies();

  // map<int32, bool> removed_dependencies = 3;
  int removed_dependencies_size() const;
  void clear_removed_dependencies();
  static const int kRemovedDependenciesFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
      removed_dependencies() const;
  ::google::protobuf::Map< ::google::protobuf::int32, bool >*
      mutable_removed_dependencies();

  // uint32 species_id = 1;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 1;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.PlayerChUnlockProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PlayerChUnlockProgress_RemainingDependenciesEntry_DoNotUse,
      ::google::protobuf::int32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > remaining_dependencies_;
  ::google::protobuf::internal::MapField<
      PlayerChUnlockProgress_RemovedDependenciesEntry_DoNotUse,
      ::google::protobuf::int32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > removed_dependencies_;
  ::google::protobuf::uint32 species_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PlayerStoryProgress_RegionProgressDictEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerStoryProgress_RegionProgressDictEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::PlayerRegionProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerStoryProgress_RegionProgressDictEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::PlayerRegionProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PlayerStoryProgress_RegionProgressDictEntry_DoNotUse();
  PlayerStoryProgress_RegionProgressDictEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerStoryProgress_RegionProgressDictEntry_DoNotUse& other);
  static const PlayerStoryProgress_RegionProgressDictEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerStoryProgress_RegionProgressDictEntry_DoNotUse*>(&_PlayerStoryProgress_RegionProgressDictEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PlayerStoryProgress_LevelProgressDictEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerStoryProgress_LevelProgressDictEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::PlayerLevelProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerStoryProgress_LevelProgressDictEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::PlayerLevelProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PlayerStoryProgress_LevelProgressDictEntry_DoNotUse();
  PlayerStoryProgress_LevelProgressDictEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerStoryProgress_LevelProgressDictEntry_DoNotUse& other);
  static const PlayerStoryProgress_LevelProgressDictEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerStoryProgress_LevelProgressDictEntry_DoNotUse*>(&_PlayerStoryProgress_LevelProgressDictEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse, 
    ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse, 
    ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse();
  PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse& other);
  static const PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse*>(&_PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerStoryProgress :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerStoryProgress) */ {
 public:
  PlayerStoryProgress();
  virtual ~PlayerStoryProgress();

  PlayerStoryProgress(const PlayerStoryProgress& from);

  inline PlayerStoryProgress& operator=(const PlayerStoryProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerStoryProgress(PlayerStoryProgress&& from) noexcept
    : PlayerStoryProgress() {
    *this = ::std::move(from);
  }

  inline PlayerStoryProgress& operator=(PlayerStoryProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerStoryProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerStoryProgress* internal_default_instance() {
    return reinterpret_cast<const PlayerStoryProgress*>(
               &_PlayerStoryProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(PlayerStoryProgress* other);
  friend void swap(PlayerStoryProgress& a, PlayerStoryProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerStoryProgress* New() const final {
    return CreateMaybeMessage<PlayerStoryProgress>(nullptr);
  }

  PlayerStoryProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerStoryProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerStoryProgress& from);
  void MergeFrom(const PlayerStoryProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStoryProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .shared.PlayerRegionProgress> region_progress_dict = 1;
  int region_progress_dict_size() const;
  void clear_region_progress_dict();
  static const int kRegionProgressDictFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerRegionProgress >&
      region_progress_dict() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerRegionProgress >*
      mutable_region_progress_dict();

  // map<int32, .shared.PlayerLevelProgress> level_progress_dict = 2;
  int level_progress_dict_size() const;
  void clear_level_progress_dict();
  static const int kLevelProgressDictFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerLevelProgress >&
      level_progress_dict() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerLevelProgress >*
      mutable_level_progress_dict();

  // map<uint32, .shared.PlayerChUnlockProgress> ch_unlock_progress_dict = 7;
  int ch_unlock_progress_dict_size() const;
  void clear_ch_unlock_progress_dict();
  static const int kChUnlockProgressDictFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >&
      ch_unlock_progress_dict() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >*
      mutable_ch_unlock_progress_dict();

  // int32 cursor_region_id = 3;
  void clear_cursor_region_id();
  static const int kCursorRegionIdFieldNumber = 3;
  ::google::protobuf::int32 cursor_region_id() const;
  void set_cursor_region_id(::google::protobuf::int32 value);

  // int32 cursor_level_id = 4;
  void clear_cursor_level_id();
  static const int kCursorLevelIdFieldNumber = 4;
  ::google::protobuf::int32 cursor_level_id() const;
  void set_cursor_level_id(::google::protobuf::int32 value);

  // uint64 saved_at_gmt_millis = 6;
  void clear_saved_at_gmt_millis();
  static const int kSavedAtGmtMillisFieldNumber = 6;
  ::google::protobuf::uint64 saved_at_gmt_millis() const;
  void set_saved_at_gmt_millis(::google::protobuf::uint64 value);

  // .shared.PlayerStoryModeSelectView view = 5;
  void clear_view();
  static const int kViewFieldNumber = 5;
  ::shared::PlayerStoryModeSelectView view() const;
  void set_view(::shared::PlayerStoryModeSelectView value);

  // @@protoc_insertion_point(class_scope:shared.PlayerStoryProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PlayerStoryProgress_RegionProgressDictEntry_DoNotUse,
      ::google::protobuf::int32, ::shared::PlayerRegionProgress,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > region_progress_dict_;
  ::google::protobuf::internal::MapField<
      PlayerStoryProgress_LevelProgressDictEntry_DoNotUse,
      ::google::protobuf::int32, ::shared::PlayerLevelProgress,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > level_progress_dict_;
  ::google::protobuf::internal::MapField<
      PlayerStoryProgress_ChUnlockProgressDictEntry_DoNotUse,
      ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ch_unlock_progress_dict_;
  ::google::protobuf::int32 cursor_region_id_;
  ::google::protobuf::int32 cursor_level_id_;
  ::google::protobuf::uint64 saved_at_gmt_millis_;
  int view_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse, 
    ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse, 
    ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse();
  PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse& other);
  static const PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse*>(&_PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerOnlineArenaProgress :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerOnlineArenaProgress) */ {
 public:
  PlayerOnlineArenaProgress();
  virtual ~PlayerOnlineArenaProgress();

  PlayerOnlineArenaProgress(const PlayerOnlineArenaProgress& from);

  inline PlayerOnlineArenaProgress& operator=(const PlayerOnlineArenaProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerOnlineArenaProgress(PlayerOnlineArenaProgress&& from) noexcept
    : PlayerOnlineArenaProgress() {
    *this = ::std::move(from);
  }

  inline PlayerOnlineArenaProgress& operator=(PlayerOnlineArenaProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerOnlineArenaProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerOnlineArenaProgress* internal_default_instance() {
    return reinterpret_cast<const PlayerOnlineArenaProgress*>(
               &_PlayerOnlineArenaProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(PlayerOnlineArenaProgress* other);
  friend void swap(PlayerOnlineArenaProgress& a, PlayerOnlineArenaProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerOnlineArenaProgress* New() const final {
    return CreateMaybeMessage<PlayerOnlineArenaProgress>(nullptr);
  }

  PlayerOnlineArenaProgress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerOnlineArenaProgress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerOnlineArenaProgress& from);
  void MergeFrom(const PlayerOnlineArenaProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerOnlineArenaProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .shared.PlayerChUnlockProgress> ch_unlock_progress_dict = 3;
  int ch_unlock_progress_dict_size() const;
  void clear_ch_unlock_progress_dict();
  static const int kChUnlockProgressDictFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >&
      ch_unlock_progress_dict() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >*
      mutable_ch_unlock_progress_dict();

  // string player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  const ::std::string& player_id() const;
  void set_player_id(const ::std::string& value);
  #if LANG_CXX11
  void set_player_id(::std::string&& value);
  #endif
  void set_player_id(const char* value);
  void set_player_id(const char* value, size_t size);
  ::std::string* mutable_player_id();
  ::std::string* release_player_id();
  void set_allocated_player_id(::std::string* player_id);

  // uint64 saved_at_gmt_millis = 1;
  void clear_saved_at_gmt_millis();
  static const int kSavedAtGmtMillisFieldNumber = 1;
  ::google::protobuf::uint64 saved_at_gmt_millis() const;
  void set_saved_at_gmt_millis(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:shared.PlayerOnlineArenaProgress)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PlayerOnlineArenaProgress_ChUnlockProgressDictEntry_DoNotUse,
      ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ch_unlock_progress_dict_;
  ::google::protobuf::internal::ArenaStringPtr player_id_;
  ::google::protobuf::uint64 saved_at_gmt_millis_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT StoryPointDialogLine :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.StoryPointDialogLine) */ {
 public:
  StoryPointDialogLine();
  virtual ~StoryPointDialogLine();

  StoryPointDialogLine(const StoryPointDialogLine& from);

  inline StoryPointDialogLine& operator=(const StoryPointDialogLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StoryPointDialogLine(StoryPointDialogLine&& from) noexcept
    : StoryPointDialogLine() {
    *this = ::std::move(from);
  }

  inline StoryPointDialogLine& operator=(StoryPointDialogLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StoryPointDialogLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoryPointDialogLine* internal_default_instance() {
    return reinterpret_cast<const StoryPointDialogLine*>(
               &_StoryPointDialogLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(StoryPointDialogLine* other);
  friend void swap(StoryPointDialogLine& a, StoryPointDialogLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StoryPointDialogLine* New() const final {
    return CreateMaybeMessage<StoryPointDialogLine>(nullptr);
  }

  StoryPointDialogLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StoryPointDialogLine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StoryPointDialogLine& from);
  void MergeFrom(const StoryPointDialogLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoryPointDialogLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 3;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // int32 narrator_join_index = 1;
  void clear_narrator_join_index();
  static const int kNarratorJoinIndexFieldNumber = 1;
  ::google::protobuf::int32 narrator_join_index() const;
  void set_narrator_join_index(::google::protobuf::int32 value);

  // uint32 narrator_species_id = 2;
  void clear_narrator_species_id();
  static const int kNarratorSpeciesIdFieldNumber = 2;
  ::google::protobuf::uint32 narrator_species_id() const;
  void set_narrator_species_id(::google::protobuf::uint32 value);

  // bool down_or_not = 4;
  void clear_down_or_not();
  static const int kDownOrNotFieldNumber = 4;
  bool down_or_not() const;
  void set_down_or_not(bool value);

  // @@protoc_insertion_point(class_scope:shared.StoryPointDialogLine)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 narrator_join_index_;
  ::google::protobuf::uint32 narrator_species_id_;
  bool down_or_not_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT StoryPointStep :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.StoryPointStep) */ {
 public:
  StoryPointStep();
  virtual ~StoryPointStep();

  StoryPointStep(const StoryPointStep& from);

  inline StoryPointStep& operator=(const StoryPointStep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StoryPointStep(StoryPointStep&& from) noexcept
    : StoryPointStep() {
    *this = ::std::move(from);
  }

  inline StoryPointStep& operator=(StoryPointStep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StoryPointStep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoryPointStep* internal_default_instance() {
    return reinterpret_cast<const StoryPointStep*>(
               &_StoryPointStep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(StoryPointStep* other);
  friend void swap(StoryPointStep& a, StoryPointStep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StoryPointStep* New() const final {
    return CreateMaybeMessage<StoryPointStep>(nullptr);
  }

  StoryPointStep* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StoryPointStep>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StoryPointStep& from);
  void MergeFrom(const StoryPointStep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoryPointStep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.StoryPointDialogLine lines = 1;
  int lines_size() const;
  void clear_lines();
  static const int kLinesFieldNumber = 1;
  ::shared::StoryPointDialogLine* mutable_lines(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::StoryPointDialogLine >*
      mutable_lines();
  const ::shared::StoryPointDialogLine& lines(int index) const;
  ::shared::StoryPointDialogLine* add_lines();
  const ::google::protobuf::RepeatedPtrField< ::shared::StoryPointDialogLine >&
      lines() const;

  // int32 nonctrl_alive_rdf_count = 2;
  void clear_nonctrl_alive_rdf_count();
  static const int kNonctrlAliveRdfCountFieldNumber = 2;
  ::google::protobuf::int32 nonctrl_alive_rdf_count() const;
  void set_nonctrl_alive_rdf_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.StoryPointStep)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::StoryPointDialogLine > lines_;
  ::google::protobuf::int32 nonctrl_alive_rdf_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT StoryPoint :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.StoryPoint) */ {
 public:
  StoryPoint();
  virtual ~StoryPoint();

  StoryPoint(const StoryPoint& from);

  inline StoryPoint& operator=(const StoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StoryPoint(StoryPoint&& from) noexcept
    : StoryPoint() {
    *this = ::std::move(from);
  }

  inline StoryPoint& operator=(StoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoryPoint* internal_default_instance() {
    return reinterpret_cast<const StoryPoint*>(
               &_StoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(StoryPoint* other);
  friend void swap(StoryPoint& a, StoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StoryPoint* New() const final {
    return CreateMaybeMessage<StoryPoint>(nullptr);
  }

  StoryPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StoryPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StoryPoint& from);
  void MergeFrom(const StoryPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.StoryPointStep steps = 1;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 1;
  ::shared::StoryPointStep* mutable_steps(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::StoryPointStep >*
      mutable_steps();
  const ::shared::StoryPointStep& steps(int index) const;
  ::shared::StoryPointStep* add_steps();
  const ::google::protobuf::RepeatedPtrField< ::shared::StoryPointStep >&
      steps() const;

  // string cutscene_name = 3;
  void clear_cutscene_name();
  static const int kCutsceneNameFieldNumber = 3;
  const ::std::string& cutscene_name() const;
  void set_cutscene_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cutscene_name(::std::string&& value);
  #endif
  void set_cutscene_name(const char* value);
  void set_cutscene_name(const char* value, size_t size);
  ::std::string* mutable_cutscene_name();
  ::std::string* release_cutscene_name();
  void set_allocated_cutscene_name(::std::string* cutscene_name);

  // bool nonctrl = 2;
  void clear_nonctrl();
  static const int kNonctrlFieldNumber = 2;
  bool nonctrl() const;
  void set_nonctrl(bool value);

  // @@protoc_insertion_point(class_scope:shared.StoryPoint)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::StoryPointStep > steps_;
  ::google::protobuf::internal::ArenaStringPtr cutscene_name_;
  bool nonctrl_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class LevelStory_PointsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<LevelStory_PointsEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::StoryPoint,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<LevelStory_PointsEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::StoryPoint,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  LevelStory_PointsEntry_DoNotUse();
  LevelStory_PointsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const LevelStory_PointsEntry_DoNotUse& other);
  static const LevelStory_PointsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LevelStory_PointsEntry_DoNotUse*>(&_LevelStory_PointsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT LevelStory :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.LevelStory) */ {
 public:
  LevelStory();
  virtual ~LevelStory();

  LevelStory(const LevelStory& from);

  inline LevelStory& operator=(const LevelStory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelStory(LevelStory&& from) noexcept
    : LevelStory() {
    *this = ::std::move(from);
  }

  inline LevelStory& operator=(LevelStory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LevelStory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LevelStory* internal_default_instance() {
    return reinterpret_cast<const LevelStory*>(
               &_LevelStory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(LevelStory* other);
  friend void swap(LevelStory& a, LevelStory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelStory* New() const final {
    return CreateMaybeMessage<LevelStory>(nullptr);
  }

  LevelStory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LevelStory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LevelStory& from);
  void MergeFrom(const LevelStory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LevelStory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .shared.StoryPoint> points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::StoryPoint >&
      points() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::shared::StoryPoint >*
      mutable_points();

  // @@protoc_insertion_point(class_scope:shared.LevelStory)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      LevelStory_PointsEntry_DoNotUse,
      ::google::protobuf::int32, ::shared::StoryPoint,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > points_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SerializableConvexPolygon :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SerializableConvexPolygon) */ {
 public:
  SerializableConvexPolygon();
  virtual ~SerializableConvexPolygon();

  SerializableConvexPolygon(const SerializableConvexPolygon& from);

  inline SerializableConvexPolygon& operator=(const SerializableConvexPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializableConvexPolygon(SerializableConvexPolygon&& from) noexcept
    : SerializableConvexPolygon() {
    *this = ::std::move(from);
  }

  inline SerializableConvexPolygon& operator=(SerializableConvexPolygon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializableConvexPolygon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializableConvexPolygon* internal_default_instance() {
    return reinterpret_cast<const SerializableConvexPolygon*>(
               &_SerializableConvexPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(SerializableConvexPolygon* other);
  friend void swap(SerializableConvexPolygon& a, SerializableConvexPolygon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializableConvexPolygon* New() const final {
    return CreateMaybeMessage<SerializableConvexPolygon>(nullptr);
  }

  SerializableConvexPolygon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializableConvexPolygon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializableConvexPolygon& from);
  void MergeFrom(const SerializableConvexPolygon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializableConvexPolygon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float points = 3;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  float points(int index) const;
  void set_points(int index, float value);
  void add_points(float value);
  const ::google::protobuf::RepeatedField< float >&
      points() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_points();

  // float anchor_x = 1;
  void clear_anchor_x();
  static const int kAnchorXFieldNumber = 1;
  float anchor_x() const;
  void set_anchor_x(float value);

  // float anchor_y = 2;
  void clear_anchor_y();
  static const int kAnchorYFieldNumber = 2;
  float anchor_y() const;
  void set_anchor_y(float value);

  // @@protoc_insertion_point(class_scope:shared.SerializableConvexPolygon)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > points_;
  mutable std::atomic<int> _points_cached_byte_size_;
  float anchor_x_;
  float anchor_y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SerializedCompletelyStaticPatrolCueCollider :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SerializedCompletelyStaticPatrolCueCollider) */ {
 public:
  SerializedCompletelyStaticPatrolCueCollider();
  virtual ~SerializedCompletelyStaticPatrolCueCollider();

  SerializedCompletelyStaticPatrolCueCollider(const SerializedCompletelyStaticPatrolCueCollider& from);

  inline SerializedCompletelyStaticPatrolCueCollider& operator=(const SerializedCompletelyStaticPatrolCueCollider& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedCompletelyStaticPatrolCueCollider(SerializedCompletelyStaticPatrolCueCollider&& from) noexcept
    : SerializedCompletelyStaticPatrolCueCollider() {
    *this = ::std::move(from);
  }

  inline SerializedCompletelyStaticPatrolCueCollider& operator=(SerializedCompletelyStaticPatrolCueCollider&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializedCompletelyStaticPatrolCueCollider& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedCompletelyStaticPatrolCueCollider* internal_default_instance() {
    return reinterpret_cast<const SerializedCompletelyStaticPatrolCueCollider*>(
               &_SerializedCompletelyStaticPatrolCueCollider_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(SerializedCompletelyStaticPatrolCueCollider* other);
  friend void swap(SerializedCompletelyStaticPatrolCueCollider& a, SerializedCompletelyStaticPatrolCueCollider& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedCompletelyStaticPatrolCueCollider* New() const final {
    return CreateMaybeMessage<SerializedCompletelyStaticPatrolCueCollider>(nullptr);
  }

  SerializedCompletelyStaticPatrolCueCollider* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedCompletelyStaticPatrolCueCollider>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedCompletelyStaticPatrolCueCollider& from);
  void MergeFrom(const SerializedCompletelyStaticPatrolCueCollider& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedCompletelyStaticPatrolCueCollider* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.PatrolCue attr = 1;
  bool has_attr() const;
  void clear_attr();
  static const int kAttrFieldNumber = 1;
  const ::shared::PatrolCue& attr() const;
  ::shared::PatrolCue* release_attr();
  ::shared::PatrolCue* mutable_attr();
  void set_allocated_attr(::shared::PatrolCue* attr);

  // .shared.SerializableConvexPolygon polygon = 2;
  bool has_polygon() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 2;
  const ::shared::SerializableConvexPolygon& polygon() const;
  ::shared::SerializableConvexPolygon* release_polygon();
  ::shared::SerializableConvexPolygon* mutable_polygon();
  void set_allocated_polygon(::shared::SerializableConvexPolygon* polygon);

  // @@protoc_insertion_point(class_scope:shared.SerializedCompletelyStaticPatrolCueCollider)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::PatrolCue* attr_;
  ::shared::SerializableConvexPolygon* polygon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SerializedCompletelyStaticTrapCollider :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SerializedCompletelyStaticTrapCollider) */ {
 public:
  SerializedCompletelyStaticTrapCollider();
  virtual ~SerializedCompletelyStaticTrapCollider();

  SerializedCompletelyStaticTrapCollider(const SerializedCompletelyStaticTrapCollider& from);

  inline SerializedCompletelyStaticTrapCollider& operator=(const SerializedCompletelyStaticTrapCollider& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedCompletelyStaticTrapCollider(SerializedCompletelyStaticTrapCollider&& from) noexcept
    : SerializedCompletelyStaticTrapCollider() {
    *this = ::std::move(from);
  }

  inline SerializedCompletelyStaticTrapCollider& operator=(SerializedCompletelyStaticTrapCollider&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializedCompletelyStaticTrapCollider& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedCompletelyStaticTrapCollider* internal_default_instance() {
    return reinterpret_cast<const SerializedCompletelyStaticTrapCollider*>(
               &_SerializedCompletelyStaticTrapCollider_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(SerializedCompletelyStaticTrapCollider* other);
  friend void swap(SerializedCompletelyStaticTrapCollider& a, SerializedCompletelyStaticTrapCollider& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedCompletelyStaticTrapCollider* New() const final {
    return CreateMaybeMessage<SerializedCompletelyStaticTrapCollider>(nullptr);
  }

  SerializedCompletelyStaticTrapCollider* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedCompletelyStaticTrapCollider>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedCompletelyStaticTrapCollider& from);
  void MergeFrom(const SerializedCompletelyStaticTrapCollider& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedCompletelyStaticTrapCollider* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.TrapColliderAttr attr = 1;
  bool has_attr() const;
  void clear_attr();
  static const int kAttrFieldNumber = 1;
  const ::shared::TrapColliderAttr& attr() const;
  ::shared::TrapColliderAttr* release_attr();
  ::shared::TrapColliderAttr* mutable_attr();
  void set_allocated_attr(::shared::TrapColliderAttr* attr);

  // .shared.SerializableConvexPolygon polygon = 2;
  bool has_polygon() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 2;
  const ::shared::SerializableConvexPolygon& polygon() const;
  ::shared::SerializableConvexPolygon* release_polygon();
  ::shared::SerializableConvexPolygon* mutable_polygon();
  void set_allocated_polygon(::shared::SerializableConvexPolygon* polygon);

  // @@protoc_insertion_point(class_scope:shared.SerializedCompletelyStaticTrapCollider)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::TrapColliderAttr* attr_;
  ::shared::SerializableConvexPolygon* polygon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT SerializedCompletelyStaticTriggerCollider :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SerializedCompletelyStaticTriggerCollider) */ {
 public:
  SerializedCompletelyStaticTriggerCollider();
  virtual ~SerializedCompletelyStaticTriggerCollider();

  SerializedCompletelyStaticTriggerCollider(const SerializedCompletelyStaticTriggerCollider& from);

  inline SerializedCompletelyStaticTriggerCollider& operator=(const SerializedCompletelyStaticTriggerCollider& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedCompletelyStaticTriggerCollider(SerializedCompletelyStaticTriggerCollider&& from) noexcept
    : SerializedCompletelyStaticTriggerCollider() {
    *this = ::std::move(from);
  }

  inline SerializedCompletelyStaticTriggerCollider& operator=(SerializedCompletelyStaticTriggerCollider&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializedCompletelyStaticTriggerCollider& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedCompletelyStaticTriggerCollider* internal_default_instance() {
    return reinterpret_cast<const SerializedCompletelyStaticTriggerCollider*>(
               &_SerializedCompletelyStaticTriggerCollider_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(SerializedCompletelyStaticTriggerCollider* other);
  friend void swap(SerializedCompletelyStaticTriggerCollider& a, SerializedCompletelyStaticTriggerCollider& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedCompletelyStaticTriggerCollider* New() const final {
    return CreateMaybeMessage<SerializedCompletelyStaticTriggerCollider>(nullptr);
  }

  SerializedCompletelyStaticTriggerCollider* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedCompletelyStaticTriggerCollider>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedCompletelyStaticTriggerCollider& from);
  void MergeFrom(const SerializedCompletelyStaticTriggerCollider& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedCompletelyStaticTriggerCollider* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.TriggerColliderAttr attr = 1;
  bool has_attr() const;
  void clear_attr();
  static const int kAttrFieldNumber = 1;
  const ::shared::TriggerColliderAttr& attr() const;
  ::shared::TriggerColliderAttr* release_attr();
  ::shared::TriggerColliderAttr* mutable_attr();
  void set_allocated_attr(::shared::TriggerColliderAttr* attr);

  // .shared.SerializableConvexPolygon polygon = 2;
  bool has_polygon() const;
  void clear_polygon();
  static const int kPolygonFieldNumber = 2;
  const ::shared::SerializableConvexPolygon& polygon() const;
  ::shared::SerializableConvexPolygon* release_polygon();
  ::shared::SerializableConvexPolygon* mutable_polygon();
  void set_allocated_polygon(::shared::SerializableConvexPolygon* polygon);

  // @@protoc_insertion_point(class_scope:shared.SerializedCompletelyStaticTriggerCollider)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::TriggerColliderAttr* attr_;
  ::shared::SerializableConvexPolygon* polygon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT TrapColliderAttrArray :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TrapColliderAttrArray) */ {
 public:
  TrapColliderAttrArray();
  virtual ~TrapColliderAttrArray();

  TrapColliderAttrArray(const TrapColliderAttrArray& from);

  inline TrapColliderAttrArray& operator=(const TrapColliderAttrArray& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrapColliderAttrArray(TrapColliderAttrArray&& from) noexcept
    : TrapColliderAttrArray() {
    *this = ::std::move(from);
  }

  inline TrapColliderAttrArray& operator=(TrapColliderAttrArray&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrapColliderAttrArray& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrapColliderAttrArray* internal_default_instance() {
    return reinterpret_cast<const TrapColliderAttrArray*>(
               &_TrapColliderAttrArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(TrapColliderAttrArray* other);
  friend void swap(TrapColliderAttrArray& a, TrapColliderAttrArray& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrapColliderAttrArray* New() const final {
    return CreateMaybeMessage<TrapColliderAttrArray>(nullptr);
  }

  TrapColliderAttrArray* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrapColliderAttrArray>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrapColliderAttrArray& from);
  void MergeFrom(const TrapColliderAttrArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrapColliderAttrArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .shared.TrapColliderAttr list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  ::shared::TrapColliderAttr* mutable_list(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::TrapColliderAttr >*
      mutable_list();
  const ::shared::TrapColliderAttr& list(int index) const;
  ::shared::TrapColliderAttr* add_list();
  const ::google::protobuf::RepeatedPtrField< ::shared::TrapColliderAttr >&
      list() const;

  // @@protoc_insertion_point(class_scope:shared.TrapColliderAttrArray)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::shared::TrapColliderAttr > list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::TrapColliderAttrArray,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse, 
    ::google::protobuf::int32, ::shared::TrapColliderAttrArray,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse();
  SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse& other);
  static const SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse*>(&_SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT SerializedTrapLocalIdToColliderAttrs :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SerializedTrapLocalIdToColliderAttrs) */ {
 public:
  SerializedTrapLocalIdToColliderAttrs();
  virtual ~SerializedTrapLocalIdToColliderAttrs();

  SerializedTrapLocalIdToColliderAttrs(const SerializedTrapLocalIdToColliderAttrs& from);

  inline SerializedTrapLocalIdToColliderAttrs& operator=(const SerializedTrapLocalIdToColliderAttrs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedTrapLocalIdToColliderAttrs(SerializedTrapLocalIdToColliderAttrs&& from) noexcept
    : SerializedTrapLocalIdToColliderAttrs() {
    *this = ::std::move(from);
  }

  inline SerializedTrapLocalIdToColliderAttrs& operator=(SerializedTrapLocalIdToColliderAttrs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializedTrapLocalIdToColliderAttrs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedTrapLocalIdToColliderAttrs* internal_default_instance() {
    return reinterpret_cast<const SerializedTrapLocalIdToColliderAttrs*>(
               &_SerializedTrapLocalIdToColliderAttrs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(SerializedTrapLocalIdToColliderAttrs* other);
  friend void swap(SerializedTrapLocalIdToColliderAttrs& a, SerializedTrapLocalIdToColliderAttrs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedTrapLocalIdToColliderAttrs* New() const final {
    return CreateMaybeMessage<SerializedTrapLocalIdToColliderAttrs>(nullptr);
  }

  SerializedTrapLocalIdToColliderAttrs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedTrapLocalIdToColliderAttrs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedTrapLocalIdToColliderAttrs& from);
  void MergeFrom(const SerializedTrapLocalIdToColliderAttrs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedTrapLocalIdToColliderAttrs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, .shared.TrapColliderAttrArray> dict = 1;
  int dict_size() const;
  void clear_dict();
  static const int kDictFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TrapColliderAttrArray >&
      dict() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TrapColliderAttrArray >*
      mutable_dict();

  // @@protoc_insertion_point(class_scope:shared.SerializedTrapLocalIdToColliderAttrs)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SerializedTrapLocalIdToColliderAttrs_DictEntry_DoNotUse,
      ::google::protobuf::int32, ::shared::TrapColliderAttrArray,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > dict_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse, 
    ::google::protobuf::int32, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse();
  SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse& other);
  static const SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse*>(&_SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse, 
    ::google::protobuf::int32, ::shared::TriggerConfigFromTiled,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse, 
    ::google::protobuf::int32, ::shared::TriggerConfigFromTiled,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse();
  SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse& other);
  static const SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse*>(&_SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT SerializedTriggerEditorIdToLocalId :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.SerializedTriggerEditorIdToLocalId) */ {
 public:
  SerializedTriggerEditorIdToLocalId();
  virtual ~SerializedTriggerEditorIdToLocalId();

  SerializedTriggerEditorIdToLocalId(const SerializedTriggerEditorIdToLocalId& from);

  inline SerializedTriggerEditorIdToLocalId& operator=(const SerializedTriggerEditorIdToLocalId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedTriggerEditorIdToLocalId(SerializedTriggerEditorIdToLocalId&& from) noexcept
    : SerializedTriggerEditorIdToLocalId() {
    *this = ::std::move(from);
  }

  inline SerializedTriggerEditorIdToLocalId& operator=(SerializedTriggerEditorIdToLocalId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SerializedTriggerEditorIdToLocalId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedTriggerEditorIdToLocalId* internal_default_instance() {
    return reinterpret_cast<const SerializedTriggerEditorIdToLocalId*>(
               &_SerializedTriggerEditorIdToLocalId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(SerializedTriggerEditorIdToLocalId* other);
  friend void swap(SerializedTriggerEditorIdToLocalId& a, SerializedTriggerEditorIdToLocalId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedTriggerEditorIdToLocalId* New() const final {
    return CreateMaybeMessage<SerializedTriggerEditorIdToLocalId>(nullptr);
  }

  SerializedTriggerEditorIdToLocalId* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedTriggerEditorIdToLocalId>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedTriggerEditorIdToLocalId& from);
  void MergeFrom(const SerializedTriggerEditorIdToLocalId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedTriggerEditorIdToLocalId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int32, int32> dict = 1;
  int dict_size() const;
  void clear_dict();
  static const int kDictFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
      dict() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
      mutable_dict();

  // map<int32, .shared.TriggerConfigFromTiled> dict2 = 2;
  int dict2_size() const;
  void clear_dict2();
  static const int kDict2FieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TriggerConfigFromTiled >&
      dict2() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TriggerConfigFromTiled >*
      mutable_dict2();

  // @@protoc_insertion_point(class_scope:shared.SerializedTriggerEditorIdToLocalId)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SerializedTriggerEditorIdToLocalId_DictEntry_DoNotUse,
      ::google::protobuf::int32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > dict_;
  ::google::protobuf::internal::MapField<
      SerializedTriggerEditorIdToLocalId_Dict2Entry_DoNotUse,
      ::google::protobuf::int32, ::shared::TriggerConfigFromTiled,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > dict2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PickableConfigFromTiled :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PickableConfigFromTiled) */ {
 public:
  PickableConfigFromTiled();
  virtual ~PickableConfigFromTiled();

  PickableConfigFromTiled(const PickableConfigFromTiled& from);

  inline PickableConfigFromTiled& operator=(const PickableConfigFromTiled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PickableConfigFromTiled(PickableConfigFromTiled&& from) noexcept
    : PickableConfigFromTiled() {
    *this = ::std::move(from);
  }

  inline PickableConfigFromTiled& operator=(PickableConfigFromTiled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PickableConfigFromTiled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PickableConfigFromTiled* internal_default_instance() {
    return reinterpret_cast<const PickableConfigFromTiled*>(
               &_PickableConfigFromTiled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(PickableConfigFromTiled* other);
  friend void swap(PickableConfigFromTiled& a, PickableConfigFromTiled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PickableConfigFromTiled* New() const final {
    return CreateMaybeMessage<PickableConfigFromTiled>(nullptr);
  }

  PickableConfigFromTiled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PickableConfigFromTiled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PickableConfigFromTiled& from);
  void MergeFrom(const PickableConfigFromTiled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PickableConfigFromTiled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 init_virtual_grid_x = 1;
  void clear_init_virtual_grid_x();
  static const int kInitVirtualGridXFieldNumber = 1;
  ::google::protobuf::int32 init_virtual_grid_x() const;
  void set_init_virtual_grid_x(::google::protobuf::int32 value);

  // int32 init_virtual_grid_y = 2;
  void clear_init_virtual_grid_y();
  static const int kInitVirtualGridYFieldNumber = 2;
  ::google::protobuf::int32 init_virtual_grid_y() const;
  void set_init_virtual_grid_y(::google::protobuf::int32 value);

  // bool takes_gravity = 3;
  void clear_takes_gravity();
  static const int kTakesGravityFieldNumber = 3;
  bool takes_gravity() const;
  void set_takes_gravity(bool value);

  // int32 first_show_rdf_id = 4;
  void clear_first_show_rdf_id();
  static const int kFirstShowRdfIdFieldNumber = 4;
  ::google::protobuf::int32 first_show_rdf_id() const;
  void set_first_show_rdf_id(::google::protobuf::int32 value);

  // int32 recur_quota = 5;
  void clear_recur_quota();
  static const int kRecurQuotaFieldNumber = 5;
  ::google::protobuf::int32 recur_quota() const;
  void set_recur_quota(::google::protobuf::int32 value);

  // uint32 recur_interval_rdf_count = 6;
  void clear_recur_interval_rdf_count();
  static const int kRecurIntervalRdfCountFieldNumber = 6;
  ::google::protobuf::uint32 recur_interval_rdf_count() const;
  void set_recur_interval_rdf_count(::google::protobuf::uint32 value);

  // uint32 lifetime_rdf_count_per_occurrence = 7;
  void clear_lifetime_rdf_count_per_occurrence();
  static const int kLifetimeRdfCountPerOccurrenceFieldNumber = 7;
  ::google::protobuf::uint32 lifetime_rdf_count_per_occurrence() const;
  void set_lifetime_rdf_count_per_occurrence(::google::protobuf::uint32 value);

  // .shared.PickupType pickup_type = 8;
  void clear_pickup_type();
  static const int kPickupTypeFieldNumber = 8;
  ::shared::PickupType pickup_type() const;
  void set_pickup_type(::shared::PickupType value);

  // uint32 stock_quota_per_occurrence = 9;
  void clear_stock_quota_per_occurrence();
  static const int kStockQuotaPerOccurrenceFieldNumber = 9;
  ::google::protobuf::uint32 stock_quota_per_occurrence() const;
  void set_stock_quota_per_occurrence(::google::protobuf::uint32 value);

  // int32 subscription_id = 10;
  void clear_subscription_id();
  static const int kSubscriptionIdFieldNumber = 10;
  ::google::protobuf::int32 subscription_id() const;
  void set_subscription_id(::google::protobuf::int32 value);

  // int32 vfx_species_id = 11;
  void clear_vfx_species_id();
  static const int kVfxSpeciesIdFieldNumber = 11;
  ::google::protobuf::int32 vfx_species_id() const;
  void set_vfx_species_id(::google::protobuf::int32 value);

  // uint32 consumable_species_id = 1024;
  void clear_consumable_species_id();
  static const int kConsumableSpeciesIdFieldNumber = 1024;
  ::google::protobuf::uint32 consumable_species_id() const;
  void set_consumable_species_id(::google::protobuf::uint32 value);

  // uint32 buff_species_id = 1025;
  void clear_buff_species_id();
  static const int kBuffSpeciesIdFieldNumber = 1025;
  ::google::protobuf::uint32 buff_species_id() const;
  void set_buff_species_id(::google::protobuf::uint32 value);

  // uint32 skill_id = 1026;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 1026;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.PickableConfigFromTiled)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 init_virtual_grid_x_;
  ::google::protobuf::int32 init_virtual_grid_y_;
  bool takes_gravity_;
  ::google::protobuf::int32 first_show_rdf_id_;
  ::google::protobuf::int32 recur_quota_;
  ::google::protobuf::uint32 recur_interval_rdf_count_;
  ::google::protobuf::uint32 lifetime_rdf_count_per_occurrence_;
  int pickup_type_;
  ::google::protobuf::uint32 stock_quota_per_occurrence_;
  ::google::protobuf::int32 subscription_id_;
  ::google::protobuf::int32 vfx_species_id_;
  ::google::protobuf::uint32 consumable_species_id_;
  ::google::protobuf::uint32 buff_species_id_;
  ::google::protobuf::uint32 skill_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Pickable :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Pickable) */ {
 public:
  Pickable();
  virtual ~Pickable();

  Pickable(const Pickable& from);

  inline Pickable& operator=(const Pickable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pickable(Pickable&& from) noexcept
    : Pickable() {
    *this = ::std::move(from);
  }

  inline Pickable& operator=(Pickable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Pickable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pickable* internal_default_instance() {
    return reinterpret_cast<const Pickable*>(
               &_Pickable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(Pickable* other);
  friend void swap(Pickable& a, Pickable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pickable* New() const final {
    return CreateMaybeMessage<Pickable>(nullptr);
  }

  Pickable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Pickable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Pickable& from);
  void MergeFrom(const Pickable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Pickable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .shared.PickableConfigFromTiled config_from_tiled = 4;
  bool has_config_from_tiled() const;
  void clear_config_from_tiled();
  static const int kConfigFromTiledFieldNumber = 4;
  const ::shared::PickableConfigFromTiled& config_from_tiled() const;
  ::shared::PickableConfigFromTiled* release_config_from_tiled();
  ::shared::PickableConfigFromTiled* mutable_config_from_tiled();
  void set_allocated_config_from_tiled(::shared::PickableConfigFromTiled* config_from_tiled);

  // int32 pickable_local_id = 1;
  void clear_pickable_local_id();
  static const int kPickableLocalIdFieldNumber = 1;
  ::google::protobuf::int32 pickable_local_id() const;
  void set_pickable_local_id(::google::protobuf::int32 value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // int32 remaining_lifetime_rdf_count = 5;
  void clear_remaining_lifetime_rdf_count();
  static const int kRemainingLifetimeRdfCountFieldNumber = 5;
  ::google::protobuf::int32 remaining_lifetime_rdf_count() const;
  void set_remaining_lifetime_rdf_count(::google::protobuf::int32 value);

  // int32 remaining_recur_quota = 6;
  void clear_remaining_recur_quota();
  static const int kRemainingRecurQuotaFieldNumber = 6;
  ::google::protobuf::int32 remaining_recur_quota() const;
  void set_remaining_recur_quota(::google::protobuf::int32 value);

  // float vel_x = 7;
  void clear_vel_x();
  static const int kVelXFieldNumber = 7;
  float vel_x() const;
  void set_vel_x(float value);

  // float vel_y = 8;
  void clear_vel_y();
  static const int kVelYFieldNumber = 8;
  float vel_y() const;
  void set_vel_y(float value);

  // .shared.PickableState pk_state = 9;
  void clear_pk_state();
  static const int kPkStateFieldNumber = 9;
  ::shared::PickableState pk_state() const;
  void set_pk_state(::shared::PickableState value);

  // int32 frames_in_pk_state = 10;
  void clear_frames_in_pk_state();
  static const int kFramesInPkStateFieldNumber = 10;
  ::google::protobuf::int32 frames_in_pk_state() const;
  void set_frames_in_pk_state(::google::protobuf::int32 value);

  // int32 picked_by_join_index = 11;
  void clear_picked_by_join_index();
  static const int kPickedByJoinIndexFieldNumber = 11;
  ::google::protobuf::int32 picked_by_join_index() const;
  void set_picked_by_join_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.Pickable)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::shared::PickableConfigFromTiled* config_from_tiled_;
  ::google::protobuf::int32 pickable_local_id_;
  float x_;
  float y_;
  ::google::protobuf::int32 remaining_lifetime_rdf_count_;
  ::google::protobuf::int32 remaining_recur_quota_;
  float vel_x_;
  float vel_y_;
  int pk_state_;
  ::google::protobuf::int32 frames_in_pk_state_;
  ::google::protobuf::int32 picked_by_join_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT InjectedCmdConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.InjectedCmdConfig) */ {
 public:
  InjectedCmdConfig();
  virtual ~InjectedCmdConfig();

  InjectedCmdConfig(const InjectedCmdConfig& from);

  inline InjectedCmdConfig& operator=(const InjectedCmdConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InjectedCmdConfig(InjectedCmdConfig&& from) noexcept
    : InjectedCmdConfig() {
    *this = ::std::move(from);
  }

  inline InjectedCmdConfig& operator=(InjectedCmdConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InjectedCmdConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InjectedCmdConfig* internal_default_instance() {
    return reinterpret_cast<const InjectedCmdConfig*>(
               &_InjectedCmdConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(InjectedCmdConfig* other);
  friend void swap(InjectedCmdConfig& a, InjectedCmdConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InjectedCmdConfig* New() const final {
    return CreateMaybeMessage<InjectedCmdConfig>(nullptr);
  }

  InjectedCmdConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InjectedCmdConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InjectedCmdConfig& from);
  void MergeFrom(const InjectedCmdConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InjectedCmdConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 op = 2;
  void clear_op();
  static const int kOpFieldNumber = 2;
  ::google::protobuf::uint64 op() const;
  void set_op(::google::protobuf::uint64 value);

  // int32 cutoff_rdf_frame_id = 1;
  void clear_cutoff_rdf_frame_id();
  static const int kCutoffRdfFrameIdFieldNumber = 1;
  ::google::protobuf::int32 cutoff_rdf_frame_id() const;
  void set_cutoff_rdf_frame_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.InjectedCmdConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 op_;
  ::google::protobuf::int32 cutoff_rdf_frame_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT CharacterSpawnerConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.CharacterSpawnerConfig) */ {
 public:
  CharacterSpawnerConfig();
  virtual ~CharacterSpawnerConfig();

  CharacterSpawnerConfig(const CharacterSpawnerConfig& from);

  inline CharacterSpawnerConfig& operator=(const CharacterSpawnerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CharacterSpawnerConfig(CharacterSpawnerConfig&& from) noexcept
    : CharacterSpawnerConfig() {
    *this = ::std::move(from);
  }

  inline CharacterSpawnerConfig& operator=(CharacterSpawnerConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CharacterSpawnerConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CharacterSpawnerConfig* internal_default_instance() {
    return reinterpret_cast<const CharacterSpawnerConfig*>(
               &_CharacterSpawnerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(CharacterSpawnerConfig* other);
  friend void swap(CharacterSpawnerConfig& a, CharacterSpawnerConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CharacterSpawnerConfig* New() const final {
    return CreateMaybeMessage<CharacterSpawnerConfig>(nullptr);
  }

  CharacterSpawnerConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CharacterSpawnerConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CharacterSpawnerConfig& from);
  void MergeFrom(const CharacterSpawnerConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CharacterSpawnerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 species_id_list = 2;
  int species_id_list_size() const;
  void clear_species_id_list();
  static const int kSpeciesIdListFieldNumber = 2;
  ::google::protobuf::uint32 species_id_list(int index) const;
  void set_species_id_list(int index, ::google::protobuf::uint32 value);
  void add_species_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      species_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_species_id_list();

  // repeated uint64 init_op_list = 3;
  int init_op_list_size() const;
  void clear_init_op_list();
  static const int kInitOpListFieldNumber = 3;
  ::google::protobuf::uint64 init_op_list(int index) const;
  void set_init_op_list(int index, ::google::protobuf::uint64 value);
  void add_init_op_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      init_op_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_init_op_list();

  // int32 cutoff_rdf_frame_id = 1;
  void clear_cutoff_rdf_frame_id();
  static const int kCutoffRdfFrameIdFieldNumber = 1;
  ::google::protobuf::int32 cutoff_rdf_frame_id() const;
  void set_cutoff_rdf_frame_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.CharacterSpawnerConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > species_id_list_;
  mutable std::atomic<int> _species_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > init_op_list_;
  mutable std::atomic<int> _init_op_list_cached_byte_size_;
  ::google::protobuf::int32 cutoff_rdf_frame_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PickableSpawnerConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PickableSpawnerConfig) */ {
 public:
  PickableSpawnerConfig();
  virtual ~PickableSpawnerConfig();

  PickableSpawnerConfig(const PickableSpawnerConfig& from);

  inline PickableSpawnerConfig& operator=(const PickableSpawnerConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PickableSpawnerConfig(PickableSpawnerConfig&& from) noexcept
    : PickableSpawnerConfig() {
    *this = ::std::move(from);
  }

  inline PickableSpawnerConfig& operator=(PickableSpawnerConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PickableSpawnerConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PickableSpawnerConfig* internal_default_instance() {
    return reinterpret_cast<const PickableSpawnerConfig*>(
               &_PickableSpawnerConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(PickableSpawnerConfig* other);
  friend void swap(PickableSpawnerConfig& a, PickableSpawnerConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PickableSpawnerConfig* New() const final {
    return CreateMaybeMessage<PickableSpawnerConfig>(nullptr);
  }

  PickableSpawnerConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PickableSpawnerConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PickableSpawnerConfig& from);
  void MergeFrom(const PickableSpawnerConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PickableSpawnerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 species_id_list = 2;
  int species_id_list_size() const;
  void clear_species_id_list();
  static const int kSpeciesIdListFieldNumber = 2;
  ::google::protobuf::uint32 species_id_list(int index) const;
  void set_species_id_list(int index, ::google::protobuf::uint32 value);
  void add_species_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      species_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_species_id_list();

  // repeated uint64 init_op_list = 3;
  int init_op_list_size() const;
  void clear_init_op_list();
  static const int kInitOpListFieldNumber = 3;
  ::google::protobuf::uint64 init_op_list(int index) const;
  void set_init_op_list(int index, ::google::protobuf::uint64 value);
  void add_init_op_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      init_op_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_init_op_list();

  // repeated .shared.PickupType pickup_type_list = 4;
  int pickup_type_list_size() const;
  void clear_pickup_type_list();
  static const int kPickupTypeListFieldNumber = 4;
  ::shared::PickupType pickup_type_list(int index) const;
  void set_pickup_type_list(int index, ::shared::PickupType value);
  void add_pickup_type_list(::shared::PickupType value);
  const ::google::protobuf::RepeatedField<int>& pickup_type_list() const;
  ::google::protobuf::RepeatedField<int>* mutable_pickup_type_list();

  // int32 cutoff_rdf_frame_id = 1;
  void clear_cutoff_rdf_frame_id();
  static const int kCutoffRdfFrameIdFieldNumber = 1;
  ::google::protobuf::int32 cutoff_rdf_frame_id() const;
  void set_cutoff_rdf_frame_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.PickableSpawnerConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > species_id_list_;
  mutable std::atomic<int> _species_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > init_op_list_;
  mutable std::atomic<int> _init_op_list_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> pickup_type_list_;
  mutable std::atomic<int> _pickup_type_list_cached_byte_size_;
  ::google::protobuf::int32 cutoff_rdf_frame_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT TriggerColliderAttr :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TriggerColliderAttr) */ {
 public:
  TriggerColliderAttr();
  virtual ~TriggerColliderAttr();

  TriggerColliderAttr(const TriggerColliderAttr& from);

  inline TriggerColliderAttr& operator=(const TriggerColliderAttr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerColliderAttr(TriggerColliderAttr&& from) noexcept
    : TriggerColliderAttr() {
    *this = ::std::move(from);
  }

  inline TriggerColliderAttr& operator=(TriggerColliderAttr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TriggerColliderAttr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerColliderAttr* internal_default_instance() {
    return reinterpret_cast<const TriggerColliderAttr*>(
               &_TriggerColliderAttr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(TriggerColliderAttr* other);
  friend void swap(TriggerColliderAttr& a, TriggerColliderAttr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerColliderAttr* New() const final {
    return CreateMaybeMessage<TriggerColliderAttr>(nullptr);
  }

  TriggerColliderAttr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerColliderAttr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerColliderAttr& from);
  void MergeFrom(const TriggerColliderAttr& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerColliderAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 trigger_local_id = 1;
  void clear_trigger_local_id();
  static const int kTriggerLocalIdFieldNumber = 1;
  ::google::protobuf::int32 trigger_local_id() const;
  void set_trigger_local_id(::google::protobuf::int32 value);

  // int32 species_id = 2;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 2;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.TriggerColliderAttr)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 trigger_local_id_;
  ::google::protobuf::int32 species_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse, 
    ::google::protobuf::uint32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse, 
    ::google::protobuf::uint32, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse();
  TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse& other);
  static const TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse*>(&_TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class JOLTC_EXPORT TriggerConfigFromTiled :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.TriggerConfigFromTiled) */ {
 public:
  TriggerConfigFromTiled();
  virtual ~TriggerConfigFromTiled();

  TriggerConfigFromTiled(const TriggerConfigFromTiled& from);

  inline TriggerConfigFromTiled& operator=(const TriggerConfigFromTiled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerConfigFromTiled(TriggerConfigFromTiled&& from) noexcept
    : TriggerConfigFromTiled() {
    *this = ::std::move(from);
  }

  inline TriggerConfigFromTiled& operator=(TriggerConfigFromTiled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TriggerConfigFromTiled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerConfigFromTiled* internal_default_instance() {
    return reinterpret_cast<const TriggerConfigFromTiled*>(
               &_TriggerConfigFromTiled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(TriggerConfigFromTiled* other);
  friend void swap(TriggerConfigFromTiled& a, TriggerConfigFromTiled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerConfigFromTiled* New() const final {
    return CreateMaybeMessage<TriggerConfigFromTiled>(nullptr);
  }

  TriggerConfigFromTiled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerConfigFromTiled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerConfigFromTiled& from);
  void MergeFrom(const TriggerConfigFromTiled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerConfigFromTiled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated int32 subscribes_to_id_list = 9;
  int subscribes_to_id_list_size() const;
  void clear_subscribes_to_id_list();
  static const int kSubscribesToIdListFieldNumber = 9;
  ::google::protobuf::int32 subscribes_to_id_list(int index) const;
  void set_subscribes_to_id_list(int index, ::google::protobuf::int32 value);
  void add_subscribes_to_id_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      subscribes_to_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_subscribes_to_id_list();

  // repeated int32 subscribes_to_exhausted_id_list = 10;
  int subscribes_to_exhausted_id_list_size() const;
  void clear_subscribes_to_exhausted_id_list();
  static const int kSubscribesToExhaustedIdListFieldNumber = 10;
  ::google::protobuf::int32 subscribes_to_exhausted_id_list(int index) const;
  void set_subscribes_to_exhausted_id_list(int index, ::google::protobuf::int32 value);
  void add_subscribes_to_exhausted_id_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      subscribes_to_exhausted_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_subscribes_to_exhausted_id_list();

  // repeated .shared.CharacterSpawnerConfig character_spawner_time_seq = 16;
  int character_spawner_time_seq_size() const;
  void clear_character_spawner_time_seq();
  static const int kCharacterSpawnerTimeSeqFieldNumber = 16;
  ::shared::CharacterSpawnerConfig* mutable_character_spawner_time_seq(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::CharacterSpawnerConfig >*
      mutable_character_spawner_time_seq();
  const ::shared::CharacterSpawnerConfig& character_spawner_time_seq(int index) const;
  ::shared::CharacterSpawnerConfig* add_character_spawner_time_seq();
  const ::google::protobuf::RepeatedPtrField< ::shared::CharacterSpawnerConfig >&
      character_spawner_time_seq() const;

  // repeated .shared.PickableSpawnerConfig pickable_spawner_time_seq = 17;
  int pickable_spawner_time_seq_size() const;
  void clear_pickable_spawner_time_seq();
  static const int kPickableSpawnerTimeSeqFieldNumber = 17;
  ::shared::PickableSpawnerConfig* mutable_pickable_spawner_time_seq(int index);
  ::google::protobuf::RepeatedPtrField< ::shared::PickableSpawnerConfig >*
      mutable_pickable_spawner_time_seq();
  const ::shared::PickableSpawnerConfig& pickable_spawner_time_seq(int index) const;
  ::shared::PickableSpawnerConfig* add_pickable_spawner_time_seq();
  const ::google::protobuf::RepeatedPtrField< ::shared::PickableSpawnerConfig >&
      pickable_spawner_time_seq() const;

  // map<uint32, bool> boss_species_set = 1026;
  int boss_species_set_size() const;
  void clear_boss_species_set();
  static const int kBossSpeciesSetFieldNumber = 1026;
  const ::google::protobuf::Map< ::google::protobuf::uint32, bool >&
      boss_species_set() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, bool >*
      mutable_boss_species_set();

  // int32 editor_id = 1;
  void clear_editor_id();
  static const int kEditorIdFieldNumber = 1;
  ::google::protobuf::int32 editor_id() const;
  void set_editor_id(::google::protobuf::int32 value);

  // int32 species_id = 2;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 2;
  ::google::protobuf::int32 species_id() const;
  void set_species_id(::google::protobuf::int32 value);

  // int32 delayed_frames = 3;
  void clear_delayed_frames();
  static const int kDelayedFramesFieldNumber = 3;
  ::google::protobuf::int32 delayed_frames() const;
  void set_delayed_frames(::google::protobuf::int32 value);

  // int32 recovery_frames = 4;
  void clear_recovery_frames();
  static const int kRecoveryFramesFieldNumber = 4;
  ::google::protobuf::int32 recovery_frames() const;
  void set_recovery_frames(::google::protobuf::int32 value);

  // int32 bullet_team_id = 5;
  void clear_bullet_team_id();
  static const int kBulletTeamIdFieldNumber = 5;
  ::google::protobuf::int32 bullet_team_id() const;
  void set_bullet_team_id(::google::protobuf::int32 value);

  // int32 sub_cycle_trigger_frames = 6;
  void clear_sub_cycle_trigger_frames();
  static const int kSubCycleTriggerFramesFieldNumber = 6;
  ::google::protobuf::int32 sub_cycle_trigger_frames() const;
  void set_sub_cycle_trigger_frames(::google::protobuf::int32 value);

  // int32 sub_cycle_quota = 7;
  void clear_sub_cycle_quota();
  static const int kSubCycleQuotaFieldNumber = 7;
  ::google::protobuf::int32 sub_cycle_quota() const;
  void set_sub_cycle_quota(::google::protobuf::int32 value);

  // int32 quota_cap = 8;
  void clear_quota_cap();
  static const int kQuotaCapFieldNumber = 8;
  ::google::protobuf::int32 quota_cap() const;
  void set_quota_cap(::google::protobuf::int32 value);

  // float new_revival_x = 11;
  void clear_new_revival_x();
  static const int kNewRevivalXFieldNumber = 11;
  float new_revival_x() const;
  void set_new_revival_x(float value);

  // float new_revival_y = 12;
  void clear_new_revival_y();
  static const int kNewRevivalYFieldNumber = 12;
  float new_revival_y() const;
  void set_new_revival_y(float value);

  // int32 init_dir_x = 13;
  void clear_init_dir_x();
  static const int kInitDirXFieldNumber = 13;
  ::google::protobuf::int32 init_dir_x() const;
  void set_init_dir_x(::google::protobuf::int32 value);

  // int32 init_dir_y = 14;
  void clear_init_dir_y();
  static const int kInitDirYFieldNumber = 14;
  ::google::protobuf::int32 init_dir_y() const;
  void set_init_dir_y(::google::protobuf::int32 value);

  // uint64 publishing_evt_mask_upon_exhausted = 15;
  void clear_publishing_evt_mask_upon_exhausted();
  static const int kPublishingEvtMaskUponExhaustedFieldNumber = 15;
  ::google::protobuf::uint64 publishing_evt_mask_upon_exhausted() const;
  void set_publishing_evt_mask_upon_exhausted(::google::protobuf::uint64 value);

  // uint64 force_ctrl_cmd = 19;
  void clear_force_ctrl_cmd();
  static const int kForceCtrlCmdFieldNumber = 19;
  ::google::protobuf::uint64 force_ctrl_cmd() const;
  void set_force_ctrl_cmd(::google::protobuf::uint64 value);

  // int32 force_ctrl_rdf_count = 18;
  void clear_force_ctrl_rdf_count();
  static const int kForceCtrlRdfCountFieldNumber = 18;
  ::google::protobuf::int32 force_ctrl_rdf_count() const;
  void set_force_ctrl_rdf_count(::google::protobuf::int32 value);

  // bool reload_colliders_in_new_phase = 20;
  void clear_reload_colliders_in_new_phase();
  static const int kReloadCollidersInNewPhaseFieldNumber = 20;
  bool reload_colliders_in_new_phase() const;
  void set_reload_colliders_in_new_phase(bool value);

  // bool is_boss_savepoint = 1027;
  void clear_is_boss_savepoint();
  static const int kIsBossSavepointFieldNumber = 1027;
  bool is_boss_savepoint() const;
  void set_is_boss_savepoint(bool value);

  // int32 story_point_id = 1024;
  void clear_story_point_id();
  static const int kStoryPointIdFieldNumber = 1024;
  ::google::protobuf::int32 story_point_id() const;
  void set_story_point_id(::google::protobuf::int32 value);

  // int32 bgm_id = 1025;
  void clear_bgm_id();
  static const int kBgmIdFieldNumber = 1025;
  ::google::protobuf::int32 bgm_id() const;
  void set_bgm_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.TriggerConfigFromTiled)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > subscribes_to_id_list_;
  mutable std::atomic<int> _subscribes_to_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > subscribes_to_exhausted_id_list_;
  mutable std::atomic<int> _subscribes_to_exhausted_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::shared::CharacterSpawnerConfig > character_spawner_time_seq_;
  ::google::protobuf::RepeatedPtrField< ::shared::PickableSpawnerConfig > pickable_spawner_time_seq_;
  ::google::protobuf::internal::MapField<
      TriggerConfigFromTiled_BossSpeciesSetEntry_DoNotUse,
      ::google::protobuf::uint32, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > boss_species_set_;
  ::google::protobuf::int32 editor_id_;
  ::google::protobuf::int32 species_id_;
  ::google::protobuf::int32 delayed_frames_;
  ::google::protobuf::int32 recovery_frames_;
  ::google::protobuf::int32 bullet_team_id_;
  ::google::protobuf::int32 sub_cycle_trigger_frames_;
  ::google::protobuf::int32 sub_cycle_quota_;
  ::google::protobuf::int32 quota_cap_;
  float new_revival_x_;
  float new_revival_y_;
  ::google::protobuf::int32 init_dir_x_;
  ::google::protobuf::int32 init_dir_y_;
  ::google::protobuf::uint64 publishing_evt_mask_upon_exhausted_;
  ::google::protobuf::uint64 force_ctrl_cmd_;
  ::google::protobuf::int32 force_ctrl_rdf_count_;
  bool reload_colliders_in_new_phase_;
  bool is_boss_savepoint_;
  ::google::protobuf::int32 story_point_id_;
  ::google::protobuf::int32 bgm_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT Trigger :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.Trigger) */ {
 public:
  Trigger();
  virtual ~Trigger();

  Trigger(const Trigger& from);

  inline Trigger& operator=(const Trigger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Trigger(Trigger&& from) noexcept
    : Trigger() {
    *this = ::std::move(from);
  }

  inline Trigger& operator=(Trigger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Trigger& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Trigger* internal_default_instance() {
    return reinterpret_cast<const Trigger*>(
               &_Trigger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(Trigger* other);
  friend void swap(Trigger& a, Trigger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Trigger* New() const final {
    return CreateMaybeMessage<Trigger>(nullptr);
  }

  Trigger* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Trigger>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Trigger& from);
  void MergeFrom(const Trigger& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trigger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 editor_id = 1;
  void clear_editor_id();
  static const int kEditorIdFieldNumber = 1;
  ::google::protobuf::int32 editor_id() const;
  void set_editor_id(::google::protobuf::int32 value);

  // int32 trigger_local_id = 2;
  void clear_trigger_local_id();
  static const int kTriggerLocalIdFieldNumber = 2;
  ::google::protobuf::int32 trigger_local_id() const;
  void set_trigger_local_id(::google::protobuf::int32 value);

  // int32 frames_to_fire = 3;
  void clear_frames_to_fire();
  static const int kFramesToFireFieldNumber = 3;
  ::google::protobuf::int32 frames_to_fire() const;
  void set_frames_to_fire(::google::protobuf::int32 value);

  // int32 frames_to_recover = 4;
  void clear_frames_to_recover();
  static const int kFramesToRecoverFieldNumber = 4;
  ::google::protobuf::int32 frames_to_recover() const;
  void set_frames_to_recover(::google::protobuf::int32 value);

  // int32 quota = 5;
  void clear_quota();
  static const int kQuotaFieldNumber = 5;
  ::google::protobuf::int32 quota() const;
  void set_quota(::google::protobuf::int32 value);

  // int32 bullet_team_id = 6;
  void clear_bullet_team_id();
  static const int kBulletTeamIdFieldNumber = 6;
  ::google::protobuf::int32 bullet_team_id() const;
  void set_bullet_team_id(::google::protobuf::int32 value);

  // int32 dir_x = 7;
  void clear_dir_x();
  static const int kDirXFieldNumber = 7;
  ::google::protobuf::int32 dir_x() const;
  void set_dir_x(::google::protobuf::int32 value);

  // int32 sub_cycle_quota_left = 9;
  void clear_sub_cycle_quota_left();
  static const int kSubCycleQuotaLeftFieldNumber = 9;
  ::google::protobuf::int32 sub_cycle_quota_left() const;
  void set_sub_cycle_quota_left(::google::protobuf::int32 value);

  // .shared.TriggerState state = 10;
  void clear_state();
  static const int kStateFieldNumber = 10;
  ::shared::TriggerState state() const;
  void set_state(::shared::TriggerState value);

  // int32 frames_in_state = 11;
  void clear_frames_in_state();
  static const int kFramesInStateFieldNumber = 11;
  ::google::protobuf::int32 frames_in_state() const;
  void set_frames_in_state(::google::protobuf::int32 value);

  // float x = 12;
  void clear_x();
  static const int kXFieldNumber = 12;
  float x() const;
  void set_x(float value);

  // float y = 13;
  void clear_y();
  static const int kYFieldNumber = 13;
  float y() const;
  void set_y(float value);

  // uint64 demanded_evt_mask = 14;
  void clear_demanded_evt_mask();
  static const int kDemandedEvtMaskFieldNumber = 14;
  ::google::protobuf::uint64 demanded_evt_mask() const;
  void set_demanded_evt_mask(::google::protobuf::uint64 value);

  // uint64 fulfilled_evt_mask = 15;
  void clear_fulfilled_evt_mask();
  static const int kFulfilledEvtMaskFieldNumber = 15;
  ::google::protobuf::uint64 fulfilled_evt_mask() const;
  void set_fulfilled_evt_mask(::google::protobuf::uint64 value);

  // uint64 wave_npc_killed_evt_mask_counter = 16;
  void clear_wave_npc_killed_evt_mask_counter();
  static const int kWaveNpcKilledEvtMaskCounterFieldNumber = 16;
  ::google::protobuf::uint64 wave_npc_killed_evt_mask_counter() const;
  void set_wave_npc_killed_evt_mask_counter(::google::protobuf::uint64 value);

  // uint64 subscriber_local_ids_mask = 17;
  void clear_subscriber_local_ids_mask();
  static const int kSubscriberLocalIdsMaskFieldNumber = 17;
  ::google::protobuf::uint64 subscriber_local_ids_mask() const;
  void set_subscriber_local_ids_mask(::google::protobuf::uint64 value);

  // uint64 exhaust_subscriber_local_ids_mask = 18;
  void clear_exhaust_subscriber_local_ids_mask();
  static const int kExhaustSubscriberLocalIdsMaskFieldNumber = 18;
  ::google::protobuf::uint64 exhaust_subscriber_local_ids_mask() const;
  void set_exhaust_subscriber_local_ids_mask(::google::protobuf::uint64 value);

  // int32 offender_join_index = 19;
  void clear_offender_join_index();
  static const int kOffenderJoinIndexFieldNumber = 19;
  ::google::protobuf::int32 offender_join_index() const;
  void set_offender_join_index(::google::protobuf::int32 value);

  // int32 offender_bullet_team_id = 20;
  void clear_offender_bullet_team_id();
  static const int kOffenderBulletTeamIdFieldNumber = 20;
  ::google::protobuf::int32 offender_bullet_team_id() const;
  void set_offender_bullet_team_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.Trigger)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 editor_id_;
  ::google::protobuf::int32 trigger_local_id_;
  ::google::protobuf::int32 frames_to_fire_;
  ::google::protobuf::int32 frames_to_recover_;
  ::google::protobuf::int32 quota_;
  ::google::protobuf::int32 bullet_team_id_;
  ::google::protobuf::int32 dir_x_;
  ::google::protobuf::int32 sub_cycle_quota_left_;
  int state_;
  ::google::protobuf::int32 frames_in_state_;
  float x_;
  float y_;
  ::google::protobuf::uint64 demanded_evt_mask_;
  ::google::protobuf::uint64 fulfilled_evt_mask_;
  ::google::protobuf::uint64 wave_npc_killed_evt_mask_counter_;
  ::google::protobuf::uint64 subscriber_local_ids_mask_;
  ::google::protobuf::uint64 exhaust_subscriber_local_ids_mask_;
  ::google::protobuf::int32 offender_join_index_;
  ::google::protobuf::int32 offender_bullet_team_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT PlayerMetaInfo :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.PlayerMetaInfo) */ {
 public:
  PlayerMetaInfo();
  virtual ~PlayerMetaInfo();

  PlayerMetaInfo(const PlayerMetaInfo& from);

  inline PlayerMetaInfo& operator=(const PlayerMetaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMetaInfo(PlayerMetaInfo&& from) noexcept
    : PlayerMetaInfo() {
    *this = ::std::move(from);
  }

  inline PlayerMetaInfo& operator=(PlayerMetaInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlayerMetaInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerMetaInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerMetaInfo*>(
               &_PlayerMetaInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(PlayerMetaInfo* other);
  friend void swap(PlayerMetaInfo& a, PlayerMetaInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMetaInfo* New() const final {
    return CreateMaybeMessage<PlayerMetaInfo>(nullptr);
  }

  PlayerMetaInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlayerMetaInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlayerMetaInfo& from);
  void MergeFrom(const PlayerMetaInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerMetaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_id = 1;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  const ::std::string& player_id() const;
  void set_player_id(const ::std::string& value);
  #if LANG_CXX11
  void set_player_id(::std::string&& value);
  #endif
  void set_player_id(const char* value);
  void set_player_id(const char* value, size_t size);
  ::std::string* mutable_player_id();
  ::std::string* release_player_id();
  void set_allocated_player_id(::std::string* player_id);

  // int32 join_index = 2;
  void clear_join_index();
  static const int kJoinIndexFieldNumber = 2;
  ::google::protobuf::int32 join_index() const;
  void set_join_index(::google::protobuf::int32 value);

  // int32 bullet_team_id = 3;
  void clear_bullet_team_id();
  static const int kBulletTeamIdFieldNumber = 3;
  ::google::protobuf::int32 bullet_team_id() const;
  void set_bullet_team_id(::google::protobuf::int32 value);

  // uint32 species_id = 4;
  void clear_species_id();
  static const int kSpeciesIdFieldNumber = 4;
  ::google::protobuf::uint32 species_id() const;
  void set_species_id(::google::protobuf::uint32 value);

  // int32 room_id = 5;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 5;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:shared.PlayerMetaInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_id_;
  ::google::protobuf::int32 join_index_;
  ::google::protobuf::int32 bullet_team_id_;
  ::google::protobuf::uint32 species_id_;
  ::google::protobuf::int32 room_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// -------------------------------------------------------------------

class JOLTC_EXPORT RpcEndpointHolder :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shared.RpcEndpointHolder) */ {
 public:
  RpcEndpointHolder();
  virtual ~RpcEndpointHolder();

  RpcEndpointHolder(const RpcEndpointHolder& from);

  inline RpcEndpointHolder& operator=(const RpcEndpointHolder& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcEndpointHolder(RpcEndpointHolder&& from) noexcept
    : RpcEndpointHolder() {
    *this = ::std::move(from);
  }

  inline RpcEndpointHolder& operator=(RpcEndpointHolder&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RpcEndpointHolder& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcEndpointHolder* internal_default_instance() {
    return reinterpret_cast<const RpcEndpointHolder*>(
               &_RpcEndpointHolder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(RpcEndpointHolder* other);
  friend void swap(RpcEndpointHolder& a, RpcEndpointHolder& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcEndpointHolder* New() const final {
    return CreateMaybeMessage<RpcEndpointHolder>(nullptr);
  }

  RpcEndpointHolder* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RpcEndpointHolder>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RpcEndpointHolder& from);
  void MergeFrom(const RpcEndpointHolder& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RpcEndpointHolder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string external_addr_host = 2;
  void clear_external_addr_host();
  static const int kExternalAddrHostFieldNumber = 2;
  const ::std::string& external_addr_host() const;
  void set_external_addr_host(const ::std::string& value);
  #if LANG_CXX11
  void set_external_addr_host(::std::string&& value);
  #endif
  void set_external_addr_host(const char* value);
  void set_external_addr_host(const char* value, size_t size);
  ::std::string* mutable_external_addr_host();
  ::std::string* release_external_addr_host();
  void set_allocated_external_addr_host(::std::string* external_addr_host);

  // string internal_addr_host = 4;
  void clear_internal_addr_host();
  static const int kInternalAddrHostFieldNumber = 4;
  const ::std::string& internal_addr_host() const;
  void set_internal_addr_host(const ::std::string& value);
  #if LANG_CXX11
  void set_internal_addr_host(::std::string&& value);
  #endif
  void set_internal_addr_host(const char* value);
  void set_internal_addr_host(const char* value, size_t size);
  ::std::string* mutable_internal_addr_host();
  ::std::string* release_internal_addr_host();
  void set_allocated_internal_addr_host(::std::string* internal_addr_host);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 external_addr_port = 3;
  void clear_external_addr_port();
  static const int kExternalAddrPortFieldNumber = 3;
  ::google::protobuf::uint32 external_addr_port() const;
  void set_external_addr_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shared.RpcEndpointHolder)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr external_addr_host_;
  ::google::protobuf::internal::ArenaStringPtr internal_addr_host_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 external_addr_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_serializable_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AuthTokenUnderlying

// string player_id = 1;
inline void AuthTokenUnderlying::clear_player_id() {
  player_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthTokenUnderlying::player_id() const {
  // @@protoc_insertion_point(field_get:shared.AuthTokenUnderlying.player_id)
  return player_id_.GetNoArena();
}
inline void AuthTokenUnderlying::set_player_id(const ::std::string& value) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthTokenUnderlying.player_id)
}
#if LANG_CXX11
inline void AuthTokenUnderlying::set_player_id(::std::string&& value) {
  
  player_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthTokenUnderlying.player_id)
}
#endif
inline void AuthTokenUnderlying::set_player_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthTokenUnderlying.player_id)
}
inline void AuthTokenUnderlying::set_player_id(const char* value, size_t size) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthTokenUnderlying.player_id)
}
inline ::std::string* AuthTokenUnderlying::mutable_player_id() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthTokenUnderlying.player_id)
  return player_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthTokenUnderlying::release_player_id() {
  // @@protoc_insertion_point(field_release:shared.AuthTokenUnderlying.player_id)
  
  return player_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthTokenUnderlying::set_allocated_player_id(::std::string* player_id) {
  if (player_id != nullptr) {
    
  } else {
    
  }
  player_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_id);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthTokenUnderlying.player_id)
}

// uint32 from_authsrv_id = 2;
inline void AuthTokenUnderlying::clear_from_authsrv_id() {
  from_authsrv_id_ = 0u;
}
inline ::google::protobuf::uint32 AuthTokenUnderlying::from_authsrv_id() const {
  // @@protoc_insertion_point(field_get:shared.AuthTokenUnderlying.from_authsrv_id)
  return from_authsrv_id_;
}
inline void AuthTokenUnderlying::set_from_authsrv_id(::google::protobuf::uint32 value) {
  
  from_authsrv_id_ = value;
  // @@protoc_insertion_point(field_set:shared.AuthTokenUnderlying.from_authsrv_id)
}

// uint32 to_battlesrv_id = 3;
inline void AuthTokenUnderlying::clear_to_battlesrv_id() {
  to_battlesrv_id_ = 0u;
}
inline ::google::protobuf::uint32 AuthTokenUnderlying::to_battlesrv_id() const {
  // @@protoc_insertion_point(field_get:shared.AuthTokenUnderlying.to_battlesrv_id)
  return to_battlesrv_id_;
}
inline void AuthTokenUnderlying::set_to_battlesrv_id(::google::protobuf::uint32 value) {
  
  to_battlesrv_id_ = value;
  // @@protoc_insertion_point(field_set:shared.AuthTokenUnderlying.to_battlesrv_id)
}

// int64 expires_at = 4;
inline void AuthTokenUnderlying::clear_expires_at() {
  expires_at_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthTokenUnderlying::expires_at() const {
  // @@protoc_insertion_point(field_get:shared.AuthTokenUnderlying.expires_at)
  return expires_at_;
}
inline void AuthTokenUnderlying::set_expires_at(::google::protobuf::int64 value) {
  
  expires_at_ = value;
  // @@protoc_insertion_point(field_set:shared.AuthTokenUnderlying.expires_at)
}

// -------------------------------------------------------------------

// AuthResult

// int32 ret_code = 1;
inline void AuthResult::clear_ret_code() {
  ret_code_ = 0;
}
inline ::google::protobuf::int32 AuthResult::ret_code() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.ret_code)
  return ret_code_;
}
inline void AuthResult::set_ret_code(::google::protobuf::int32 value) {
  
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:shared.AuthResult.ret_code)
}

// string uname = 2;
inline void AuthResult::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::uname() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.uname)
  return uname_.GetNoArena();
}
inline void AuthResult::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.uname)
}
#if LANG_CXX11
inline void AuthResult::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.uname)
}
#endif
inline void AuthResult::set_uname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.uname)
}
inline void AuthResult::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.uname)
}
inline ::std::string* AuthResult::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_uname() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_uname(::std::string* uname) {
  if (uname != nullptr) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.uname)
}

// string captcha = 3;
inline void AuthResult::clear_captcha() {
  captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::captcha() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.captcha)
  return captcha_.GetNoArena();
}
inline void AuthResult::set_captcha(const ::std::string& value) {
  
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.captcha)
}
#if LANG_CXX11
inline void AuthResult::set_captcha(::std::string&& value) {
  
  captcha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.captcha)
}
#endif
inline void AuthResult::set_captcha(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.captcha)
}
inline void AuthResult::set_captcha(const char* value, size_t size) {
  
  captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.captcha)
}
inline ::std::string* AuthResult::mutable_captcha() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.captcha)
  return captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_captcha() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.captcha)
  
  return captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_captcha(::std::string* captcha) {
  if (captcha != nullptr) {
    
  } else {
    
  }
  captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captcha);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.captcha)
}

// int64 expires_at = 4;
inline void AuthResult::clear_expires_at() {
  expires_at_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthResult::expires_at() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.expires_at)
  return expires_at_;
}
inline void AuthResult::set_expires_at(::google::protobuf::int64 value) {
  
  expires_at_ = value;
  // @@protoc_insertion_point(field_set:shared.AuthResult.expires_at)
}

// string player_id = 5;
inline void AuthResult::clear_player_id() {
  player_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::player_id() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.player_id)
  return player_id_.GetNoArena();
}
inline void AuthResult::set_player_id(const ::std::string& value) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.player_id)
}
#if LANG_CXX11
inline void AuthResult::set_player_id(::std::string&& value) {
  
  player_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.player_id)
}
#endif
inline void AuthResult::set_player_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.player_id)
}
inline void AuthResult::set_player_id(const char* value, size_t size) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.player_id)
}
inline ::std::string* AuthResult::mutable_player_id() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.player_id)
  return player_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_player_id() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.player_id)
  
  return player_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_player_id(::std::string* player_id) {
  if (player_id != nullptr) {
    
  } else {
    
  }
  player_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_id);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.player_id)
}

// string new_auth_token = 6;
inline void AuthResult::clear_new_auth_token() {
  new_auth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::new_auth_token() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.new_auth_token)
  return new_auth_token_.GetNoArena();
}
inline void AuthResult::set_new_auth_token(const ::std::string& value) {
  
  new_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.new_auth_token)
}
#if LANG_CXX11
inline void AuthResult::set_new_auth_token(::std::string&& value) {
  
  new_auth_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.new_auth_token)
}
#endif
inline void AuthResult::set_new_auth_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  new_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.new_auth_token)
}
inline void AuthResult::set_new_auth_token(const char* value, size_t size) {
  
  new_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.new_auth_token)
}
inline ::std::string* AuthResult::mutable_new_auth_token() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.new_auth_token)
  return new_auth_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_new_auth_token() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.new_auth_token)
  
  return new_auth_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_new_auth_token(::std::string* new_auth_token) {
  if (new_auth_token != nullptr) {
    
  } else {
    
  }
  new_auth_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_auth_token);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.new_auth_token)
}

// string new_auth_token_sig = 7;
inline void AuthResult::clear_new_auth_token_sig() {
  new_auth_token_sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::new_auth_token_sig() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.new_auth_token_sig)
  return new_auth_token_sig_.GetNoArena();
}
inline void AuthResult::set_new_auth_token_sig(const ::std::string& value) {
  
  new_auth_token_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.new_auth_token_sig)
}
#if LANG_CXX11
inline void AuthResult::set_new_auth_token_sig(::std::string&& value) {
  
  new_auth_token_sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.new_auth_token_sig)
}
#endif
inline void AuthResult::set_new_auth_token_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  new_auth_token_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.new_auth_token_sig)
}
inline void AuthResult::set_new_auth_token_sig(const char* value, size_t size) {
  
  new_auth_token_sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.new_auth_token_sig)
}
inline ::std::string* AuthResult::mutable_new_auth_token_sig() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.new_auth_token_sig)
  return new_auth_token_sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_new_auth_token_sig() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.new_auth_token_sig)
  
  return new_auth_token_sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_new_auth_token_sig(::std::string* new_auth_token_sig) {
  if (new_auth_token_sig != nullptr) {
    
  } else {
    
  }
  new_auth_token_sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_auth_token_sig);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.new_auth_token_sig)
}

// uint32 captcha_submit_authsrv_id = 8;
inline void AuthResult::clear_captcha_submit_authsrv_id() {
  captcha_submit_authsrv_id_ = 0u;
}
inline ::google::protobuf::uint32 AuthResult::captcha_submit_authsrv_id() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.captcha_submit_authsrv_id)
  return captcha_submit_authsrv_id_;
}
inline void AuthResult::set_captcha_submit_authsrv_id(::google::protobuf::uint32 value) {
  
  captcha_submit_authsrv_id_ = value;
  // @@protoc_insertion_point(field_set:shared.AuthResult.captcha_submit_authsrv_id)
}

// string battlesrv_hostname_only = 9;
inline void AuthResult::clear_battlesrv_hostname_only() {
  battlesrv_hostname_only_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::battlesrv_hostname_only() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.battlesrv_hostname_only)
  return battlesrv_hostname_only_.GetNoArena();
}
inline void AuthResult::set_battlesrv_hostname_only(const ::std::string& value) {
  
  battlesrv_hostname_only_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.battlesrv_hostname_only)
}
#if LANG_CXX11
inline void AuthResult::set_battlesrv_hostname_only(::std::string&& value) {
  
  battlesrv_hostname_only_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.battlesrv_hostname_only)
}
#endif
inline void AuthResult::set_battlesrv_hostname_only(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  battlesrv_hostname_only_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.battlesrv_hostname_only)
}
inline void AuthResult::set_battlesrv_hostname_only(const char* value, size_t size) {
  
  battlesrv_hostname_only_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.battlesrv_hostname_only)
}
inline ::std::string* AuthResult::mutable_battlesrv_hostname_only() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.battlesrv_hostname_only)
  return battlesrv_hostname_only_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_battlesrv_hostname_only() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.battlesrv_hostname_only)
  
  return battlesrv_hostname_only_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_battlesrv_hostname_only(::std::string* battlesrv_hostname_only) {
  if (battlesrv_hostname_only != nullptr) {
    
  } else {
    
  }
  battlesrv_hostname_only_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), battlesrv_hostname_only);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.battlesrv_hostname_only)
}

// string battlesrv_endpoint = 10;
inline void AuthResult::clear_battlesrv_endpoint() {
  battlesrv_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthResult::battlesrv_endpoint() const {
  // @@protoc_insertion_point(field_get:shared.AuthResult.battlesrv_endpoint)
  return battlesrv_endpoint_.GetNoArena();
}
inline void AuthResult::set_battlesrv_endpoint(const ::std::string& value) {
  
  battlesrv_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.AuthResult.battlesrv_endpoint)
}
#if LANG_CXX11
inline void AuthResult::set_battlesrv_endpoint(::std::string&& value) {
  
  battlesrv_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.AuthResult.battlesrv_endpoint)
}
#endif
inline void AuthResult::set_battlesrv_endpoint(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  battlesrv_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.AuthResult.battlesrv_endpoint)
}
inline void AuthResult::set_battlesrv_endpoint(const char* value, size_t size) {
  
  battlesrv_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.AuthResult.battlesrv_endpoint)
}
inline ::std::string* AuthResult::mutable_battlesrv_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:shared.AuthResult.battlesrv_endpoint)
  return battlesrv_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthResult::release_battlesrv_endpoint() {
  // @@protoc_insertion_point(field_release:shared.AuthResult.battlesrv_endpoint)
  
  return battlesrv_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthResult::set_allocated_battlesrv_endpoint(::std::string* battlesrv_endpoint) {
  if (battlesrv_endpoint != nullptr) {
    
  } else {
    
  }
  battlesrv_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), battlesrv_endpoint);
  // @@protoc_insertion_point(field_set_allocated:shared.AuthResult.battlesrv_endpoint)
}

// -------------------------------------------------------------------

// SteamAuthenticateUserTicketPayloadParams

// string result = 1;
inline void SteamAuthenticateUserTicketPayloadParams::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SteamAuthenticateUserTicketPayloadParams::result() const {
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketPayloadParams.result)
  return result_.GetNoArena();
}
inline void SteamAuthenticateUserTicketPayloadParams::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.SteamAuthenticateUserTicketPayloadParams.result)
}
#if LANG_CXX11
inline void SteamAuthenticateUserTicketPayloadParams::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.SteamAuthenticateUserTicketPayloadParams.result)
}
#endif
inline void SteamAuthenticateUserTicketPayloadParams::set_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.SteamAuthenticateUserTicketPayloadParams.result)
}
inline void SteamAuthenticateUserTicketPayloadParams::set_result(const char* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.SteamAuthenticateUserTicketPayloadParams.result)
}
inline ::std::string* SteamAuthenticateUserTicketPayloadParams::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:shared.SteamAuthenticateUserTicketPayloadParams.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SteamAuthenticateUserTicketPayloadParams::release_result() {
  // @@protoc_insertion_point(field_release:shared.SteamAuthenticateUserTicketPayloadParams.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SteamAuthenticateUserTicketPayloadParams::set_allocated_result(::std::string* result) {
  if (result != nullptr) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:shared.SteamAuthenticateUserTicketPayloadParams.result)
}

// string steamid = 2;
inline void SteamAuthenticateUserTicketPayloadParams::clear_steamid() {
  steamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SteamAuthenticateUserTicketPayloadParams::steamid() const {
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
  return steamid_.GetNoArena();
}
inline void SteamAuthenticateUserTicketPayloadParams::set_steamid(const ::std::string& value) {
  
  steamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
}
#if LANG_CXX11
inline void SteamAuthenticateUserTicketPayloadParams::set_steamid(::std::string&& value) {
  
  steamid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
}
#endif
inline void SteamAuthenticateUserTicketPayloadParams::set_steamid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  steamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
}
inline void SteamAuthenticateUserTicketPayloadParams::set_steamid(const char* value, size_t size) {
  
  steamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
}
inline ::std::string* SteamAuthenticateUserTicketPayloadParams::mutable_steamid() {
  
  // @@protoc_insertion_point(field_mutable:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
  return steamid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SteamAuthenticateUserTicketPayloadParams::release_steamid() {
  // @@protoc_insertion_point(field_release:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
  
  return steamid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SteamAuthenticateUserTicketPayloadParams::set_allocated_steamid(::std::string* steamid) {
  if (steamid != nullptr) {
    
  } else {
    
  }
  steamid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), steamid);
  // @@protoc_insertion_point(field_set_allocated:shared.SteamAuthenticateUserTicketPayloadParams.steamid)
}

// string ownersteamid = 3;
inline void SteamAuthenticateUserTicketPayloadParams::clear_ownersteamid() {
  ownersteamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SteamAuthenticateUserTicketPayloadParams::ownersteamid() const {
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
  return ownersteamid_.GetNoArena();
}
inline void SteamAuthenticateUserTicketPayloadParams::set_ownersteamid(const ::std::string& value) {
  
  ownersteamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
}
#if LANG_CXX11
inline void SteamAuthenticateUserTicketPayloadParams::set_ownersteamid(::std::string&& value) {
  
  ownersteamid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
}
#endif
inline void SteamAuthenticateUserTicketPayloadParams::set_ownersteamid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ownersteamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
}
inline void SteamAuthenticateUserTicketPayloadParams::set_ownersteamid(const char* value, size_t size) {
  
  ownersteamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
}
inline ::std::string* SteamAuthenticateUserTicketPayloadParams::mutable_ownersteamid() {
  
  // @@protoc_insertion_point(field_mutable:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
  return ownersteamid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SteamAuthenticateUserTicketPayloadParams::release_ownersteamid() {
  // @@protoc_insertion_point(field_release:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
  
  return ownersteamid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SteamAuthenticateUserTicketPayloadParams::set_allocated_ownersteamid(::std::string* ownersteamid) {
  if (ownersteamid != nullptr) {
    
  } else {
    
  }
  ownersteamid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownersteamid);
  // @@protoc_insertion_point(field_set_allocated:shared.SteamAuthenticateUserTicketPayloadParams.ownersteamid)
}

// bool vacbanned = 4;
inline void SteamAuthenticateUserTicketPayloadParams::clear_vacbanned() {
  vacbanned_ = false;
}
inline bool SteamAuthenticateUserTicketPayloadParams::vacbanned() const {
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketPayloadParams.vacbanned)
  return vacbanned_;
}
inline void SteamAuthenticateUserTicketPayloadParams::set_vacbanned(bool value) {
  
  vacbanned_ = value;
  // @@protoc_insertion_point(field_set:shared.SteamAuthenticateUserTicketPayloadParams.vacbanned)
}

// bool publisherbanned = 5;
inline void SteamAuthenticateUserTicketPayloadParams::clear_publisherbanned() {
  publisherbanned_ = false;
}
inline bool SteamAuthenticateUserTicketPayloadParams::publisherbanned() const {
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketPayloadParams.publisherbanned)
  return publisherbanned_;
}
inline void SteamAuthenticateUserTicketPayloadParams::set_publisherbanned(bool value) {
  
  publisherbanned_ = value;
  // @@protoc_insertion_point(field_set:shared.SteamAuthenticateUserTicketPayloadParams.publisherbanned)
}

// -------------------------------------------------------------------

// SteamAuthenticateUserTicketPayloadResp

// .shared.SteamAuthenticateUserTicketPayloadParams params = 1;
inline bool SteamAuthenticateUserTicketPayloadResp::has_params() const {
  return this != internal_default_instance() && params_ != nullptr;
}
inline void SteamAuthenticateUserTicketPayloadResp::clear_params() {
  if (GetArenaNoVirtual() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
}
inline const ::shared::SteamAuthenticateUserTicketPayloadParams& SteamAuthenticateUserTicketPayloadResp::params() const {
  const ::shared::SteamAuthenticateUserTicketPayloadParams* p = params_;
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketPayloadResp.params)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SteamAuthenticateUserTicketPayloadParams*>(
      &::shared::_SteamAuthenticateUserTicketPayloadParams_default_instance_);
}
inline ::shared::SteamAuthenticateUserTicketPayloadParams* SteamAuthenticateUserTicketPayloadResp::release_params() {
  // @@protoc_insertion_point(field_release:shared.SteamAuthenticateUserTicketPayloadResp.params)
  
  ::shared::SteamAuthenticateUserTicketPayloadParams* temp = params_;
  params_ = nullptr;
  return temp;
}
inline ::shared::SteamAuthenticateUserTicketPayloadParams* SteamAuthenticateUserTicketPayloadResp::mutable_params() {
  
  if (params_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SteamAuthenticateUserTicketPayloadParams>(GetArenaNoVirtual());
    params_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SteamAuthenticateUserTicketPayloadResp.params)
  return params_;
}
inline void SteamAuthenticateUserTicketPayloadResp::set_allocated_params(::shared::SteamAuthenticateUserTicketPayloadParams* params) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete params_;
  }
  if (params) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      params = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    
  } else {
    
  }
  params_ = params;
  // @@protoc_insertion_point(field_set_allocated:shared.SteamAuthenticateUserTicketPayloadResp.params)
}

// -------------------------------------------------------------------

// SteamAuthenticateUserTicketResult

// .shared.SteamAuthenticateUserTicketPayloadResp response = 1;
inline bool SteamAuthenticateUserTicketResult::has_response() const {
  return this != internal_default_instance() && response_ != nullptr;
}
inline void SteamAuthenticateUserTicketResult::clear_response() {
  if (GetArenaNoVirtual() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
}
inline const ::shared::SteamAuthenticateUserTicketPayloadResp& SteamAuthenticateUserTicketResult::response() const {
  const ::shared::SteamAuthenticateUserTicketPayloadResp* p = response_;
  // @@protoc_insertion_point(field_get:shared.SteamAuthenticateUserTicketResult.response)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SteamAuthenticateUserTicketPayloadResp*>(
      &::shared::_SteamAuthenticateUserTicketPayloadResp_default_instance_);
}
inline ::shared::SteamAuthenticateUserTicketPayloadResp* SteamAuthenticateUserTicketResult::release_response() {
  // @@protoc_insertion_point(field_release:shared.SteamAuthenticateUserTicketResult.response)
  
  ::shared::SteamAuthenticateUserTicketPayloadResp* temp = response_;
  response_ = nullptr;
  return temp;
}
inline ::shared::SteamAuthenticateUserTicketPayloadResp* SteamAuthenticateUserTicketResult::mutable_response() {
  
  if (response_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SteamAuthenticateUserTicketPayloadResp>(GetArenaNoVirtual());
    response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SteamAuthenticateUserTicketResult.response)
  return response_;
}
inline void SteamAuthenticateUserTicketResult::set_allocated_response(::shared::SteamAuthenticateUserTicketPayloadResp* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete response_;
  }
  if (response) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    
  } else {
    
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:shared.SteamAuthenticateUserTicketResult.response)
}

// -------------------------------------------------------------------

// BattleInvitation

// string from_player_id = 1;
inline void BattleInvitation::clear_from_player_id() {
  from_player_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BattleInvitation::from_player_id() const {
  // @@protoc_insertion_point(field_get:shared.BattleInvitation.from_player_id)
  return from_player_id_.GetNoArena();
}
inline void BattleInvitation::set_from_player_id(const ::std::string& value) {
  
  from_player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BattleInvitation.from_player_id)
}
#if LANG_CXX11
inline void BattleInvitation::set_from_player_id(::std::string&& value) {
  
  from_player_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BattleInvitation.from_player_id)
}
#endif
inline void BattleInvitation::set_from_player_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  from_player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BattleInvitation.from_player_id)
}
inline void BattleInvitation::set_from_player_id(const char* value, size_t size) {
  
  from_player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BattleInvitation.from_player_id)
}
inline ::std::string* BattleInvitation::mutable_from_player_id() {
  
  // @@protoc_insertion_point(field_mutable:shared.BattleInvitation.from_player_id)
  return from_player_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BattleInvitation::release_from_player_id() {
  // @@protoc_insertion_point(field_release:shared.BattleInvitation.from_player_id)
  
  return from_player_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BattleInvitation::set_allocated_from_player_id(::std::string* from_player_id) {
  if (from_player_id != nullptr) {
    
  } else {
    
  }
  from_player_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_player_id);
  // @@protoc_insertion_point(field_set_allocated:shared.BattleInvitation.from_player_id)
}

// uint32 to_battlesrv_id = 2;
inline void BattleInvitation::clear_to_battlesrv_id() {
  to_battlesrv_id_ = 0u;
}
inline ::google::protobuf::uint32 BattleInvitation::to_battlesrv_id() const {
  // @@protoc_insertion_point(field_get:shared.BattleInvitation.to_battlesrv_id)
  return to_battlesrv_id_;
}
inline void BattleInvitation::set_to_battlesrv_id(::google::protobuf::uint32 value) {
  
  to_battlesrv_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleInvitation.to_battlesrv_id)
}

// int32 bound_room_id = 3;
inline void BattleInvitation::clear_bound_room_id() {
  bound_room_id_ = 0;
}
inline ::google::protobuf::int32 BattleInvitation::bound_room_id() const {
  // @@protoc_insertion_point(field_get:shared.BattleInvitation.bound_room_id)
  return bound_room_id_;
}
inline void BattleInvitation::set_bound_room_id(::google::protobuf::int32 value) {
  
  bound_room_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleInvitation.bound_room_id)
}

// int64 expires_at = 4;
inline void BattleInvitation::clear_expires_at() {
  expires_at_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 BattleInvitation::expires_at() const {
  // @@protoc_insertion_point(field_get:shared.BattleInvitation.expires_at)
  return expires_at_;
}
inline void BattleInvitation::set_expires_at(::google::protobuf::int64 value) {
  
  expires_at_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleInvitation.expires_at)
}

// string passcode = 5;
inline void BattleInvitation::clear_passcode() {
  passcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BattleInvitation::passcode() const {
  // @@protoc_insertion_point(field_get:shared.BattleInvitation.passcode)
  return passcode_.GetNoArena();
}
inline void BattleInvitation::set_passcode(const ::std::string& value) {
  
  passcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BattleInvitation.passcode)
}
#if LANG_CXX11
inline void BattleInvitation::set_passcode(::std::string&& value) {
  
  passcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BattleInvitation.passcode)
}
#endif
inline void BattleInvitation::set_passcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  passcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BattleInvitation.passcode)
}
inline void BattleInvitation::set_passcode(const char* value, size_t size) {
  
  passcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BattleInvitation.passcode)
}
inline ::std::string* BattleInvitation::mutable_passcode() {
  
  // @@protoc_insertion_point(field_mutable:shared.BattleInvitation.passcode)
  return passcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BattleInvitation::release_passcode() {
  // @@protoc_insertion_point(field_release:shared.BattleInvitation.passcode)
  
  return passcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BattleInvitation::set_allocated_passcode(::std::string* passcode) {
  if (passcode != nullptr) {
    
  } else {
    
  }
  passcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passcode);
  // @@protoc_insertion_point(field_set_allocated:shared.BattleInvitation.passcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CharacterConfig

// uint32 species_id = 1;
inline void CharacterConfig::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.species_id)
  return species_id_;
}
inline void CharacterConfig::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.species_id)
}

// string species_name = 2;
inline void CharacterConfig::clear_species_name() {
  species_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharacterConfig::species_name() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.species_name)
  return species_name_.GetNoArena();
}
inline void CharacterConfig::set_species_name(const ::std::string& value) {
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.species_name)
}
#if LANG_CXX11
inline void CharacterConfig::set_species_name(::std::string&& value) {
  
  species_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.CharacterConfig.species_name)
}
#endif
inline void CharacterConfig::set_species_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.CharacterConfig.species_name)
}
inline void CharacterConfig::set_species_name(const char* value, size_t size) {
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.CharacterConfig.species_name)
}
inline ::std::string* CharacterConfig::mutable_species_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.CharacterConfig.species_name)
  return species_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharacterConfig::release_species_name() {
  // @@protoc_insertion_point(field_release:shared.CharacterConfig.species_name)
  
  return species_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharacterConfig::set_allocated_species_name(::std::string* species_name) {
  if (species_name != nullptr) {
    
  } else {
    
  }
  species_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), species_name);
  // @@protoc_insertion_point(field_set_allocated:shared.CharacterConfig.species_name)
}

// int32 hp = 3;
inline void CharacterConfig::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::hp() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.hp)
  return hp_;
}
inline void CharacterConfig::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.hp)
}

// int32 mp = 4;
inline void CharacterConfig::clear_mp() {
  mp_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::mp() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.mp)
  return mp_;
}
inline void CharacterConfig::set_mp(::google::protobuf::int32 value) {
  
  mp_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.mp)
}

// int32 lay_down_frames = 5;
inline void CharacterConfig::clear_lay_down_frames() {
  lay_down_frames_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::lay_down_frames() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.lay_down_frames)
  return lay_down_frames_;
}
inline void CharacterConfig::set_lay_down_frames(::google::protobuf::int32 value) {
  
  lay_down_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.lay_down_frames)
}

// int32 lay_down_frames_to_recover = 6;
inline void CharacterConfig::clear_lay_down_frames_to_recover() {
  lay_down_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::lay_down_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.lay_down_frames_to_recover)
  return lay_down_frames_to_recover_;
}
inline void CharacterConfig::set_lay_down_frames_to_recover(::google::protobuf::int32 value) {
  
  lay_down_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.lay_down_frames_to_recover)
}

// int32 get_up_invinsible_frames = 7;
inline void CharacterConfig::clear_get_up_invinsible_frames() {
  get_up_invinsible_frames_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::get_up_invinsible_frames() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.get_up_invinsible_frames)
  return get_up_invinsible_frames_;
}
inline void CharacterConfig::set_get_up_invinsible_frames(::google::protobuf::int32 value) {
  
  get_up_invinsible_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.get_up_invinsible_frames)
}

// int32 get_up_frames_to_recover = 8;
inline void CharacterConfig::clear_get_up_frames_to_recover() {
  get_up_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::get_up_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.get_up_frames_to_recover)
  return get_up_frames_to_recover_;
}
inline void CharacterConfig::set_get_up_frames_to_recover(::google::protobuf::int32 value) {
  
  get_up_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.get_up_frames_to_recover)
}

// float speed = 9;
inline void CharacterConfig::clear_speed() {
  speed_ = 0;
}
inline float CharacterConfig::speed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.speed)
  return speed_;
}
inline void CharacterConfig::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.speed)
}

// int32 mp_regen_per_interval = 10;
inline void CharacterConfig::clear_mp_regen_per_interval() {
  mp_regen_per_interval_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::mp_regen_per_interval() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.mp_regen_per_interval)
  return mp_regen_per_interval_;
}
inline void CharacterConfig::set_mp_regen_per_interval(::google::protobuf::int32 value) {
  
  mp_regen_per_interval_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.mp_regen_per_interval)
}

// int32 mp_regen_interval = 11;
inline void CharacterConfig::clear_mp_regen_interval() {
  mp_regen_interval_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::mp_regen_interval() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.mp_regen_interval)
  return mp_regen_interval_;
}
inline void CharacterConfig::set_mp_regen_interval(::google::protobuf::int32 value) {
  
  mp_regen_interval_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.mp_regen_interval)
}

// float jumping_init_vel_y = 12;
inline void CharacterConfig::clear_jumping_init_vel_y() {
  jumping_init_vel_y_ = 0;
}
inline float CharacterConfig::jumping_init_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.jumping_init_vel_y)
  return jumping_init_vel_y_;
}
inline void CharacterConfig::set_jumping_init_vel_y(float value) {
  
  jumping_init_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.jumping_init_vel_y)
}

// int32 inertia_frames_to_recover = 13;
inline void CharacterConfig::clear_inertia_frames_to_recover() {
  inertia_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::inertia_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.inertia_frames_to_recover)
  return inertia_frames_to_recover_;
}
inline void CharacterConfig::set_inertia_frames_to_recover(::google::protobuf::int32 value) {
  
  inertia_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.inertia_frames_to_recover)
}

// bool dashing_enabled = 14;
inline void CharacterConfig::clear_dashing_enabled() {
  dashing_enabled_ = false;
}
inline bool CharacterConfig::dashing_enabled() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.dashing_enabled)
  return dashing_enabled_;
}
inline void CharacterConfig::set_dashing_enabled(bool value) {
  
  dashing_enabled_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.dashing_enabled)
}

// bool sliding_enabled = 15;
inline void CharacterConfig::clear_sliding_enabled() {
  sliding_enabled_ = false;
}
inline bool CharacterConfig::sliding_enabled() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.sliding_enabled)
  return sliding_enabled_;
}
inline void CharacterConfig::set_sliding_enabled(bool value) {
  
  sliding_enabled_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.sliding_enabled)
}

// bool on_wall_enabled = 16;
inline void CharacterConfig::clear_on_wall_enabled() {
  on_wall_enabled_ = false;
}
inline bool CharacterConfig::on_wall_enabled() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.on_wall_enabled)
  return on_wall_enabled_;
}
inline void CharacterConfig::set_on_wall_enabled(bool value) {
  
  on_wall_enabled_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.on_wall_enabled)
}

// bool crouching_enabled = 17;
inline void CharacterConfig::clear_crouching_enabled() {
  crouching_enabled_ = false;
}
inline bool CharacterConfig::crouching_enabled() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.crouching_enabled)
  return crouching_enabled_;
}
inline void CharacterConfig::set_crouching_enabled(bool value) {
  
  crouching_enabled_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.crouching_enabled)
}

// bool crouching_atk_enabled = 18;
inline void CharacterConfig::clear_crouching_atk_enabled() {
  crouching_atk_enabled_ = false;
}
inline bool CharacterConfig::crouching_atk_enabled() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.crouching_atk_enabled)
  return crouching_atk_enabled_;
}
inline void CharacterConfig::set_crouching_atk_enabled(bool value) {
  
  crouching_atk_enabled_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.crouching_atk_enabled)
}

// int32 wall_jumping_frames_to_recover = 19;
inline void CharacterConfig::clear_wall_jumping_frames_to_recover() {
  wall_jumping_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::wall_jumping_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.wall_jumping_frames_to_recover)
  return wall_jumping_frames_to_recover_;
}
inline void CharacterConfig::set_wall_jumping_frames_to_recover(::google::protobuf::int32 value) {
  
  wall_jumping_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.wall_jumping_frames_to_recover)
}

// float wall_jumping_init_vel_x = 20;
inline void CharacterConfig::clear_wall_jumping_init_vel_x() {
  wall_jumping_init_vel_x_ = 0;
}
inline float CharacterConfig::wall_jumping_init_vel_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.wall_jumping_init_vel_x)
  return wall_jumping_init_vel_x_;
}
inline void CharacterConfig::set_wall_jumping_init_vel_x(float value) {
  
  wall_jumping_init_vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.wall_jumping_init_vel_x)
}

// float wall_jumping_init_vel_y = 21;
inline void CharacterConfig::clear_wall_jumping_init_vel_y() {
  wall_jumping_init_vel_y_ = 0;
}
inline float CharacterConfig::wall_jumping_init_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.wall_jumping_init_vel_y)
  return wall_jumping_init_vel_y_;
}
inline void CharacterConfig::set_wall_jumping_init_vel_y(float value) {
  
  wall_jumping_init_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.wall_jumping_init_vel_y)
}

// float wall_sliding_vel_y = 22;
inline void CharacterConfig::clear_wall_sliding_vel_y() {
  wall_sliding_vel_y_ = 0;
}
inline float CharacterConfig::wall_sliding_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.wall_sliding_vel_y)
  return wall_sliding_vel_y_;
}
inline void CharacterConfig::set_wall_sliding_vel_y(float value) {
  
  wall_sliding_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.wall_sliding_vel_y)
}

// float min_falling_vel_y = 23;
inline void CharacterConfig::clear_min_falling_vel_y() {
  min_falling_vel_y_ = 0;
}
inline float CharacterConfig::min_falling_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.min_falling_vel_y)
  return min_falling_vel_y_;
}
inline void CharacterConfig::set_min_falling_vel_y(float value) {
  
  min_falling_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.min_falling_vel_y)
}

// float max_ascending_vel_y = 24;
inline void CharacterConfig::clear_max_ascending_vel_y() {
  max_ascending_vel_y_ = 0;
}
inline float CharacterConfig::max_ascending_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.max_ascending_vel_y)
  return max_ascending_vel_y_;
}
inline void CharacterConfig::set_max_ascending_vel_y(float value) {
  
  max_ascending_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.max_ascending_vel_y)
}

// bool use_inventory_btn_b = 25;
inline void CharacterConfig::clear_use_inventory_btn_b() {
  use_inventory_btn_b_ = false;
}
inline bool CharacterConfig::use_inventory_btn_b() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.use_inventory_btn_b)
  return use_inventory_btn_b_;
}
inline void CharacterConfig::set_use_inventory_btn_b(bool value) {
  
  use_inventory_btn_b_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.use_inventory_btn_b)
}

// bool ground_dodge_enabled_by_iv_slot_c_in_block_stun = 26;
inline void CharacterConfig::clear_ground_dodge_enabled_by_iv_slot_c_in_block_stun() {
  ground_dodge_enabled_by_iv_slot_c_in_block_stun_ = false;
}
inline bool CharacterConfig::ground_dodge_enabled_by_iv_slot_c_in_block_stun() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ground_dodge_enabled_by_iv_slot_c_in_block_stun)
  return ground_dodge_enabled_by_iv_slot_c_in_block_stun_;
}
inline void CharacterConfig::set_ground_dodge_enabled_by_iv_slot_c_in_block_stun(bool value) {
  
  ground_dodge_enabled_by_iv_slot_c_in_block_stun_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ground_dodge_enabled_by_iv_slot_c_in_block_stun)
}

// int32 ground_dodge_enabled_by_rdf_cnt_from_beginning = 27;
inline void CharacterConfig::clear_ground_dodge_enabled_by_rdf_cnt_from_beginning() {
  ground_dodge_enabled_by_rdf_cnt_from_beginning_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::ground_dodge_enabled_by_rdf_cnt_from_beginning() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ground_dodge_enabled_by_rdf_cnt_from_beginning)
  return ground_dodge_enabled_by_rdf_cnt_from_beginning_;
}
inline void CharacterConfig::set_ground_dodge_enabled_by_rdf_cnt_from_beginning(::google::protobuf::int32 value) {
  
  ground_dodge_enabled_by_rdf_cnt_from_beginning_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ground_dodge_enabled_by_rdf_cnt_from_beginning)
}

// int32 ground_dodged_frames_to_recover = 28;
inline void CharacterConfig::clear_ground_dodged_frames_to_recover() {
  ground_dodged_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::ground_dodged_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ground_dodged_frames_to_recover)
  return ground_dodged_frames_to_recover_;
}
inline void CharacterConfig::set_ground_dodged_frames_to_recover(::google::protobuf::int32 value) {
  
  ground_dodged_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ground_dodged_frames_to_recover)
}

// int32 ground_dodged_frames_invinsible = 29;
inline void CharacterConfig::clear_ground_dodged_frames_invinsible() {
  ground_dodged_frames_invinsible_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::ground_dodged_frames_invinsible() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ground_dodged_frames_invinsible)
  return ground_dodged_frames_invinsible_;
}
inline void CharacterConfig::set_ground_dodged_frames_invinsible(::google::protobuf::int32 value) {
  
  ground_dodged_frames_invinsible_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ground_dodged_frames_invinsible)
}

// float ground_dodged_speed = 30;
inline void CharacterConfig::clear_ground_dodged_speed() {
  ground_dodged_speed_ = 0;
}
inline float CharacterConfig::ground_dodged_speed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ground_dodged_speed)
  return ground_dodged_speed_;
}
inline void CharacterConfig::set_ground_dodged_speed(float value) {
  
  ground_dodged_speed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ground_dodged_speed)
}

// float vision_offset_x = 31;
inline void CharacterConfig::clear_vision_offset_x() {
  vision_offset_x_ = 0;
}
inline float CharacterConfig::vision_offset_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.vision_offset_x)
  return vision_offset_x_;
}
inline void CharacterConfig::set_vision_offset_x(float value) {
  
  vision_offset_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.vision_offset_x)
}

// float vision_offset_y = 32;
inline void CharacterConfig::clear_vision_offset_y() {
  vision_offset_y_ = 0;
}
inline float CharacterConfig::vision_offset_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.vision_offset_y)
  return vision_offset_y_;
}
inline void CharacterConfig::set_vision_offset_y(float value) {
  
  vision_offset_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.vision_offset_y)
}

// float vision_size_x = 33;
inline void CharacterConfig::clear_vision_size_x() {
  vision_size_x_ = 0;
}
inline float CharacterConfig::vision_size_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.vision_size_x)
  return vision_size_x_;
}
inline void CharacterConfig::set_vision_size_x(float value) {
  
  vision_size_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.vision_size_x)
}

// float vision_size_y = 34;
inline void CharacterConfig::clear_vision_size_y() {
  vision_size_y_ = 0;
}
inline float CharacterConfig::vision_size_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.vision_size_y)
  return vision_size_y_;
}
inline void CharacterConfig::set_vision_size_y(float value) {
  
  vision_size_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.vision_size_y)
}

// float capsule_radius = 35;
inline void CharacterConfig::clear_capsule_radius() {
  capsule_radius_ = 0;
}
inline float CharacterConfig::capsule_radius() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.capsule_radius)
  return capsule_radius_;
}
inline void CharacterConfig::set_capsule_radius(float value) {
  
  capsule_radius_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.capsule_radius)
}

// float capsule_half_height = 36;
inline void CharacterConfig::clear_capsule_half_height() {
  capsule_half_height_ = 0;
}
inline float CharacterConfig::capsule_half_height() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.capsule_half_height)
  return capsule_half_height_;
}
inline void CharacterConfig::set_capsule_half_height(float value) {
  
  capsule_half_height_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.capsule_half_height)
}

// float shrinked_scale_radius = 37;
inline void CharacterConfig::clear_shrinked_scale_radius() {
  shrinked_scale_radius_ = 0;
}
inline float CharacterConfig::shrinked_scale_radius() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.shrinked_scale_radius)
  return shrinked_scale_radius_;
}
inline void CharacterConfig::set_shrinked_scale_radius(float value) {
  
  shrinked_scale_radius_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.shrinked_scale_radius)
}

// float shrinked_scale_height = 38;
inline void CharacterConfig::clear_shrinked_scale_height() {
  shrinked_scale_height_ = 0;
}
inline float CharacterConfig::shrinked_scale_height() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.shrinked_scale_height)
  return shrinked_scale_height_;
}
inline void CharacterConfig::set_shrinked_scale_height(float value) {
  
  shrinked_scale_height_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.shrinked_scale_height)
}

// float lay_down_scale_radius = 39;
inline void CharacterConfig::clear_lay_down_scale_radius() {
  lay_down_scale_radius_ = 0;
}
inline float CharacterConfig::lay_down_scale_radius() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.lay_down_scale_radius)
  return lay_down_scale_radius_;
}
inline void CharacterConfig::set_lay_down_scale_radius(float value) {
  
  lay_down_scale_radius_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.lay_down_scale_radius)
}

// float lay_down_scale_height = 40;
inline void CharacterConfig::clear_lay_down_scale_height() {
  lay_down_scale_height_ = 0;
}
inline float CharacterConfig::lay_down_scale_height() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.lay_down_scale_height)
  return lay_down_scale_height_;
}
inline void CharacterConfig::set_lay_down_scale_height(float value) {
  
  lay_down_scale_height_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.lay_down_scale_height)
}

// float dying_scale_radius = 41;
inline void CharacterConfig::clear_dying_scale_radius() {
  dying_scale_radius_ = 0;
}
inline float CharacterConfig::dying_scale_radius() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.dying_scale_radius)
  return dying_scale_radius_;
}
inline void CharacterConfig::set_dying_scale_radius(float value) {
  
  dying_scale_radius_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.dying_scale_radius)
}

// float dying_scale_height = 42;
inline void CharacterConfig::clear_dying_scale_height() {
  dying_scale_height_ = 0;
}
inline float CharacterConfig::dying_scale_height() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.dying_scale_height)
  return dying_scale_height_;
}
inline void CharacterConfig::set_dying_scale_height(float value) {
  
  dying_scale_height_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.dying_scale_height)
}

// float dimmed_scale_radius = 43;
inline void CharacterConfig::clear_dimmed_scale_radius() {
  dimmed_scale_radius_ = 0;
}
inline float CharacterConfig::dimmed_scale_radius() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.dimmed_scale_radius)
  return dimmed_scale_radius_;
}
inline void CharacterConfig::set_dimmed_scale_radius(float value) {
  
  dimmed_scale_radius_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.dimmed_scale_radius)
}

// float dimmed_scale_height = 44;
inline void CharacterConfig::clear_dimmed_scale_height() {
  dimmed_scale_height_ = 0;
}
inline float CharacterConfig::dimmed_scale_height() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.dimmed_scale_height)
  return dimmed_scale_height_;
}
inline void CharacterConfig::set_dimmed_scale_height(float value) {
  
  dimmed_scale_height_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.dimmed_scale_height)
}

// bool anti_gravity_when_idle = 45;
inline void CharacterConfig::clear_anti_gravity_when_idle() {
  anti_gravity_when_idle_ = false;
}
inline bool CharacterConfig::anti_gravity_when_idle() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.anti_gravity_when_idle)
  return anti_gravity_when_idle_;
}
inline void CharacterConfig::set_anti_gravity_when_idle(bool value) {
  
  anti_gravity_when_idle_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.anti_gravity_when_idle)
}

// int32 anti_gravity_frames_lingering = 46;
inline void CharacterConfig::clear_anti_gravity_frames_lingering() {
  anti_gravity_frames_lingering_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::anti_gravity_frames_lingering() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.anti_gravity_frames_lingering)
  return anti_gravity_frames_lingering_;
}
inline void CharacterConfig::set_anti_gravity_frames_lingering(::google::protobuf::int32 value) {
  
  anti_gravity_frames_lingering_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.anti_gravity_frames_lingering)
}

// bool omit_gravity = 47;
inline void CharacterConfig::clear_omit_gravity() {
  omit_gravity_ = false;
}
inline bool CharacterConfig::omit_gravity() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.omit_gravity)
  return omit_gravity_;
}
inline void CharacterConfig::set_omit_gravity(bool value) {
  
  omit_gravity_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.omit_gravity)
}

// bool omit_soft_pushback = 48;
inline void CharacterConfig::clear_omit_soft_pushback() {
  omit_soft_pushback_ = false;
}
inline bool CharacterConfig::omit_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.omit_soft_pushback)
  return omit_soft_pushback_;
}
inline void CharacterConfig::set_omit_soft_pushback(bool value) {
  
  omit_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.omit_soft_pushback)
}

// bool repel_soft_pushback = 49;
inline void CharacterConfig::clear_repel_soft_pushback() {
  repel_soft_pushback_ = false;
}
inline bool CharacterConfig::repel_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.repel_soft_pushback)
  return repel_soft_pushback_;
}
inline void CharacterConfig::set_repel_soft_pushback(bool value) {
  
  repel_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.repel_soft_pushback)
}

// uint64 collision_type_mask = 50;
inline void CharacterConfig::clear_collision_type_mask() {
  collision_type_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CharacterConfig::collision_type_mask() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.collision_type_mask)
  return collision_type_mask_;
}
inline void CharacterConfig::set_collision_type_mask(::google::protobuf::uint64 value) {
  
  collision_type_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.collision_type_mask)
}

// bool has_turn_around_anim = 51;
inline void CharacterConfig::clear_has_turn_around_anim() {
  has_turn_around_anim_ = false;
}
inline bool CharacterConfig::has_turn_around_anim() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_turn_around_anim)
  return has_turn_around_anim_;
}
inline void CharacterConfig::set_has_turn_around_anim(bool value) {
  
  has_turn_around_anim_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_turn_around_anim)
}

// bool has_dimmed_anim = 52;
inline void CharacterConfig::clear_has_dimmed_anim() {
  has_dimmed_anim_ = false;
}
inline bool CharacterConfig::has_dimmed_anim() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_dimmed_anim)
  return has_dimmed_anim_;
}
inline void CharacterConfig::set_has_dimmed_anim(bool value) {
  
  has_dimmed_anim_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_dimmed_anim)
}

// bool has_awaking_anim = 53;
inline void CharacterConfig::clear_has_awaking_anim() {
  has_awaking_anim_ = false;
}
inline bool CharacterConfig::has_awaking_anim() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_awaking_anim)
  return has_awaking_anim_;
}
inline void CharacterConfig::set_has_awaking_anim(bool value) {
  
  has_awaking_anim_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_awaking_anim)
}

// bool has_walk_stopping_anim = 54;
inline void CharacterConfig::clear_has_walk_stopping_anim() {
  has_walk_stopping_anim_ = false;
}
inline bool CharacterConfig::has_walk_stopping_anim() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_walk_stopping_anim)
  return has_walk_stopping_anim_;
}
inline void CharacterConfig::set_has_walk_stopping_anim(bool value) {
  
  has_walk_stopping_anim_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_walk_stopping_anim)
}

// bool has_in_air_walk_stopping_anim = 55;
inline void CharacterConfig::clear_has_in_air_walk_stopping_anim() {
  has_in_air_walk_stopping_anim_ = false;
}
inline bool CharacterConfig::has_in_air_walk_stopping_anim() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_in_air_walk_stopping_anim)
  return has_in_air_walk_stopping_anim_;
}
inline void CharacterConfig::set_has_in_air_walk_stopping_anim(bool value) {
  
  has_in_air_walk_stopping_anim_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_in_air_walk_stopping_anim)
}

// bool lay_down_to_recover_from_dimmed = 56;
inline void CharacterConfig::clear_lay_down_to_recover_from_dimmed() {
  lay_down_to_recover_from_dimmed_ = false;
}
inline bool CharacterConfig::lay_down_to_recover_from_dimmed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.lay_down_to_recover_from_dimmed)
  return lay_down_to_recover_from_dimmed_;
}
inline void CharacterConfig::set_lay_down_to_recover_from_dimmed(bool value) {
  
  lay_down_to_recover_from_dimmed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.lay_down_to_recover_from_dimmed)
}

// int32 hardness = 57;
inline void CharacterConfig::clear_hardness() {
  hardness_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::hardness() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.hardness)
  return hardness_;
}
inline void CharacterConfig::set_hardness(::google::protobuf::int32 value) {
  
  hardness_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.hardness)
}

// int32 proactive_jump_startup_frames = 58;
inline void CharacterConfig::clear_proactive_jump_startup_frames() {
  proactive_jump_startup_frames_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::proactive_jump_startup_frames() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.proactive_jump_startup_frames)
  return proactive_jump_startup_frames_;
}
inline void CharacterConfig::set_proactive_jump_startup_frames(::google::protobuf::int32 value) {
  
  proactive_jump_startup_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.proactive_jump_startup_frames)
}

// uint32 default_air_jump_quota = 59;
inline void CharacterConfig::clear_default_air_jump_quota() {
  default_air_jump_quota_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::default_air_jump_quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.default_air_jump_quota)
  return default_air_jump_quota_;
}
inline void CharacterConfig::set_default_air_jump_quota(::google::protobuf::uint32 value) {
  
  default_air_jump_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.default_air_jump_quota)
}

// uint32 default_air_dash_quota = 60;
inline void CharacterConfig::clear_default_air_dash_quota() {
  default_air_dash_quota_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::default_air_dash_quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.default_air_dash_quota)
  return default_air_dash_quota_;
}
inline void CharacterConfig::set_default_air_dash_quota(::google::protobuf::uint32 value) {
  
  default_air_dash_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.default_air_dash_quota)
}

// uint32 default_def1Quota = 61;
inline void CharacterConfig::clear_default_def1quota() {
  default_def1quota_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::default_def1quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.default_def1Quota)
  return default_def1quota_;
}
inline void CharacterConfig::set_default_def1quota(::google::protobuf::uint32 value) {
  
  default_def1quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.default_def1Quota)
}

// bool isolated_air_jump_and_dash_quota = 62;
inline void CharacterConfig::clear_isolated_air_jump_and_dash_quota() {
  isolated_air_jump_and_dash_quota_ = false;
}
inline bool CharacterConfig::isolated_air_jump_and_dash_quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.isolated_air_jump_and_dash_quota)
  return isolated_air_jump_and_dash_quota_;
}
inline void CharacterConfig::set_isolated_air_jump_and_dash_quota(bool value) {
  
  isolated_air_jump_and_dash_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.isolated_air_jump_and_dash_quota)
}

// int32 air_jump_vfx_species_id = 63;
inline void CharacterConfig::clear_air_jump_vfx_species_id() {
  air_jump_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::air_jump_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.air_jump_vfx_species_id)
  return air_jump_vfx_species_id_;
}
inline void CharacterConfig::set_air_jump_vfx_species_id(::google::protobuf::int32 value) {
  
  air_jump_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.air_jump_vfx_species_id)
}

// float slip_jump_thres_hold_below_top_face = 64;
inline void CharacterConfig::clear_slip_jump_thres_hold_below_top_face() {
  slip_jump_thres_hold_below_top_face_ = 0;
}
inline float CharacterConfig::slip_jump_thres_hold_below_top_face() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.slip_jump_thres_hold_below_top_face)
  return slip_jump_thres_hold_below_top_face_;
}
inline void CharacterConfig::set_slip_jump_thres_hold_below_top_face(float value) {
  
  slip_jump_thres_hold_below_top_face_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.slip_jump_thres_hold_below_top_face)
}

// float slip_jump_character_drop_y = 65;
inline void CharacterConfig::clear_slip_jump_character_drop_y() {
  slip_jump_character_drop_y_ = 0;
}
inline float CharacterConfig::slip_jump_character_drop_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.slip_jump_character_drop_y)
  return slip_jump_character_drop_y_;
}
inline void CharacterConfig::set_slip_jump_character_drop_y(float value) {
  
  slip_jump_character_drop_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.slip_jump_character_drop_y)
}

// uint32 transform_into_species_id_upon_death = 66;
inline void CharacterConfig::clear_transform_into_species_id_upon_death() {
  transform_into_species_id_upon_death_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::transform_into_species_id_upon_death() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.transform_into_species_id_upon_death)
  return transform_into_species_id_upon_death_;
}
inline void CharacterConfig::set_transform_into_species_id_upon_death(::google::protobuf::uint32 value) {
  
  transform_into_species_id_upon_death_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.transform_into_species_id_upon_death)
}

// bool jump_holding_to_fly = 67;
inline void CharacterConfig::clear_jump_holding_to_fly() {
  jump_holding_to_fly_ = false;
}
inline bool CharacterConfig::jump_holding_to_fly() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.jump_holding_to_fly)
  return jump_holding_to_fly_;
}
inline void CharacterConfig::set_jump_holding_to_fly(bool value) {
  
  jump_holding_to_fly_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.jump_holding_to_fly)
}

// bool has_def1 = 68;
inline void CharacterConfig::clear_has_def1() {
  has_def1_ = false;
}
inline bool CharacterConfig::has_def1() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_def1)
  return has_def1_;
}
inline void CharacterConfig::set_has_def1(bool value) {
  
  has_def1_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_def1)
}

// bool has_def1Atked1Anim = 69;
inline void CharacterConfig::clear_has_def1atked1anim() {
  has_def1atked1anim_ = false;
}
inline bool CharacterConfig::has_def1atked1anim() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_def1Atked1Anim)
  return has_def1atked1anim_;
}
inline void CharacterConfig::set_has_def1atked1anim(bool value) {
  
  has_def1atked1anim_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_def1Atked1Anim)
}

// int32 default_def1Broken_frames_to_recover = 70;
inline void CharacterConfig::clear_default_def1broken_frames_to_recover() {
  default_def1broken_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::default_def1broken_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.default_def1Broken_frames_to_recover)
  return default_def1broken_frames_to_recover_;
}
inline void CharacterConfig::set_default_def1broken_frames_to_recover(::google::protobuf::int32 value) {
  
  default_def1broken_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.default_def1Broken_frames_to_recover)
}

// int32 def1_active_vfx_species_id = 71;
inline void CharacterConfig::clear_def1_active_vfx_species_id() {
  def1_active_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::def1_active_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_active_vfx_species_id)
  return def1_active_vfx_species_id_;
}
inline void CharacterConfig::set_def1_active_vfx_species_id(::google::protobuf::int32 value) {
  
  def1_active_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_active_vfx_species_id)
}

// int32 def1_atked_vfx_species_id = 72;
inline void CharacterConfig::clear_def1_atked_vfx_species_id() {
  def1_atked_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::def1_atked_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_atked_vfx_species_id)
  return def1_atked_vfx_species_id_;
}
inline void CharacterConfig::set_def1_atked_vfx_species_id(::google::protobuf::int32 value) {
  
  def1_atked_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_atked_vfx_species_id)
}

// int32 def1_broken_vfx_species_id = 73;
inline void CharacterConfig::clear_def1_broken_vfx_species_id() {
  def1_broken_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::def1_broken_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_broken_vfx_species_id)
  return def1_broken_vfx_species_id_;
}
inline void CharacterConfig::set_def1_broken_vfx_species_id(::google::protobuf::int32 value) {
  
  def1_broken_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_broken_vfx_species_id)
}

// int32 def1_startup_frames = 74;
inline void CharacterConfig::clear_def1_startup_frames() {
  def1_startup_frames_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::def1_startup_frames() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_startup_frames)
  return def1_startup_frames_;
}
inline void CharacterConfig::set_def1_startup_frames(::google::protobuf::int32 value) {
  
  def1_startup_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_startup_frames)
}

// float def1_damage_yield = 75;
inline void CharacterConfig::clear_def1_damage_yield() {
  def1_damage_yield_ = 0;
}
inline float CharacterConfig::def1_damage_yield() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_damage_yield)
  return def1_damage_yield_;
}
inline void CharacterConfig::set_def1_damage_yield(float value) {
  
  def1_damage_yield_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_damage_yield)
}

// bool def1_defies_ele_weakness_penetration = 76;
inline void CharacterConfig::clear_def1_defies_ele_weakness_penetration() {
  def1_defies_ele_weakness_penetration_ = false;
}
inline bool CharacterConfig::def1_defies_ele_weakness_penetration() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_defies_ele_weakness_penetration)
  return def1_defies_ele_weakness_penetration_;
}
inline void CharacterConfig::set_def1_defies_ele_weakness_penetration(bool value) {
  
  def1_defies_ele_weakness_penetration_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_defies_ele_weakness_penetration)
}

// bool def1_defies_debuff = 77;
inline void CharacterConfig::clear_def1_defies_debuff() {
  def1_defies_debuff_ = false;
}
inline bool CharacterConfig::def1_defies_debuff() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.def1_defies_debuff)
  return def1_defies_debuff_;
}
inline void CharacterConfig::set_def1_defies_debuff(bool value) {
  
  def1_defies_debuff_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.def1_defies_debuff)
}

// int32 flying_quota_rdf_cnt = 78;
inline void CharacterConfig::clear_flying_quota_rdf_cnt() {
  flying_quota_rdf_cnt_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::flying_quota_rdf_cnt() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.flying_quota_rdf_cnt)
  return flying_quota_rdf_cnt_;
}
inline void CharacterConfig::set_flying_quota_rdf_cnt(::google::protobuf::int32 value) {
  
  flying_quota_rdf_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.flying_quota_rdf_cnt)
}

// bool walking_auto_def1 = 79;
inline void CharacterConfig::clear_walking_auto_def1() {
  walking_auto_def1_ = false;
}
inline bool CharacterConfig::walking_auto_def1() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.walking_auto_def1)
  return walking_auto_def1_;
}
inline void CharacterConfig::set_walking_auto_def1(bool value) {
  
  walking_auto_def1_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.walking_auto_def1)
}

// .shared.IfaceCat Ifc = 80;
inline void CharacterConfig::clear_ifc() {
  ifc_ = 0;
}
inline ::shared::IfaceCat CharacterConfig::ifc() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.Ifc)
  return static_cast< ::shared::IfaceCat >(ifc_);
}
inline void CharacterConfig::set_ifc(::shared::IfaceCat value) {
  
  ifc_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.Ifc)
}

// uint32 ele_weakness = 81;
inline void CharacterConfig::clear_ele_weakness() {
  ele_weakness_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::ele_weakness() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ele_weakness)
  return ele_weakness_;
}
inline void CharacterConfig::set_ele_weakness(::google::protobuf::uint32 value) {
  
  ele_weakness_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ele_weakness)
}

// uint32 ele_resistance = 82;
inline void CharacterConfig::clear_ele_resistance() {
  ele_resistance_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::ele_resistance() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.ele_resistance)
  return ele_resistance_;
}
inline void CharacterConfig::set_ele_resistance(::google::protobuf::uint32 value) {
  
  ele_resistance_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.ele_resistance)
}

// bool has_btn_b_charging = 83;
inline void CharacterConfig::clear_has_btn_b_charging() {
  has_btn_b_charging_ = false;
}
inline bool CharacterConfig::has_btn_b_charging() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.has_btn_b_charging)
  return has_btn_b_charging_;
}
inline void CharacterConfig::set_has_btn_b_charging(bool value) {
  
  has_btn_b_charging_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.has_btn_b_charging)
}

// int32 btn_b_charged_vfx_species_id = 84;
inline void CharacterConfig::clear_btn_b_charged_vfx_species_id() {
  btn_b_charged_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::btn_b_charged_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.btn_b_charged_vfx_species_id)
  return btn_b_charged_vfx_species_id_;
}
inline void CharacterConfig::set_btn_b_charged_vfx_species_id(::google::protobuf::int32 value) {
  
  btn_b_charged_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.btn_b_charged_vfx_species_id)
}

// bool is_key_ch = 85;
inline void CharacterConfig::clear_is_key_ch() {
  is_key_ch_ = false;
}
inline bool CharacterConfig::is_key_ch() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.is_key_ch)
  return is_key_ch_;
}
inline void CharacterConfig::set_is_key_ch(bool value) {
  
  is_key_ch_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.is_key_ch)
}

// bool allows_same_team_soft_pushback = 86;
inline void CharacterConfig::clear_allows_same_team_soft_pushback() {
  allows_same_team_soft_pushback_ = false;
}
inline bool CharacterConfig::allows_same_team_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.allows_same_team_soft_pushback)
  return allows_same_team_soft_pushback_;
}
inline void CharacterConfig::set_allows_same_team_soft_pushback(bool value) {
  
  allows_same_team_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.allows_same_team_soft_pushback)
}

// int32 gauge_inc_when_killed = 87;
inline void CharacterConfig::clear_gauge_inc_when_killed() {
  gauge_inc_when_killed_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::gauge_inc_when_killed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.gauge_inc_when_killed)
  return gauge_inc_when_killed_;
}
inline void CharacterConfig::set_gauge_inc_when_killed(::google::protobuf::int32 value) {
  
  gauge_inc_when_killed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.gauge_inc_when_killed)
}

// bool jumping_instead_of_walking = 88;
inline void CharacterConfig::clear_jumping_instead_of_walking() {
  jumping_instead_of_walking_ = false;
}
inline bool CharacterConfig::jumping_instead_of_walking() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.jumping_instead_of_walking)
  return jumping_instead_of_walking_;
}
inline void CharacterConfig::set_jumping_instead_of_walking(bool value) {
  
  jumping_instead_of_walking_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.jumping_instead_of_walking)
}

// uint32 vision_search_interval_pow2Minus1U = 89;
inline void CharacterConfig::clear_vision_search_interval_pow2minus1u() {
  vision_search_interval_pow2minus1u_ = 0u;
}
inline ::google::protobuf::uint32 CharacterConfig::vision_search_interval_pow2minus1u() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.vision_search_interval_pow2Minus1U)
  return vision_search_interval_pow2minus1u_;
}
inline void CharacterConfig::set_vision_search_interval_pow2minus1u(::google::protobuf::uint32 value) {
  
  vision_search_interval_pow2minus1u_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.vision_search_interval_pow2Minus1U)
}

// int32 vision_search_interval_pow2Minus1 = 90;
inline void CharacterConfig::clear_vision_search_interval_pow2minus1() {
  vision_search_interval_pow2minus1_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::vision_search_interval_pow2minus1() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.vision_search_interval_pow2Minus1)
  return vision_search_interval_pow2minus1_;
}
inline void CharacterConfig::set_vision_search_interval_pow2minus1(::google::protobuf::int32 value) {
  
  vision_search_interval_pow2minus1_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.vision_search_interval_pow2Minus1)
}

// bool npc_no_default_air_walking = 91;
inline void CharacterConfig::clear_npc_no_default_air_walking() {
  npc_no_default_air_walking_ = false;
}
inline bool CharacterConfig::npc_no_default_air_walking() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.npc_no_default_air_walking)
  return npc_no_default_air_walking_;
}
inline void CharacterConfig::set_npc_no_default_air_walking(bool value) {
  
  npc_no_default_air_walking_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.npc_no_default_air_walking)
}

// bool npc_prioritize_bullet_handling = 92;
inline void CharacterConfig::clear_npc_prioritize_bullet_handling() {
  npc_prioritize_bullet_handling_ = false;
}
inline bool CharacterConfig::npc_prioritize_bullet_handling() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.npc_prioritize_bullet_handling)
  return npc_prioritize_bullet_handling_;
}
inline void CharacterConfig::set_npc_prioritize_bullet_handling(bool value) {
  
  npc_prioritize_bullet_handling_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.npc_prioritize_bullet_handling)
}

// bool npc_prioritize_ally_healing = 93;
inline void CharacterConfig::clear_npc_prioritize_ally_healing() {
  npc_prioritize_ally_healing_ = false;
}
inline bool CharacterConfig::npc_prioritize_ally_healing() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.npc_prioritize_ally_healing)
  return npc_prioritize_ally_healing_;
}
inline void CharacterConfig::set_npc_prioritize_ally_healing(bool value) {
  
  npc_prioritize_ally_healing_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.npc_prioritize_ally_healing)
}

// bool npc_not_hunting_in_air_oppo_ch = 94;
inline void CharacterConfig::clear_npc_not_hunting_in_air_oppo_ch() {
  npc_not_hunting_in_air_oppo_ch_ = false;
}
inline bool CharacterConfig::npc_not_hunting_in_air_oppo_ch() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.npc_not_hunting_in_air_oppo_ch)
  return npc_not_hunting_in_air_oppo_ch_;
}
inline void CharacterConfig::set_npc_not_hunting_in_air_oppo_ch(bool value) {
  
  npc_not_hunting_in_air_oppo_ch_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.npc_not_hunting_in_air_oppo_ch)
}

// int32 transform_into_frames_to_recover = 95;
inline void CharacterConfig::clear_transform_into_frames_to_recover() {
  transform_into_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::transform_into_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.transform_into_frames_to_recover)
  return transform_into_frames_to_recover_;
}
inline void CharacterConfig::set_transform_into_frames_to_recover(::google::protobuf::int32 value) {
  
  transform_into_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.transform_into_frames_to_recover)
}

// int32 transform_into_frames_invinsible = 96;
inline void CharacterConfig::clear_transform_into_frames_invinsible() {
  transform_into_frames_invinsible_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::transform_into_frames_invinsible() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.transform_into_frames_invinsible)
  return transform_into_frames_invinsible_;
}
inline void CharacterConfig::set_transform_into_frames_invinsible(::google::protobuf::int32 value) {
  
  transform_into_frames_invinsible_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.transform_into_frames_invinsible)
}

// int32 awaking_frames_to_recover = 97;
inline void CharacterConfig::clear_awaking_frames_to_recover() {
  awaking_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::awaking_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.awaking_frames_to_recover)
  return awaking_frames_to_recover_;
}
inline void CharacterConfig::set_awaking_frames_to_recover(::google::protobuf::int32 value) {
  
  awaking_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.awaking_frames_to_recover)
}

// int32 awaking_frames_invinsible = 98;
inline void CharacterConfig::clear_awaking_frames_invinsible() {
  awaking_frames_invinsible_ = 0;
}
inline ::google::protobuf::int32 CharacterConfig::awaking_frames_invinsible() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.awaking_frames_invinsible)
  return awaking_frames_invinsible_;
}
inline void CharacterConfig::set_awaking_frames_invinsible(::google::protobuf::int32 value) {
  
  awaking_frames_invinsible_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.awaking_frames_invinsible)
}

// bool use_idle1_as_flying_idle = 99;
inline void CharacterConfig::clear_use_idle1_as_flying_idle() {
  use_idle1_as_flying_idle_ = false;
}
inline bool CharacterConfig::use_idle1_as_flying_idle() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.use_idle1_as_flying_idle)
  return use_idle1_as_flying_idle_;
}
inline void CharacterConfig::set_use_idle1_as_flying_idle(bool value) {
  
  use_idle1_as_flying_idle_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.use_idle1_as_flying_idle)
}

// bool no_flee = 100;
inline void CharacterConfig::clear_no_flee() {
  no_flee_ = false;
}
inline bool CharacterConfig::no_flee() const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.no_flee)
  return no_flee_;
}
inline void CharacterConfig::set_no_flee(bool value) {
  
  no_flee_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.no_flee)
}

// repeated .shared.InventorySlot init_inventory_slots = 101;
inline int CharacterConfig::init_inventory_slots_size() const {
  return init_inventory_slots_.size();
}
inline void CharacterConfig::clear_init_inventory_slots() {
  init_inventory_slots_.Clear();
}
inline ::shared::InventorySlot* CharacterConfig::mutable_init_inventory_slots(int index) {
  // @@protoc_insertion_point(field_mutable:shared.CharacterConfig.init_inventory_slots)
  return init_inventory_slots_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >*
CharacterConfig::mutable_init_inventory_slots() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterConfig.init_inventory_slots)
  return &init_inventory_slots_;
}
inline const ::shared::InventorySlot& CharacterConfig::init_inventory_slots(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.init_inventory_slots)
  return init_inventory_slots_.Get(index);
}
inline ::shared::InventorySlot* CharacterConfig::add_init_inventory_slots() {
  // @@protoc_insertion_point(field_add:shared.CharacterConfig.init_inventory_slots)
  return init_inventory_slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >&
CharacterConfig::init_inventory_slots() const {
  // @@protoc_insertion_point(field_list:shared.CharacterConfig.init_inventory_slots)
  return init_inventory_slots_;
}

// repeated .shared.CharacterState btn_b_auto_unhold_ch_states = 102;
inline int CharacterConfig::btn_b_auto_unhold_ch_states_size() const {
  return btn_b_auto_unhold_ch_states_.size();
}
inline void CharacterConfig::clear_btn_b_auto_unhold_ch_states() {
  btn_b_auto_unhold_ch_states_.Clear();
}
inline ::shared::CharacterState CharacterConfig::btn_b_auto_unhold_ch_states(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterConfig.btn_b_auto_unhold_ch_states)
  return static_cast< ::shared::CharacterState >(btn_b_auto_unhold_ch_states_.Get(index));
}
inline void CharacterConfig::set_btn_b_auto_unhold_ch_states(int index, ::shared::CharacterState value) {
  btn_b_auto_unhold_ch_states_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.CharacterConfig.btn_b_auto_unhold_ch_states)
}
inline void CharacterConfig::add_btn_b_auto_unhold_ch_states(::shared::CharacterState value) {
  btn_b_auto_unhold_ch_states_.Add(value);
  // @@protoc_insertion_point(field_add:shared.CharacterConfig.btn_b_auto_unhold_ch_states)
}
inline const ::google::protobuf::RepeatedField<int>&
CharacterConfig::btn_b_auto_unhold_ch_states() const {
  // @@protoc_insertion_point(field_list:shared.CharacterConfig.btn_b_auto_unhold_ch_states)
  return btn_b_auto_unhold_ch_states_;
}
inline ::google::protobuf::RepeatedField<int>*
CharacterConfig::mutable_btn_b_auto_unhold_ch_states() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterConfig.btn_b_auto_unhold_ch_states)
  return &btn_b_auto_unhold_ch_states_;
}

// map<int32, int32> looping_ch_states = 103;
inline int CharacterConfig::looping_ch_states_size() const {
  return looping_ch_states_.size();
}
inline void CharacterConfig::clear_looping_ch_states() {
  looping_ch_states_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
CharacterConfig::looping_ch_states() const {
  // @@protoc_insertion_point(field_map:shared.CharacterConfig.looping_ch_states)
  return looping_ch_states_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
CharacterConfig::mutable_looping_ch_states() {
  // @@protoc_insertion_point(field_mutable_map:shared.CharacterConfig.looping_ch_states)
  return looping_ch_states_.MutableMap();
}

// -------------------------------------------------------------------

// CharacterDownsync

// int32 id = 1;
inline void CharacterDownsync::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.id)
  return id_;
}
inline void CharacterDownsync::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.id)
}

// float x = 2;
inline void CharacterDownsync::clear_x() {
  x_ = 0;
}
inline float CharacterDownsync::x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.x)
  return x_;
}
inline void CharacterDownsync::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.x)
}

// float y = 3;
inline void CharacterDownsync::clear_y() {
  y_ = 0;
}
inline float CharacterDownsync::y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.y)
  return y_;
}
inline void CharacterDownsync::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.y)
}

// int32 dir_x = 4;
inline void CharacterDownsync::clear_dir_x() {
  dir_x_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::dir_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.dir_x)
  return dir_x_;
}
inline void CharacterDownsync::set_dir_x(::google::protobuf::int32 value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.dir_x)
}

// int32 dir_y = 5;
inline void CharacterDownsync::clear_dir_y() {
  dir_y_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::dir_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.dir_y)
  return dir_y_;
}
inline void CharacterDownsync::set_dir_y(::google::protobuf::int32 value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.dir_y)
}

// float vel_x = 6;
inline void CharacterDownsync::clear_vel_x() {
  vel_x_ = 0;
}
inline float CharacterDownsync::vel_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.vel_x)
  return vel_x_;
}
inline void CharacterDownsync::set_vel_x(float value) {
  
  vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.vel_x)
}

// float vel_y = 7;
inline void CharacterDownsync::clear_vel_y() {
  vel_y_ = 0;
}
inline float CharacterDownsync::vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.vel_y)
  return vel_y_;
}
inline void CharacterDownsync::set_vel_y(float value) {
  
  vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.vel_y)
}

// float speed = 8;
inline void CharacterDownsync::clear_speed() {
  speed_ = 0;
}
inline float CharacterDownsync::speed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.speed)
  return speed_;
}
inline void CharacterDownsync::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.speed)
}

// uint32 species_id = 9;
inline void CharacterDownsync::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.species_id)
  return species_id_;
}
inline void CharacterDownsync::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.species_id)
}

// int32 join_index = 10;
inline void CharacterDownsync::clear_join_index() {
  join_index_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::join_index() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.join_index)
  return join_index_;
}
inline void CharacterDownsync::set_join_index(::google::protobuf::int32 value) {
  
  join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.join_index)
}

// int32 frames_to_recover = 11;
inline void CharacterDownsync::clear_frames_to_recover() {
  frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_to_recover)
  return frames_to_recover_;
}
inline void CharacterDownsync::set_frames_to_recover(::google::protobuf::int32 value) {
  
  frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_to_recover)
}

// int32 frames_captured_by_inertia = 12;
inline void CharacterDownsync::clear_frames_captured_by_inertia() {
  frames_captured_by_inertia_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_captured_by_inertia() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_captured_by_inertia)
  return frames_captured_by_inertia_;
}
inline void CharacterDownsync::set_frames_captured_by_inertia(::google::protobuf::int32 value) {
  
  frames_captured_by_inertia_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_captured_by_inertia)
}

// bool captured_by_patrol_cue = 13;
inline void CharacterDownsync::clear_captured_by_patrol_cue() {
  captured_by_patrol_cue_ = false;
}
inline bool CharacterDownsync::captured_by_patrol_cue() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.captured_by_patrol_cue)
  return captured_by_patrol_cue_;
}
inline void CharacterDownsync::set_captured_by_patrol_cue(bool value) {
  
  captured_by_patrol_cue_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.captured_by_patrol_cue)
}

// int32 frames_in_patrol_cue = 14;
inline void CharacterDownsync::clear_frames_in_patrol_cue() {
  frames_in_patrol_cue_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_in_patrol_cue() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_in_patrol_cue)
  return frames_in_patrol_cue_;
}
inline void CharacterDownsync::set_frames_in_patrol_cue(::google::protobuf::int32 value) {
  
  frames_in_patrol_cue_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_in_patrol_cue)
}

// uint32 beats_cnt = 15;
inline void CharacterDownsync::clear_beats_cnt() {
  beats_cnt_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::beats_cnt() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.beats_cnt)
  return beats_cnt_;
}
inline void CharacterDownsync::set_beats_cnt(::google::protobuf::uint32 value) {
  
  beats_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.beats_cnt)
}

// uint32 beaten_cnt = 16;
inline void CharacterDownsync::clear_beaten_cnt() {
  beaten_cnt_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::beaten_cnt() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.beaten_cnt)
  return beaten_cnt_;
}
inline void CharacterDownsync::set_beaten_cnt(::google::protobuf::uint32 value) {
  
  beaten_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.beaten_cnt)
}

// int32 hp = 17;
inline void CharacterDownsync::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::hp() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.hp)
  return hp_;
}
inline void CharacterDownsync::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.hp)
}

// int32 mp = 18;
inline void CharacterDownsync::clear_mp() {
  mp_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::mp() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.mp)
  return mp_;
}
inline void CharacterDownsync::set_mp(::google::protobuf::int32 value) {
  
  mp_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.mp)
}

// int32 btn_b_holding_rdf_count = 19;
inline void CharacterDownsync::clear_btn_b_holding_rdf_count() {
  btn_b_holding_rdf_count_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::btn_b_holding_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.btn_b_holding_rdf_count)
  return btn_b_holding_rdf_count_;
}
inline void CharacterDownsync::set_btn_b_holding_rdf_count(::google::protobuf::int32 value) {
  
  btn_b_holding_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.btn_b_holding_rdf_count)
}

// .shared.CharacterState character_state = 22;
inline void CharacterDownsync::clear_character_state() {
  character_state_ = 0;
}
inline ::shared::CharacterState CharacterDownsync::character_state() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.character_state)
  return static_cast< ::shared::CharacterState >(character_state_);
}
inline void CharacterDownsync::set_character_state(::shared::CharacterState value) {
  
  character_state_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.character_state)
}

// int32 frames_in_ch_state = 23;
inline void CharacterDownsync::clear_frames_in_ch_state() {
  frames_in_ch_state_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_in_ch_state() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_in_ch_state)
  return frames_in_ch_state_;
}
inline void CharacterDownsync::set_frames_in_ch_state(::google::protobuf::int32 value) {
  
  frames_in_ch_state_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_in_ch_state)
}

// bool in_air = 24;
inline void CharacterDownsync::clear_in_air() {
  in_air_ = false;
}
inline bool CharacterDownsync::in_air() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.in_air)
  return in_air_;
}
inline void CharacterDownsync::set_in_air(bool value) {
  
  in_air_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.in_air)
}

// bool jump_triggered = 25;
inline void CharacterDownsync::clear_jump_triggered() {
  jump_triggered_ = false;
}
inline bool CharacterDownsync::jump_triggered() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.jump_triggered)
  return jump_triggered_;
}
inline void CharacterDownsync::set_jump_triggered(bool value) {
  
  jump_triggered_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.jump_triggered)
}

// bool on_wall = 26;
inline void CharacterDownsync::clear_on_wall() {
  on_wall_ = false;
}
inline bool CharacterDownsync::on_wall() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.on_wall)
  return on_wall_;
}
inline void CharacterDownsync::set_on_wall(bool value) {
  
  on_wall_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.on_wall)
}

// int32 on_wall_norm_x = 27;
inline void CharacterDownsync::clear_on_wall_norm_x() {
  on_wall_norm_x_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::on_wall_norm_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.on_wall_norm_x)
  return on_wall_norm_x_;
}
inline void CharacterDownsync::set_on_wall_norm_x(::google::protobuf::int32 value) {
  
  on_wall_norm_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.on_wall_norm_x)
}

// int32 on_wall_norm_y = 28;
inline void CharacterDownsync::clear_on_wall_norm_y() {
  on_wall_norm_y_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::on_wall_norm_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.on_wall_norm_y)
  return on_wall_norm_y_;
}
inline void CharacterDownsync::set_on_wall_norm_y(::google::protobuf::int32 value) {
  
  on_wall_norm_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.on_wall_norm_y)
}

// bool omit_gravity = 29;
inline void CharacterDownsync::clear_omit_gravity() {
  omit_gravity_ = false;
}
inline bool CharacterDownsync::omit_gravity() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.omit_gravity)
  return omit_gravity_;
}
inline void CharacterDownsync::set_omit_gravity(bool value) {
  
  omit_gravity_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.omit_gravity)
}

// bool omit_soft_pushback = 30;
inline void CharacterDownsync::clear_omit_soft_pushback() {
  omit_soft_pushback_ = false;
}
inline bool CharacterDownsync::omit_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.omit_soft_pushback)
  return omit_soft_pushback_;
}
inline void CharacterDownsync::set_omit_soft_pushback(bool value) {
  
  omit_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.omit_soft_pushback)
}

// int32 waiving_patrol_cue_id = 31;
inline void CharacterDownsync::clear_waiving_patrol_cue_id() {
  waiving_patrol_cue_id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::waiving_patrol_cue_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.waiving_patrol_cue_id)
  return waiving_patrol_cue_id_;
}
inline void CharacterDownsync::set_waiving_patrol_cue_id(::google::protobuf::int32 value) {
  
  waiving_patrol_cue_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.waiving_patrol_cue_id)
}

// .shared.NpcGoal goal_as_npc = 32;
inline void CharacterDownsync::clear_goal_as_npc() {
  goal_as_npc_ = 0;
}
inline ::shared::NpcGoal CharacterDownsync::goal_as_npc() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.goal_as_npc)
  return static_cast< ::shared::NpcGoal >(goal_as_npc_);
}
inline void CharacterDownsync::set_goal_as_npc(::shared::NpcGoal value) {
  
  goal_as_npc_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.goal_as_npc)
}

// float revival_x = 33;
inline void CharacterDownsync::clear_revival_x() {
  revival_x_ = 0;
}
inline float CharacterDownsync::revival_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.revival_x)
  return revival_x_;
}
inline void CharacterDownsync::set_revival_x(float value) {
  
  revival_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.revival_x)
}

// float revival_y = 34;
inline void CharacterDownsync::clear_revival_y() {
  revival_y_ = 0;
}
inline float CharacterDownsync::revival_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.revival_y)
  return revival_y_;
}
inline void CharacterDownsync::set_revival_y(float value) {
  
  revival_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.revival_y)
}

// int32 revival_dir_x = 35;
inline void CharacterDownsync::clear_revival_dir_x() {
  revival_dir_x_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::revival_dir_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.revival_dir_x)
  return revival_dir_x_;
}
inline void CharacterDownsync::set_revival_dir_x(::google::protobuf::int32 value) {
  
  revival_dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.revival_dir_x)
}

// int32 revival_dir_y = 36;
inline void CharacterDownsync::clear_revival_dir_y() {
  revival_dir_y_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::revival_dir_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.revival_dir_y)
  return revival_dir_y_;
}
inline void CharacterDownsync::set_revival_dir_y(::google::protobuf::int32 value) {
  
  revival_dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.revival_dir_y)
}

// bool on_slope = 37;
inline void CharacterDownsync::clear_on_slope() {
  on_slope_ = false;
}
inline bool CharacterDownsync::on_slope() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.on_slope)
  return on_slope_;
}
inline void CharacterDownsync::set_on_slope(bool value) {
  
  on_slope_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.on_slope)
}

// int32 friction_vel_x = 38;
inline void CharacterDownsync::clear_friction_vel_x() {
  friction_vel_x_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::friction_vel_x() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.friction_vel_x)
  return friction_vel_x_;
}
inline void CharacterDownsync::set_friction_vel_x(::google::protobuf::int32 value) {
  
  friction_vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.friction_vel_x)
}

// bool forced_crouching = 39;
inline void CharacterDownsync::clear_forced_crouching() {
  forced_crouching_ = false;
}
inline bool CharacterDownsync::forced_crouching() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.forced_crouching)
  return forced_crouching_;
}
inline void CharacterDownsync::set_forced_crouching(bool value) {
  
  forced_crouching_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.forced_crouching)
}

// bool slip_jump_triggered = 40;
inline void CharacterDownsync::clear_slip_jump_triggered() {
  slip_jump_triggered_ = false;
}
inline bool CharacterDownsync::slip_jump_triggered() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.slip_jump_triggered)
  return slip_jump_triggered_;
}
inline void CharacterDownsync::set_slip_jump_triggered(bool value) {
  
  slip_jump_triggered_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.slip_jump_triggered)
}

// bool primarily_on_slippable_hard_pushback = 41;
inline void CharacterDownsync::clear_primarily_on_slippable_hard_pushback() {
  primarily_on_slippable_hard_pushback_ = false;
}
inline bool CharacterDownsync::primarily_on_slippable_hard_pushback() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.primarily_on_slippable_hard_pushback)
  return primarily_on_slippable_hard_pushback_;
}
inline void CharacterDownsync::set_primarily_on_slippable_hard_pushback(bool value) {
  
  primarily_on_slippable_hard_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.primarily_on_slippable_hard_pushback)
}

// bool prev_was_crouching = 42;
inline void CharacterDownsync::clear_prev_was_crouching() {
  prev_was_crouching_ = false;
}
inline bool CharacterDownsync::prev_was_crouching() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.prev_was_crouching)
  return prev_was_crouching_;
}
inline void CharacterDownsync::set_prev_was_crouching(bool value) {
  
  prev_was_crouching_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.prev_was_crouching)
}

// bool new_birth = 43;
inline void CharacterDownsync::clear_new_birth() {
  new_birth_ = false;
}
inline bool CharacterDownsync::new_birth() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.new_birth)
  return new_birth_;
}
inline void CharacterDownsync::set_new_birth(bool value) {
  
  new_birth_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.new_birth)
}

// int32 frames_invinsible = 44;
inline void CharacterDownsync::clear_frames_invinsible() {
  frames_invinsible_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_invinsible() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_invinsible)
  return frames_invinsible_;
}
inline void CharacterDownsync::set_frames_invinsible(::google::protobuf::int32 value) {
  
  frames_invinsible_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_invinsible)
}

// bool jump_started = 45;
inline void CharacterDownsync::clear_jump_started() {
  jump_started_ = false;
}
inline bool CharacterDownsync::jump_started() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.jump_started)
  return jump_started_;
}
inline void CharacterDownsync::set_jump_started(bool value) {
  
  jump_started_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.jump_started)
}

// int32 frames_to_start_jump = 46;
inline void CharacterDownsync::clear_frames_to_start_jump() {
  frames_to_start_jump_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_to_start_jump() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_to_start_jump)
  return frames_to_start_jump_;
}
inline void CharacterDownsync::set_frames_to_start_jump(::google::protobuf::int32 value) {
  
  frames_to_start_jump_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_to_start_jump)
}

// bool repel_soft_pushback = 47;
inline void CharacterDownsync::clear_repel_soft_pushback() {
  repel_soft_pushback_ = false;
}
inline bool CharacterDownsync::repel_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.repel_soft_pushback)
  return repel_soft_pushback_;
}
inline void CharacterDownsync::set_repel_soft_pushback(bool value) {
  
  repel_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.repel_soft_pushback)
}

// uint64 publishing_evt_mask_upon_killed = 48;
inline void CharacterDownsync::clear_publishing_evt_mask_upon_killed() {
  publishing_evt_mask_upon_killed_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CharacterDownsync::publishing_evt_mask_upon_killed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.publishing_evt_mask_upon_killed)
  return publishing_evt_mask_upon_killed_;
}
inline void CharacterDownsync::set_publishing_evt_mask_upon_killed(::google::protobuf::uint64 value) {
  
  publishing_evt_mask_upon_killed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.publishing_evt_mask_upon_killed)
}

// int32 publishing_to_trigger_local_id_upon_killed = 49;
inline void CharacterDownsync::clear_publishing_to_trigger_local_id_upon_killed() {
  publishing_to_trigger_local_id_upon_killed_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::publishing_to_trigger_local_id_upon_killed() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.publishing_to_trigger_local_id_upon_killed)
  return publishing_to_trigger_local_id_upon_killed_;
}
inline void CharacterDownsync::set_publishing_to_trigger_local_id_upon_killed(::google::protobuf::int32 value) {
  
  publishing_to_trigger_local_id_upon_killed_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.publishing_to_trigger_local_id_upon_killed)
}

// int32 subscribes_to_trigger_local_id = 50;
inline void CharacterDownsync::clear_subscribes_to_trigger_local_id() {
  subscribes_to_trigger_local_id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::subscribes_to_trigger_local_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.subscribes_to_trigger_local_id)
  return subscribes_to_trigger_local_id_;
}
inline void CharacterDownsync::set_subscribes_to_trigger_local_id(::google::protobuf::int32 value) {
  
  subscribes_to_trigger_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.subscribes_to_trigger_local_id)
}

// int32 jump_holding_rdf_cnt = 51;
inline void CharacterDownsync::clear_jump_holding_rdf_cnt() {
  jump_holding_rdf_cnt_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::jump_holding_rdf_cnt() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.jump_holding_rdf_cnt)
  return jump_holding_rdf_cnt_;
}
inline void CharacterDownsync::set_jump_holding_rdf_cnt(::google::protobuf::int32 value) {
  
  jump_holding_rdf_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.jump_holding_rdf_cnt)
}

// uint32 remaining_air_jump_quota = 52;
inline void CharacterDownsync::clear_remaining_air_jump_quota() {
  remaining_air_jump_quota_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::remaining_air_jump_quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.remaining_air_jump_quota)
  return remaining_air_jump_quota_;
}
inline void CharacterDownsync::set_remaining_air_jump_quota(::google::protobuf::uint32 value) {
  
  remaining_air_jump_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.remaining_air_jump_quota)
}

// uint32 remaining_air_dash_quota = 53;
inline void CharacterDownsync::clear_remaining_air_dash_quota() {
  remaining_air_dash_quota_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::remaining_air_dash_quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.remaining_air_dash_quota)
  return remaining_air_dash_quota_;
}
inline void CharacterDownsync::set_remaining_air_dash_quota(::google::protobuf::uint32 value) {
  
  remaining_air_dash_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.remaining_air_dash_quota)
}

// uint32 killed_to_drop_consumable_species_id = 54;
inline void CharacterDownsync::clear_killed_to_drop_consumable_species_id() {
  killed_to_drop_consumable_species_id_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::killed_to_drop_consumable_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.killed_to_drop_consumable_species_id)
  return killed_to_drop_consumable_species_id_;
}
inline void CharacterDownsync::set_killed_to_drop_consumable_species_id(::google::protobuf::uint32 value) {
  
  killed_to_drop_consumable_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.killed_to_drop_consumable_species_id)
}

// uint32 killed_to_drop_buff_species_id = 55;
inline void CharacterDownsync::clear_killed_to_drop_buff_species_id() {
  killed_to_drop_buff_species_id_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::killed_to_drop_buff_species_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.killed_to_drop_buff_species_id)
  return killed_to_drop_buff_species_id_;
}
inline void CharacterDownsync::set_killed_to_drop_buff_species_id(::google::protobuf::uint32 value) {
  
  killed_to_drop_buff_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.killed_to_drop_buff_species_id)
}

// uint32 killed_to_drop_pickup_skill_id = 56;
inline void CharacterDownsync::clear_killed_to_drop_pickup_skill_id() {
  killed_to_drop_pickup_skill_id_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::killed_to_drop_pickup_skill_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.killed_to_drop_pickup_skill_id)
  return killed_to_drop_pickup_skill_id_;
}
inline void CharacterDownsync::set_killed_to_drop_pickup_skill_id(::google::protobuf::uint32 value) {
  
  killed_to_drop_pickup_skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.killed_to_drop_pickup_skill_id)
}

// int32 friction_vel_y = 57;
inline void CharacterDownsync::clear_friction_vel_y() {
  friction_vel_y_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::friction_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.friction_vel_y)
  return friction_vel_y_;
}
inline void CharacterDownsync::set_friction_vel_y(::google::protobuf::int32 value) {
  
  friction_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.friction_vel_y)
}

// int32 frames_since_last_damaged = 58;
inline void CharacterDownsync::clear_frames_since_last_damaged() {
  frames_since_last_damaged_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::frames_since_last_damaged() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.frames_since_last_damaged)
  return frames_since_last_damaged_;
}
inline void CharacterDownsync::set_frames_since_last_damaged(::google::protobuf::int32 value) {
  
  frames_since_last_damaged_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.frames_since_last_damaged)
}

// uint32 remaining_def1Quota = 59;
inline void CharacterDownsync::clear_remaining_def1quota() {
  remaining_def1quota_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::remaining_def1quota() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.remaining_def1Quota)
  return remaining_def1quota_;
}
inline void CharacterDownsync::set_remaining_def1quota(::google::protobuf::uint32 value) {
  
  remaining_def1quota_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.remaining_def1Quota)
}

// uint32 combo_hit_cnt = 60;
inline void CharacterDownsync::clear_combo_hit_cnt() {
  combo_hit_cnt_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::combo_hit_cnt() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.combo_hit_cnt)
  return combo_hit_cnt_;
}
inline void CharacterDownsync::set_combo_hit_cnt(::google::protobuf::uint32 value) {
  
  combo_hit_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.combo_hit_cnt)
}

// int32 combo_frames_remained = 61;
inline void CharacterDownsync::clear_combo_frames_remained() {
  combo_frames_remained_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::combo_frames_remained() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.combo_frames_remained)
  return combo_frames_remained_;
}
inline void CharacterDownsync::set_combo_frames_remained(::google::protobuf::int32 value) {
  
  combo_frames_remained_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.combo_frames_remained)
}

// uint32 damage_elemental_attrs = 62;
inline void CharacterDownsync::clear_damage_elemental_attrs() {
  damage_elemental_attrs_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::damage_elemental_attrs() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.damage_elemental_attrs)
  return damage_elemental_attrs_;
}
inline void CharacterDownsync::set_damage_elemental_attrs(::google::protobuf::uint32 value) {
  
  damage_elemental_attrs_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.damage_elemental_attrs)
}

// bool on_slope_facing_down = 63;
inline void CharacterDownsync::clear_on_slope_facing_down() {
  on_slope_facing_down_ = false;
}
inline bool CharacterDownsync::on_slope_facing_down() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.on_slope_facing_down)
  return on_slope_facing_down_;
}
inline void CharacterDownsync::set_on_slope_facing_down(bool value) {
  
  on_slope_facing_down_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.on_slope_facing_down)
}

// int32 last_damaged_by_join_index = 64;
inline void CharacterDownsync::clear_last_damaged_by_join_index() {
  last_damaged_by_join_index_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::last_damaged_by_join_index() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.last_damaged_by_join_index)
  return last_damaged_by_join_index_;
}
inline void CharacterDownsync::set_last_damaged_by_join_index(::google::protobuf::int32 value) {
  
  last_damaged_by_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.last_damaged_by_join_index)
}

// int32 last_damaged_by_bullet_team_id = 65;
inline void CharacterDownsync::clear_last_damaged_by_bullet_team_id() {
  last_damaged_by_bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::last_damaged_by_bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.last_damaged_by_bullet_team_id)
  return last_damaged_by_bullet_team_id_;
}
inline void CharacterDownsync::set_last_damaged_by_bullet_team_id(::google::protobuf::int32 value) {
  
  last_damaged_by_bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.last_damaged_by_bullet_team_id)
}

// int32 activated_rdf_id = 66;
inline void CharacterDownsync::clear_activated_rdf_id() {
  activated_rdf_id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::activated_rdf_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.activated_rdf_id)
  return activated_rdf_id_;
}
inline void CharacterDownsync::set_activated_rdf_id(::google::protobuf::int32 value) {
  
  activated_rdf_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.activated_rdf_id)
}

// uint64 cached_cue_cmd = 67;
inline void CharacterDownsync::clear_cached_cue_cmd() {
  cached_cue_cmd_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CharacterDownsync::cached_cue_cmd() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.cached_cue_cmd)
  return cached_cue_cmd_;
}
inline void CharacterDownsync::set_cached_cue_cmd(::google::protobuf::uint64 value) {
  
  cached_cue_cmd_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.cached_cue_cmd)
}

// uint32 active_skill_id = 68;
inline void CharacterDownsync::clear_active_skill_id() {
  active_skill_id_ = 0u;
}
inline ::google::protobuf::uint32 CharacterDownsync::active_skill_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.active_skill_id)
  return active_skill_id_;
}
inline void CharacterDownsync::set_active_skill_id(::google::protobuf::uint32 value) {
  
  active_skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.active_skill_id)
}

// int32 active_skill_hit = 69;
inline void CharacterDownsync::clear_active_skill_hit() {
  active_skill_hit_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::active_skill_hit() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.active_skill_hit)
  return active_skill_hit_;
}
inline void CharacterDownsync::set_active_skill_hit(::google::protobuf::int32 value) {
  
  active_skill_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.active_skill_hit)
}

// int32 bullet_team_id = 70;
inline void CharacterDownsync::clear_bullet_team_id() {
  bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.bullet_team_id)
  return bullet_team_id_;
}
inline void CharacterDownsync::set_bullet_team_id(::google::protobuf::int32 value) {
  
  bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.bullet_team_id)
}

// int32 ch_collision_team_id = 71;
inline void CharacterDownsync::clear_ch_collision_team_id() {
  ch_collision_team_id_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::ch_collision_team_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.ch_collision_team_id)
  return ch_collision_team_id_;
}
inline void CharacterDownsync::set_ch_collision_team_id(::google::protobuf::int32 value) {
  
  ch_collision_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.ch_collision_team_id)
}

// int32 btn_c_holding_rdf_count = 72;
inline void CharacterDownsync::clear_btn_c_holding_rdf_count() {
  btn_c_holding_rdf_count_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::btn_c_holding_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.btn_c_holding_rdf_count)
  return btn_c_holding_rdf_count_;
}
inline void CharacterDownsync::set_btn_c_holding_rdf_count(::google::protobuf::int32 value) {
  
  btn_c_holding_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.btn_c_holding_rdf_count)
}

// int32 btn_d_Holding_rdf_count = 73;
inline void CharacterDownsync::clear_btn_d_holding_rdf_count() {
  btn_d_holding_rdf_count_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::btn_d_holding_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.btn_d_Holding_rdf_count)
  return btn_d_holding_rdf_count_;
}
inline void CharacterDownsync::set_btn_d_holding_rdf_count(::google::protobuf::int32 value) {
  
  btn_d_holding_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.btn_d_Holding_rdf_count)
}

// int32 btn_e_holding_rdf_count = 74;
inline void CharacterDownsync::clear_btn_e_holding_rdf_count() {
  btn_e_holding_rdf_count_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::btn_e_holding_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.btn_e_holding_rdf_count)
  return btn_e_holding_rdf_count_;
}
inline void CharacterDownsync::set_btn_e_holding_rdf_count(::google::protobuf::int32 value) {
  
  btn_e_holding_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.btn_e_holding_rdf_count)
}

// int32 parry_prep_rdf_cnt_down = 75;
inline void CharacterDownsync::clear_parry_prep_rdf_cnt_down() {
  parry_prep_rdf_cnt_down_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::parry_prep_rdf_cnt_down() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.parry_prep_rdf_cnt_down)
  return parry_prep_rdf_cnt_down_;
}
inline void CharacterDownsync::set_parry_prep_rdf_cnt_down(::google::protobuf::int32 value) {
  
  parry_prep_rdf_cnt_down_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.parry_prep_rdf_cnt_down)
}

// int32 mp_regen_rdf_countdown = 76;
inline void CharacterDownsync::clear_mp_regen_rdf_countdown() {
  mp_regen_rdf_countdown_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::mp_regen_rdf_countdown() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.mp_regen_rdf_countdown)
  return mp_regen_rdf_countdown_;
}
inline void CharacterDownsync::set_mp_regen_rdf_countdown(::google::protobuf::int32 value) {
  
  mp_regen_rdf_countdown_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.mp_regen_rdf_countdown)
}

// int32 flying_rdf_countdown = 77;
inline void CharacterDownsync::clear_flying_rdf_countdown() {
  flying_rdf_countdown_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::flying_rdf_countdown() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.flying_rdf_countdown)
  return flying_rdf_countdown_;
}
inline void CharacterDownsync::set_flying_rdf_countdown(::google::protobuf::int32 value) {
  
  flying_rdf_countdown_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.flying_rdf_countdown)
}

// int32 locking_on_join_index = 78;
inline void CharacterDownsync::clear_locking_on_join_index() {
  locking_on_join_index_ = 0;
}
inline ::google::protobuf::int32 CharacterDownsync::locking_on_join_index() const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.locking_on_join_index)
  return locking_on_join_index_;
}
inline void CharacterDownsync::set_locking_on_join_index(::google::protobuf::int32 value) {
  
  locking_on_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.locking_on_join_index)
}

// repeated .shared.Buff buff_list = 90;
inline int CharacterDownsync::buff_list_size() const {
  return buff_list_.size();
}
inline void CharacterDownsync::clear_buff_list() {
  buff_list_.Clear();
}
inline ::shared::Buff* CharacterDownsync::mutable_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:shared.CharacterDownsync.buff_list)
  return buff_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::Buff >*
CharacterDownsync::mutable_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterDownsync.buff_list)
  return &buff_list_;
}
inline const ::shared::Buff& CharacterDownsync::buff_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.buff_list)
  return buff_list_.Get(index);
}
inline ::shared::Buff* CharacterDownsync::add_buff_list() {
  // @@protoc_insertion_point(field_add:shared.CharacterDownsync.buff_list)
  return buff_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::Buff >&
CharacterDownsync::buff_list() const {
  // @@protoc_insertion_point(field_list:shared.CharacterDownsync.buff_list)
  return buff_list_;
}

// repeated .shared.Debuff debuff_list = 91;
inline int CharacterDownsync::debuff_list_size() const {
  return debuff_list_.size();
}
inline void CharacterDownsync::clear_debuff_list() {
  debuff_list_.Clear();
}
inline ::shared::Debuff* CharacterDownsync::mutable_debuff_list(int index) {
  // @@protoc_insertion_point(field_mutable:shared.CharacterDownsync.debuff_list)
  return debuff_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::Debuff >*
CharacterDownsync::mutable_debuff_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterDownsync.debuff_list)
  return &debuff_list_;
}
inline const ::shared::Debuff& CharacterDownsync::debuff_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.debuff_list)
  return debuff_list_.Get(index);
}
inline ::shared::Debuff* CharacterDownsync::add_debuff_list() {
  // @@protoc_insertion_point(field_add:shared.CharacterDownsync.debuff_list)
  return debuff_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::Debuff >&
CharacterDownsync::debuff_list() const {
  // @@protoc_insertion_point(field_list:shared.CharacterDownsync.debuff_list)
  return debuff_list_;
}

// .shared.Inventory inventory = 92;
inline bool CharacterDownsync::has_inventory() const {
  return this != internal_default_instance() && inventory_ != nullptr;
}
inline void CharacterDownsync::clear_inventory() {
  if (GetArenaNoVirtual() == nullptr && inventory_ != nullptr) {
    delete inventory_;
  }
  inventory_ = nullptr;
}
inline const ::shared::Inventory& CharacterDownsync::inventory() const {
  const ::shared::Inventory* p = inventory_;
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.inventory)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::Inventory*>(
      &::shared::_Inventory_default_instance_);
}
inline ::shared::Inventory* CharacterDownsync::release_inventory() {
  // @@protoc_insertion_point(field_release:shared.CharacterDownsync.inventory)
  
  ::shared::Inventory* temp = inventory_;
  inventory_ = nullptr;
  return temp;
}
inline ::shared::Inventory* CharacterDownsync::mutable_inventory() {
  
  if (inventory_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::Inventory>(GetArenaNoVirtual());
    inventory_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.CharacterDownsync.inventory)
  return inventory_;
}
inline void CharacterDownsync::set_allocated_inventory(::shared::Inventory* inventory) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inventory_;
  }
  if (inventory) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      inventory = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inventory, submessage_arena);
    }
    
  } else {
    
  }
  inventory_ = inventory;
  // @@protoc_insertion_point(field_set_allocated:shared.CharacterDownsync.inventory)
}

// repeated .shared.BulletImmuneRecord bullet_immune_records = 93;
inline int CharacterDownsync::bullet_immune_records_size() const {
  return bullet_immune_records_.size();
}
inline void CharacterDownsync::clear_bullet_immune_records() {
  bullet_immune_records_.Clear();
}
inline ::shared::BulletImmuneRecord* CharacterDownsync::mutable_bullet_immune_records(int index) {
  // @@protoc_insertion_point(field_mutable:shared.CharacterDownsync.bullet_immune_records)
  return bullet_immune_records_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::BulletImmuneRecord >*
CharacterDownsync::mutable_bullet_immune_records() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterDownsync.bullet_immune_records)
  return &bullet_immune_records_;
}
inline const ::shared::BulletImmuneRecord& CharacterDownsync::bullet_immune_records(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.bullet_immune_records)
  return bullet_immune_records_.Get(index);
}
inline ::shared::BulletImmuneRecord* CharacterDownsync::add_bullet_immune_records() {
  // @@protoc_insertion_point(field_add:shared.CharacterDownsync.bullet_immune_records)
  return bullet_immune_records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::BulletImmuneRecord >&
CharacterDownsync::bullet_immune_records() const {
  // @@protoc_insertion_point(field_list:shared.CharacterDownsync.bullet_immune_records)
  return bullet_immune_records_;
}

// repeated float kinematic_knobs = 94;
inline int CharacterDownsync::kinematic_knobs_size() const {
  return kinematic_knobs_.size();
}
inline void CharacterDownsync::clear_kinematic_knobs() {
  kinematic_knobs_.Clear();
}
inline float CharacterDownsync::kinematic_knobs(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterDownsync.kinematic_knobs)
  return kinematic_knobs_.Get(index);
}
inline void CharacterDownsync::set_kinematic_knobs(int index, float value) {
  kinematic_knobs_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.CharacterDownsync.kinematic_knobs)
}
inline void CharacterDownsync::add_kinematic_knobs(float value) {
  kinematic_knobs_.Add(value);
  // @@protoc_insertion_point(field_add:shared.CharacterDownsync.kinematic_knobs)
}
inline const ::google::protobuf::RepeatedField< float >&
CharacterDownsync::kinematic_knobs() const {
  // @@protoc_insertion_point(field_list:shared.CharacterDownsync.kinematic_knobs)
  return kinematic_knobs_;
}
inline ::google::protobuf::RepeatedField< float >*
CharacterDownsync::mutable_kinematic_knobs() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterDownsync.kinematic_knobs)
  return &kinematic_knobs_;
}

// -------------------------------------------------------------------

// InputFrameDecoded

// int32 dx = 1;
inline void InputFrameDecoded::clear_dx() {
  dx_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::dx() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.dx)
  return dx_;
}
inline void InputFrameDecoded::set_dx(::google::protobuf::int32 value) {
  
  dx_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.dx)
}

// int32 dy = 2;
inline void InputFrameDecoded::clear_dy() {
  dy_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::dy() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.dy)
  return dy_;
}
inline void InputFrameDecoded::set_dy(::google::protobuf::int32 value) {
  
  dy_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.dy)
}

// int32 btn_a_level = 3;
inline void InputFrameDecoded::clear_btn_a_level() {
  btn_a_level_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::btn_a_level() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.btn_a_level)
  return btn_a_level_;
}
inline void InputFrameDecoded::set_btn_a_level(::google::protobuf::int32 value) {
  
  btn_a_level_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.btn_a_level)
}

// int32 btn_b_level = 4;
inline void InputFrameDecoded::clear_btn_b_level() {
  btn_b_level_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::btn_b_level() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.btn_b_level)
  return btn_b_level_;
}
inline void InputFrameDecoded::set_btn_b_level(::google::protobuf::int32 value) {
  
  btn_b_level_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.btn_b_level)
}

// int32 btn_c_level = 5;
inline void InputFrameDecoded::clear_btn_c_level() {
  btn_c_level_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::btn_c_level() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.btn_c_level)
  return btn_c_level_;
}
inline void InputFrameDecoded::set_btn_c_level(::google::protobuf::int32 value) {
  
  btn_c_level_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.btn_c_level)
}

// int32 btn_d_level = 6;
inline void InputFrameDecoded::clear_btn_d_level() {
  btn_d_level_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::btn_d_level() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.btn_d_level)
  return btn_d_level_;
}
inline void InputFrameDecoded::set_btn_d_level(::google::protobuf::int32 value) {
  
  btn_d_level_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.btn_d_level)
}

// int32 btn_e_level = 7;
inline void InputFrameDecoded::clear_btn_e_level() {
  btn_e_level_ = 0;
}
inline ::google::protobuf::int32 InputFrameDecoded::btn_e_level() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDecoded.btn_e_level)
  return btn_e_level_;
}
inline void InputFrameDecoded::set_btn_e_level(::google::protobuf::int32 value) {
  
  btn_e_level_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDecoded.btn_e_level)
}

// -------------------------------------------------------------------

// InputFrameUpsync

// int32 input_frame_id = 1;
inline void InputFrameUpsync::clear_input_frame_id() {
  input_frame_id_ = 0;
}
inline ::google::protobuf::int32 InputFrameUpsync::input_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameUpsync.input_frame_id)
  return input_frame_id_;
}
inline void InputFrameUpsync::set_input_frame_id(::google::protobuf::int32 value) {
  
  input_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameUpsync.input_frame_id)
}

// uint64 encoded = 2;
inline void InputFrameUpsync::clear_encoded() {
  encoded_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InputFrameUpsync::encoded() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameUpsync.encoded)
  return encoded_;
}
inline void InputFrameUpsync::set_encoded(::google::protobuf::uint64 value) {
  
  encoded_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameUpsync.encoded)
}

// int32 join_index = 3;
inline void InputFrameUpsync::clear_join_index() {
  join_index_ = 0;
}
inline ::google::protobuf::int32 InputFrameUpsync::join_index() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameUpsync.join_index)
  return join_index_;
}
inline void InputFrameUpsync::set_join_index(::google::protobuf::int32 value) {
  
  join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameUpsync.join_index)
}

// -------------------------------------------------------------------

// InputFrameDownsync

// int32 input_frame_id = 1;
inline void InputFrameDownsync::clear_input_frame_id() {
  input_frame_id_ = 0;
}
inline ::google::protobuf::int32 InputFrameDownsync::input_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDownsync.input_frame_id)
  return input_frame_id_;
}
inline void InputFrameDownsync::set_input_frame_id(::google::protobuf::int32 value) {
  
  input_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDownsync.input_frame_id)
}

// repeated uint64 input_list = 2;
inline int InputFrameDownsync::input_list_size() const {
  return input_list_.size();
}
inline void InputFrameDownsync::clear_input_list() {
  input_list_.Clear();
}
inline ::google::protobuf::uint64 InputFrameDownsync::input_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDownsync.input_list)
  return input_list_.Get(index);
}
inline void InputFrameDownsync::set_input_list(int index, ::google::protobuf::uint64 value) {
  input_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.InputFrameDownsync.input_list)
}
inline void InputFrameDownsync::add_input_list(::google::protobuf::uint64 value) {
  input_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.InputFrameDownsync.input_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
InputFrameDownsync::input_list() const {
  // @@protoc_insertion_point(field_list:shared.InputFrameDownsync.input_list)
  return input_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
InputFrameDownsync::mutable_input_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.InputFrameDownsync.input_list)
  return &input_list_;
}

// uint64 confirmed_list = 3;
inline void InputFrameDownsync::clear_confirmed_list() {
  confirmed_list_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InputFrameDownsync::confirmed_list() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDownsync.confirmed_list)
  return confirmed_list_;
}
inline void InputFrameDownsync::set_confirmed_list(::google::protobuf::uint64 value) {
  
  confirmed_list_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDownsync.confirmed_list)
}

// uint64 udp_confirmed_list = 4;
inline void InputFrameDownsync::clear_udp_confirmed_list() {
  udp_confirmed_list_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InputFrameDownsync::udp_confirmed_list() const {
  // @@protoc_insertion_point(field_get:shared.InputFrameDownsync.udp_confirmed_list)
  return udp_confirmed_list_;
}
inline void InputFrameDownsync::set_udp_confirmed_list(::google::protobuf::uint64 value) {
  
  udp_confirmed_list_ = value;
  // @@protoc_insertion_point(field_set:shared.InputFrameDownsync.udp_confirmed_list)
}

// -------------------------------------------------------------------

// WsReq

// string player_id = 1;
inline void WsReq::clear_player_id() {
  player_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WsReq::player_id() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.player_id)
  return player_id_.GetNoArena();
}
inline void WsReq::set_player_id(const ::std::string& value) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.WsReq.player_id)
}
#if LANG_CXX11
inline void WsReq::set_player_id(::std::string&& value) {
  
  player_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.WsReq.player_id)
}
#endif
inline void WsReq::set_player_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.WsReq.player_id)
}
inline void WsReq::set_player_id(const char* value, size_t size) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.WsReq.player_id)
}
inline ::std::string* WsReq::mutable_player_id() {
  
  // @@protoc_insertion_point(field_mutable:shared.WsReq.player_id)
  return player_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WsReq::release_player_id() {
  // @@protoc_insertion_point(field_release:shared.WsReq.player_id)
  
  return player_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WsReq::set_allocated_player_id(::std::string* player_id) {
  if (player_id != nullptr) {
    
  } else {
    
  }
  player_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_id);
  // @@protoc_insertion_point(field_set_allocated:shared.WsReq.player_id)
}

// int32 act = 2;
inline void WsReq::clear_act() {
  act_ = 0;
}
inline ::google::protobuf::int32 WsReq::act() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.act)
  return act_;
}
inline void WsReq::set_act(::google::protobuf::int32 value) {
  
  act_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.act)
}

// int32 join_index = 3;
inline void WsReq::clear_join_index() {
  join_index_ = 0;
}
inline ::google::protobuf::int32 WsReq::join_index() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.join_index)
  return join_index_;
}
inline void WsReq::set_join_index(::google::protobuf::int32 value) {
  
  join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.join_index)
}

// int32 acking_frame_id = 4;
inline void WsReq::clear_acking_frame_id() {
  acking_frame_id_ = 0;
}
inline ::google::protobuf::int32 WsReq::acking_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.acking_frame_id)
  return acking_frame_id_;
}
inline void WsReq::set_acking_frame_id(::google::protobuf::int32 value) {
  
  acking_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.acking_frame_id)
}

// int32 acking_input_frame_id = 5;
inline void WsReq::clear_acking_input_frame_id() {
  acking_input_frame_id_ = 0;
}
inline ::google::protobuf::int32 WsReq::acking_input_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.acking_input_frame_id)
  return acking_input_frame_id_;
}
inline void WsReq::set_acking_input_frame_id(::google::protobuf::int32 value) {
  
  acking_input_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.acking_input_frame_id)
}

// int32 auth_key = 6;
inline void WsReq::clear_auth_key() {
  auth_key_ = 0;
}
inline ::google::protobuf::int32 WsReq::auth_key() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.auth_key)
  return auth_key_;
}
inline void WsReq::set_auth_key(::google::protobuf::int32 value) {
  
  auth_key_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.auth_key)
}

// repeated .shared.InputFrameUpsync input_frame_upsync_batch = 7;
inline int WsReq::input_frame_upsync_batch_size() const {
  return input_frame_upsync_batch_.size();
}
inline void WsReq::clear_input_frame_upsync_batch() {
  input_frame_upsync_batch_.Clear();
}
inline ::shared::InputFrameUpsync* WsReq::mutable_input_frame_upsync_batch(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsReq.input_frame_upsync_batch)
  return input_frame_upsync_batch_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::InputFrameUpsync >*
WsReq::mutable_input_frame_upsync_batch() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsReq.input_frame_upsync_batch)
  return &input_frame_upsync_batch_;
}
inline const ::shared::InputFrameUpsync& WsReq::input_frame_upsync_batch(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsReq.input_frame_upsync_batch)
  return input_frame_upsync_batch_.Get(index);
}
inline ::shared::InputFrameUpsync* WsReq::add_input_frame_upsync_batch() {
  // @@protoc_insertion_point(field_add:shared.WsReq.input_frame_upsync_batch)
  return input_frame_upsync_batch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::InputFrameUpsync >&
WsReq::input_frame_upsync_batch() const {
  // @@protoc_insertion_point(field_list:shared.WsReq.input_frame_upsync_batch)
  return input_frame_upsync_batch_;
}

// .shared.RenderFrame self_parsed_rdf = 8;
inline bool WsReq::has_self_parsed_rdf() const {
  return this != internal_default_instance() && self_parsed_rdf_ != nullptr;
}
inline void WsReq::clear_self_parsed_rdf() {
  if (GetArenaNoVirtual() == nullptr && self_parsed_rdf_ != nullptr) {
    delete self_parsed_rdf_;
  }
  self_parsed_rdf_ = nullptr;
}
inline const ::shared::RenderFrame& WsReq::self_parsed_rdf() const {
  const ::shared::RenderFrame* p = self_parsed_rdf_;
  // @@protoc_insertion_point(field_get:shared.WsReq.self_parsed_rdf)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::RenderFrame*>(
      &::shared::_RenderFrame_default_instance_);
}
inline ::shared::RenderFrame* WsReq::release_self_parsed_rdf() {
  // @@protoc_insertion_point(field_release:shared.WsReq.self_parsed_rdf)
  
  ::shared::RenderFrame* temp = self_parsed_rdf_;
  self_parsed_rdf_ = nullptr;
  return temp;
}
inline ::shared::RenderFrame* WsReq::mutable_self_parsed_rdf() {
  
  if (self_parsed_rdf_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::RenderFrame>(GetArenaNoVirtual());
    self_parsed_rdf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.WsReq.self_parsed_rdf)
  return self_parsed_rdf_;
}
inline void WsReq::set_allocated_self_parsed_rdf(::shared::RenderFrame* self_parsed_rdf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete self_parsed_rdf_;
  }
  if (self_parsed_rdf) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      self_parsed_rdf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, self_parsed_rdf, submessage_arena);
    }
    
  } else {
    
  }
  self_parsed_rdf_ = self_parsed_rdf;
  // @@protoc_insertion_point(field_set_allocated:shared.WsReq.self_parsed_rdf)
}

// int32 collision_space_half_width = 9;
inline void WsReq::clear_collision_space_half_width() {
  collision_space_half_width_ = 0;
}
inline ::google::protobuf::int32 WsReq::collision_space_half_width() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.collision_space_half_width)
  return collision_space_half_width_;
}
inline void WsReq::set_collision_space_half_width(::google::protobuf::int32 value) {
  
  collision_space_half_width_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.collision_space_half_width)
}

// int32 collision_space_half_height = 10;
inline void WsReq::clear_collision_space_half_height() {
  collision_space_half_height_ = 0;
}
inline ::google::protobuf::int32 WsReq::collision_space_half_height() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.collision_space_half_height)
  return collision_space_half_height_;
}
inline void WsReq::set_collision_space_half_height(::google::protobuf::int32 value) {
  
  collision_space_half_height_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.collision_space_half_height)
}

// int32 battle_duration_seconds = 11;
inline void WsReq::clear_battle_duration_seconds() {
  battle_duration_seconds_ = 0;
}
inline ::google::protobuf::int32 WsReq::battle_duration_seconds() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.battle_duration_seconds)
  return battle_duration_seconds_;
}
inline void WsReq::set_battle_duration_seconds(::google::protobuf::int32 value) {
  
  battle_duration_seconds_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.battle_duration_seconds)
}

// repeated .shared.SerializableConvexPolygon serialized_barrier_polygons = 12;
inline int WsReq::serialized_barrier_polygons_size() const {
  return serialized_barrier_polygons_.size();
}
inline void WsReq::clear_serialized_barrier_polygons() {
  serialized_barrier_polygons_.Clear();
}
inline ::shared::SerializableConvexPolygon* WsReq::mutable_serialized_barrier_polygons(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsReq.serialized_barrier_polygons)
  return serialized_barrier_polygons_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::SerializableConvexPolygon >*
WsReq::mutable_serialized_barrier_polygons() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsReq.serialized_barrier_polygons)
  return &serialized_barrier_polygons_;
}
inline const ::shared::SerializableConvexPolygon& WsReq::serialized_barrier_polygons(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsReq.serialized_barrier_polygons)
  return serialized_barrier_polygons_.Get(index);
}
inline ::shared::SerializableConvexPolygon* WsReq::add_serialized_barrier_polygons() {
  // @@protoc_insertion_point(field_add:shared.WsReq.serialized_barrier_polygons)
  return serialized_barrier_polygons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::SerializableConvexPolygon >&
WsReq::serialized_barrier_polygons() const {
  // @@protoc_insertion_point(field_list:shared.WsReq.serialized_barrier_polygons)
  return serialized_barrier_polygons_;
}

// repeated .shared.SerializedCompletelyStaticPatrolCueCollider serialized_static_patrol_cues = 13;
inline int WsReq::serialized_static_patrol_cues_size() const {
  return serialized_static_patrol_cues_.size();
}
inline void WsReq::clear_serialized_static_patrol_cues() {
  serialized_static_patrol_cues_.Clear();
}
inline ::shared::SerializedCompletelyStaticPatrolCueCollider* WsReq::mutable_serialized_static_patrol_cues(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsReq.serialized_static_patrol_cues)
  return serialized_static_patrol_cues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticPatrolCueCollider >*
WsReq::mutable_serialized_static_patrol_cues() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsReq.serialized_static_patrol_cues)
  return &serialized_static_patrol_cues_;
}
inline const ::shared::SerializedCompletelyStaticPatrolCueCollider& WsReq::serialized_static_patrol_cues(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsReq.serialized_static_patrol_cues)
  return serialized_static_patrol_cues_.Get(index);
}
inline ::shared::SerializedCompletelyStaticPatrolCueCollider* WsReq::add_serialized_static_patrol_cues() {
  // @@protoc_insertion_point(field_add:shared.WsReq.serialized_static_patrol_cues)
  return serialized_static_patrol_cues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticPatrolCueCollider >&
WsReq::serialized_static_patrol_cues() const {
  // @@protoc_insertion_point(field_list:shared.WsReq.serialized_static_patrol_cues)
  return serialized_static_patrol_cues_;
}

// repeated .shared.SerializedCompletelyStaticTrapCollider serialized_completely_static_traps = 14;
inline int WsReq::serialized_completely_static_traps_size() const {
  return serialized_completely_static_traps_.size();
}
inline void WsReq::clear_serialized_completely_static_traps() {
  serialized_completely_static_traps_.Clear();
}
inline ::shared::SerializedCompletelyStaticTrapCollider* WsReq::mutable_serialized_completely_static_traps(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsReq.serialized_completely_static_traps)
  return serialized_completely_static_traps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTrapCollider >*
WsReq::mutable_serialized_completely_static_traps() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsReq.serialized_completely_static_traps)
  return &serialized_completely_static_traps_;
}
inline const ::shared::SerializedCompletelyStaticTrapCollider& WsReq::serialized_completely_static_traps(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsReq.serialized_completely_static_traps)
  return serialized_completely_static_traps_.Get(index);
}
inline ::shared::SerializedCompletelyStaticTrapCollider* WsReq::add_serialized_completely_static_traps() {
  // @@protoc_insertion_point(field_add:shared.WsReq.serialized_completely_static_traps)
  return serialized_completely_static_traps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTrapCollider >&
WsReq::serialized_completely_static_traps() const {
  // @@protoc_insertion_point(field_list:shared.WsReq.serialized_completely_static_traps)
  return serialized_completely_static_traps_;
}

// repeated .shared.SerializedCompletelyStaticTriggerCollider serialized_static_triggers = 15;
inline int WsReq::serialized_static_triggers_size() const {
  return serialized_static_triggers_.size();
}
inline void WsReq::clear_serialized_static_triggers() {
  serialized_static_triggers_.Clear();
}
inline ::shared::SerializedCompletelyStaticTriggerCollider* WsReq::mutable_serialized_static_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsReq.serialized_static_triggers)
  return serialized_static_triggers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTriggerCollider >*
WsReq::mutable_serialized_static_triggers() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsReq.serialized_static_triggers)
  return &serialized_static_triggers_;
}
inline const ::shared::SerializedCompletelyStaticTriggerCollider& WsReq::serialized_static_triggers(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsReq.serialized_static_triggers)
  return serialized_static_triggers_.Get(index);
}
inline ::shared::SerializedCompletelyStaticTriggerCollider* WsReq::add_serialized_static_triggers() {
  // @@protoc_insertion_point(field_add:shared.WsReq.serialized_static_triggers)
  return serialized_static_triggers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::SerializedCompletelyStaticTriggerCollider >&
WsReq::serialized_static_triggers() const {
  // @@protoc_insertion_point(field_list:shared.WsReq.serialized_static_triggers)
  return serialized_static_triggers_;
}

// .shared.SerializedTrapLocalIdToColliderAttrs serialized_trap_local_id_to_collider_attrs = 16;
inline bool WsReq::has_serialized_trap_local_id_to_collider_attrs() const {
  return this != internal_default_instance() && serialized_trap_local_id_to_collider_attrs_ != nullptr;
}
inline void WsReq::clear_serialized_trap_local_id_to_collider_attrs() {
  if (GetArenaNoVirtual() == nullptr && serialized_trap_local_id_to_collider_attrs_ != nullptr) {
    delete serialized_trap_local_id_to_collider_attrs_;
  }
  serialized_trap_local_id_to_collider_attrs_ = nullptr;
}
inline const ::shared::SerializedTrapLocalIdToColliderAttrs& WsReq::serialized_trap_local_id_to_collider_attrs() const {
  const ::shared::SerializedTrapLocalIdToColliderAttrs* p = serialized_trap_local_id_to_collider_attrs_;
  // @@protoc_insertion_point(field_get:shared.WsReq.serialized_trap_local_id_to_collider_attrs)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SerializedTrapLocalIdToColliderAttrs*>(
      &::shared::_SerializedTrapLocalIdToColliderAttrs_default_instance_);
}
inline ::shared::SerializedTrapLocalIdToColliderAttrs* WsReq::release_serialized_trap_local_id_to_collider_attrs() {
  // @@protoc_insertion_point(field_release:shared.WsReq.serialized_trap_local_id_to_collider_attrs)
  
  ::shared::SerializedTrapLocalIdToColliderAttrs* temp = serialized_trap_local_id_to_collider_attrs_;
  serialized_trap_local_id_to_collider_attrs_ = nullptr;
  return temp;
}
inline ::shared::SerializedTrapLocalIdToColliderAttrs* WsReq::mutable_serialized_trap_local_id_to_collider_attrs() {
  
  if (serialized_trap_local_id_to_collider_attrs_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SerializedTrapLocalIdToColliderAttrs>(GetArenaNoVirtual());
    serialized_trap_local_id_to_collider_attrs_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.WsReq.serialized_trap_local_id_to_collider_attrs)
  return serialized_trap_local_id_to_collider_attrs_;
}
inline void WsReq::set_allocated_serialized_trap_local_id_to_collider_attrs(::shared::SerializedTrapLocalIdToColliderAttrs* serialized_trap_local_id_to_collider_attrs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete serialized_trap_local_id_to_collider_attrs_;
  }
  if (serialized_trap_local_id_to_collider_attrs) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      serialized_trap_local_id_to_collider_attrs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serialized_trap_local_id_to_collider_attrs, submessage_arena);
    }
    
  } else {
    
  }
  serialized_trap_local_id_to_collider_attrs_ = serialized_trap_local_id_to_collider_attrs;
  // @@protoc_insertion_point(field_set_allocated:shared.WsReq.serialized_trap_local_id_to_collider_attrs)
}

// .shared.SerializedTriggerEditorIdToLocalId serialized_trigger_editor_id_to_local_id = 18;
inline bool WsReq::has_serialized_trigger_editor_id_to_local_id() const {
  return this != internal_default_instance() && serialized_trigger_editor_id_to_local_id_ != nullptr;
}
inline void WsReq::clear_serialized_trigger_editor_id_to_local_id() {
  if (GetArenaNoVirtual() == nullptr && serialized_trigger_editor_id_to_local_id_ != nullptr) {
    delete serialized_trigger_editor_id_to_local_id_;
  }
  serialized_trigger_editor_id_to_local_id_ = nullptr;
}
inline const ::shared::SerializedTriggerEditorIdToLocalId& WsReq::serialized_trigger_editor_id_to_local_id() const {
  const ::shared::SerializedTriggerEditorIdToLocalId* p = serialized_trigger_editor_id_to_local_id_;
  // @@protoc_insertion_point(field_get:shared.WsReq.serialized_trigger_editor_id_to_local_id)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SerializedTriggerEditorIdToLocalId*>(
      &::shared::_SerializedTriggerEditorIdToLocalId_default_instance_);
}
inline ::shared::SerializedTriggerEditorIdToLocalId* WsReq::release_serialized_trigger_editor_id_to_local_id() {
  // @@protoc_insertion_point(field_release:shared.WsReq.serialized_trigger_editor_id_to_local_id)
  
  ::shared::SerializedTriggerEditorIdToLocalId* temp = serialized_trigger_editor_id_to_local_id_;
  serialized_trigger_editor_id_to_local_id_ = nullptr;
  return temp;
}
inline ::shared::SerializedTriggerEditorIdToLocalId* WsReq::mutable_serialized_trigger_editor_id_to_local_id() {
  
  if (serialized_trigger_editor_id_to_local_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SerializedTriggerEditorIdToLocalId>(GetArenaNoVirtual());
    serialized_trigger_editor_id_to_local_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.WsReq.serialized_trigger_editor_id_to_local_id)
  return serialized_trigger_editor_id_to_local_id_;
}
inline void WsReq::set_allocated_serialized_trigger_editor_id_to_local_id(::shared::SerializedTriggerEditorIdToLocalId* serialized_trigger_editor_id_to_local_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete serialized_trigger_editor_id_to_local_id_;
  }
  if (serialized_trigger_editor_id_to_local_id) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      serialized_trigger_editor_id_to_local_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serialized_trigger_editor_id_to_local_id, submessage_arena);
    }
    
  } else {
    
  }
  serialized_trigger_editor_id_to_local_id_ = serialized_trigger_editor_id_to_local_id;
  // @@protoc_insertion_point(field_set_allocated:shared.WsReq.serialized_trigger_editor_id_to_local_id)
}

// uint32 seq_no = 19;
inline void WsReq::clear_seq_no() {
  seq_no_ = 0u;
}
inline ::google::protobuf::uint32 WsReq::seq_no() const {
  // @@protoc_insertion_point(field_get:shared.WsReq.seq_no)
  return seq_no_;
}
inline void WsReq::set_seq_no(::google::protobuf::uint32 value) {
  
  seq_no_ = value;
  // @@protoc_insertion_point(field_set:shared.WsReq.seq_no)
}

// -------------------------------------------------------------------

// InputBufferSnapshot

// int32 ref_render_frame_id = 1;
inline void InputBufferSnapshot::clear_ref_render_frame_id() {
  ref_render_frame_id_ = 0;
}
inline ::google::protobuf::int32 InputBufferSnapshot::ref_render_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.InputBufferSnapshot.ref_render_frame_id)
  return ref_render_frame_id_;
}
inline void InputBufferSnapshot::set_ref_render_frame_id(::google::protobuf::int32 value) {
  
  ref_render_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InputBufferSnapshot.ref_render_frame_id)
}

// uint64 unconfirmed_mask = 2;
inline void InputBufferSnapshot::clear_unconfirmed_mask() {
  unconfirmed_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InputBufferSnapshot::unconfirmed_mask() const {
  // @@protoc_insertion_point(field_get:shared.InputBufferSnapshot.unconfirmed_mask)
  return unconfirmed_mask_;
}
inline void InputBufferSnapshot::set_unconfirmed_mask(::google::protobuf::uint64 value) {
  
  unconfirmed_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.InputBufferSnapshot.unconfirmed_mask)
}

// repeated .shared.InputFrameDownsync to_send_input_frame_downsyncs = 3;
inline int InputBufferSnapshot::to_send_input_frame_downsyncs_size() const {
  return to_send_input_frame_downsyncs_.size();
}
inline void InputBufferSnapshot::clear_to_send_input_frame_downsyncs() {
  to_send_input_frame_downsyncs_.Clear();
}
inline ::shared::InputFrameDownsync* InputBufferSnapshot::mutable_to_send_input_frame_downsyncs(int index) {
  // @@protoc_insertion_point(field_mutable:shared.InputBufferSnapshot.to_send_input_frame_downsyncs)
  return to_send_input_frame_downsyncs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >*
InputBufferSnapshot::mutable_to_send_input_frame_downsyncs() {
  // @@protoc_insertion_point(field_mutable_list:shared.InputBufferSnapshot.to_send_input_frame_downsyncs)
  return &to_send_input_frame_downsyncs_;
}
inline const ::shared::InputFrameDownsync& InputBufferSnapshot::to_send_input_frame_downsyncs(int index) const {
  // @@protoc_insertion_point(field_get:shared.InputBufferSnapshot.to_send_input_frame_downsyncs)
  return to_send_input_frame_downsyncs_.Get(index);
}
inline ::shared::InputFrameDownsync* InputBufferSnapshot::add_to_send_input_frame_downsyncs() {
  // @@protoc_insertion_point(field_add:shared.InputBufferSnapshot.to_send_input_frame_downsyncs)
  return to_send_input_frame_downsyncs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >&
InputBufferSnapshot::to_send_input_frame_downsyncs() const {
  // @@protoc_insertion_point(field_list:shared.InputBufferSnapshot.to_send_input_frame_downsyncs)
  return to_send_input_frame_downsyncs_;
}

// bool should_force_resync = 4;
inline void InputBufferSnapshot::clear_should_force_resync() {
  should_force_resync_ = false;
}
inline bool InputBufferSnapshot::should_force_resync() const {
  // @@protoc_insertion_point(field_get:shared.InputBufferSnapshot.should_force_resync)
  return should_force_resync_;
}
inline void InputBufferSnapshot::set_should_force_resync(bool value) {
  
  should_force_resync_ = value;
  // @@protoc_insertion_point(field_set:shared.InputBufferSnapshot.should_force_resync)
}

// int32 peer_join_index = 5;
inline void InputBufferSnapshot::clear_peer_join_index() {
  peer_join_index_ = 0;
}
inline ::google::protobuf::int32 InputBufferSnapshot::peer_join_index() const {
  // @@protoc_insertion_point(field_get:shared.InputBufferSnapshot.peer_join_index)
  return peer_join_index_;
}
inline void InputBufferSnapshot::set_peer_join_index(::google::protobuf::int32 value) {
  
  peer_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.InputBufferSnapshot.peer_join_index)
}

// -------------------------------------------------------------------

// PatrolCue

// int32 id = 1;
inline void PatrolCue::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 PatrolCue::id() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.id)
  return id_;
}
inline void PatrolCue::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.id)
}

// uint64 fl_act = 2;
inline void PatrolCue::clear_fl_act() {
  fl_act_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PatrolCue::fl_act() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fl_act)
  return fl_act_;
}
inline void PatrolCue::set_fl_act(::google::protobuf::uint64 value) {
  
  fl_act_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fl_act)
}

// uint64 fr_act = 3;
inline void PatrolCue::clear_fr_act() {
  fr_act_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PatrolCue::fr_act() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fr_act)
  return fr_act_;
}
inline void PatrolCue::set_fr_act(::google::protobuf::uint64 value) {
  
  fr_act_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fr_act)
}

// int32 fl_capture_frames = 4;
inline void PatrolCue::clear_fl_capture_frames() {
  fl_capture_frames_ = 0;
}
inline ::google::protobuf::int32 PatrolCue::fl_capture_frames() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fl_capture_frames)
  return fl_capture_frames_;
}
inline void PatrolCue::set_fl_capture_frames(::google::protobuf::int32 value) {
  
  fl_capture_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fl_capture_frames)
}

// int32 fr_capture_frames = 5;
inline void PatrolCue::clear_fr_capture_frames() {
  fr_capture_frames_ = 0;
}
inline ::google::protobuf::int32 PatrolCue::fr_capture_frames() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fr_capture_frames)
  return fr_capture_frames_;
}
inline void PatrolCue::set_fr_capture_frames(::google::protobuf::int32 value) {
  
  fr_capture_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fr_capture_frames)
}

// uint64 fd_act = 6;
inline void PatrolCue::clear_fd_act() {
  fd_act_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PatrolCue::fd_act() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fd_act)
  return fd_act_;
}
inline void PatrolCue::set_fd_act(::google::protobuf::uint64 value) {
  
  fd_act_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fd_act)
}

// uint64 fu_act = 7;
inline void PatrolCue::clear_fu_act() {
  fu_act_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PatrolCue::fu_act() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fu_act)
  return fu_act_;
}
inline void PatrolCue::set_fu_act(::google::protobuf::uint64 value) {
  
  fu_act_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fu_act)
}

// int32 fd_capture_frames = 8;
inline void PatrolCue::clear_fd_capture_frames() {
  fd_capture_frames_ = 0;
}
inline ::google::protobuf::int32 PatrolCue::fd_capture_frames() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fd_capture_frames)
  return fd_capture_frames_;
}
inline void PatrolCue::set_fd_capture_frames(::google::protobuf::int32 value) {
  
  fd_capture_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fd_capture_frames)
}

// int32 fu_capture_frames = 9;
inline void PatrolCue::clear_fu_capture_frames() {
  fu_capture_frames_ = 0;
}
inline ::google::protobuf::int32 PatrolCue::fu_capture_frames() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.fu_capture_frames)
  return fu_capture_frames_;
}
inline void PatrolCue::set_fu_capture_frames(::google::protobuf::int32 value) {
  
  fu_capture_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.fu_capture_frames)
}

// uint64 collision_type_mask = 1029;
inline void PatrolCue::clear_collision_type_mask() {
  collision_type_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PatrolCue::collision_type_mask() const {
  // @@protoc_insertion_point(field_get:shared.PatrolCue.collision_type_mask)
  return collision_type_mask_;
}
inline void PatrolCue::set_collision_type_mask(::google::protobuf::uint64 value) {
  
  collision_type_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.PatrolCue.collision_type_mask)
}

// -------------------------------------------------------------------

// VfxConfig

// int32 species_id = 1;
inline void VfxConfig::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 VfxConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.species_id)
  return species_id_;
}
inline void VfxConfig::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.species_id)
}

// .shared.VfxMotionType motion_type = 2;
inline void VfxConfig::clear_motion_type() {
  motion_type_ = 0;
}
inline ::shared::VfxMotionType VfxConfig::motion_type() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.motion_type)
  return static_cast< ::shared::VfxMotionType >(motion_type_);
}
inline void VfxConfig::set_motion_type(::shared::VfxMotionType value) {
  
  motion_type_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.motion_type)
}

// .shared.VfxDurationType duration_type = 3;
inline void VfxConfig::clear_duration_type() {
  duration_type_ = 0;
}
inline ::shared::VfxDurationType VfxConfig::duration_type() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.duration_type)
  return static_cast< ::shared::VfxDurationType >(duration_type_);
}
inline void VfxConfig::set_duration_type(::shared::VfxDurationType value) {
  
  duration_type_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.duration_type)
}

// bool on_character = 4;
inline void VfxConfig::clear_on_character() {
  on_character_ = false;
}
inline bool VfxConfig::on_character() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.on_character)
  return on_character_;
}
inline void VfxConfig::set_on_character(bool value) {
  
  on_character_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.on_character)
}

// bool on_bullet = 5;
inline void VfxConfig::clear_on_bullet() {
  on_bullet_ = false;
}
inline bool VfxConfig::on_bullet() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.on_bullet)
  return on_bullet_;
}
inline void VfxConfig::set_on_bullet(bool value) {
  
  on_bullet_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.on_bullet)
}

// bool on_trap = 6;
inline void VfxConfig::clear_on_trap() {
  on_trap_ = false;
}
inline bool VfxConfig::on_trap() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.on_trap)
  return on_trap_;
}
inline void VfxConfig::set_on_trap(bool value) {
  
  on_trap_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.on_trap)
}

// bool use_pixelated_ver = 7;
inline void VfxConfig::clear_use_pixelated_ver() {
  use_pixelated_ver_ = false;
}
inline bool VfxConfig::use_pixelated_ver() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.use_pixelated_ver)
  return use_pixelated_ver_;
}
inline void VfxConfig::set_use_pixelated_ver(bool value) {
  
  use_pixelated_ver_ = value;
  // @@protoc_insertion_point(field_set:shared.VfxConfig.use_pixelated_ver)
}

// string name = 1024;
inline void VfxConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VfxConfig::name() const {
  // @@protoc_insertion_point(field_get:shared.VfxConfig.name)
  return name_.GetNoArena();
}
inline void VfxConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.VfxConfig.name)
}
#if LANG_CXX11
inline void VfxConfig::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.VfxConfig.name)
}
#endif
inline void VfxConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.VfxConfig.name)
}
inline void VfxConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.VfxConfig.name)
}
inline ::std::string* VfxConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.VfxConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VfxConfig::release_name() {
  // @@protoc_insertion_point(field_release:shared.VfxConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VfxConfig::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:shared.VfxConfig.name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BulletConfig

// int32 startup_frames = 1;
inline void BulletConfig::clear_startup_frames() {
  startup_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::startup_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.startup_frames)
  return startup_frames_;
}
inline void BulletConfig::set_startup_frames(::google::protobuf::int32 value) {
  
  startup_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.startup_frames)
}

// int32 cancellable_st_frame = 2;
inline void BulletConfig::clear_cancellable_st_frame() {
  cancellable_st_frame_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::cancellable_st_frame() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.cancellable_st_frame)
  return cancellable_st_frame_;
}
inline void BulletConfig::set_cancellable_st_frame(::google::protobuf::int32 value) {
  
  cancellable_st_frame_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.cancellable_st_frame)
}

// int32 cancellable_ed_frame = 3;
inline void BulletConfig::clear_cancellable_ed_frame() {
  cancellable_ed_frame_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::cancellable_ed_frame() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.cancellable_ed_frame)
  return cancellable_ed_frame_;
}
inline void BulletConfig::set_cancellable_ed_frame(::google::protobuf::int32 value) {
  
  cancellable_ed_frame_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.cancellable_ed_frame)
}

// int32 active_frames = 4;
inline void BulletConfig::clear_active_frames() {
  active_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::active_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.active_frames)
  return active_frames_;
}
inline void BulletConfig::set_active_frames(::google::protobuf::int32 value) {
  
  active_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.active_frames)
}

// int32 hit_stun_frames = 5;
inline void BulletConfig::clear_hit_stun_frames() {
  hit_stun_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::hit_stun_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hit_stun_frames)
  return hit_stun_frames_;
}
inline void BulletConfig::set_hit_stun_frames(::google::protobuf::int32 value) {
  
  hit_stun_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hit_stun_frames)
}

// int32 block_stun_frames = 6;
inline void BulletConfig::clear_block_stun_frames() {
  block_stun_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::block_stun_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.block_stun_frames)
  return block_stun_frames_;
}
inline void BulletConfig::set_block_stun_frames(::google::protobuf::int32 value) {
  
  block_stun_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.block_stun_frames)
}

// float pushback_vel_x = 7;
inline void BulletConfig::clear_pushback_vel_x() {
  pushback_vel_x_ = 0;
}
inline float BulletConfig::pushback_vel_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.pushback_vel_x)
  return pushback_vel_x_;
}
inline void BulletConfig::set_pushback_vel_x(float value) {
  
  pushback_vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.pushback_vel_x)
}

// float pushback_vel_y = 8;
inline void BulletConfig::clear_pushback_vel_y() {
  pushback_vel_y_ = 0;
}
inline float BulletConfig::pushback_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.pushback_vel_y)
  return pushback_vel_y_;
}
inline void BulletConfig::set_pushback_vel_y(float value) {
  
  pushback_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.pushback_vel_y)
}

// int32 damage = 9;
inline void BulletConfig::clear_damage() {
  damage_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::damage() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.damage)
  return damage_;
}
inline void BulletConfig::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.damage)
}

// float self_lock_vel_x = 10;
inline void BulletConfig::clear_self_lock_vel_x() {
  self_lock_vel_x_ = 0;
}
inline float BulletConfig::self_lock_vel_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.self_lock_vel_x)
  return self_lock_vel_x_;
}
inline void BulletConfig::set_self_lock_vel_x(float value) {
  
  self_lock_vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.self_lock_vel_x)
}

// float self_lock_vel_y = 11;
inline void BulletConfig::clear_self_lock_vel_y() {
  self_lock_vel_y_ = 0;
}
inline float BulletConfig::self_lock_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.self_lock_vel_y)
  return self_lock_vel_y_;
}
inline void BulletConfig::set_self_lock_vel_y(float value) {
  
  self_lock_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.self_lock_vel_y)
}

// float hitbox_offset_x = 12;
inline void BulletConfig::clear_hitbox_offset_x() {
  hitbox_offset_x_ = 0;
}
inline float BulletConfig::hitbox_offset_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hitbox_offset_x)
  return hitbox_offset_x_;
}
inline void BulletConfig::set_hitbox_offset_x(float value) {
  
  hitbox_offset_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hitbox_offset_x)
}

// float hitbox_offset_y = 13;
inline void BulletConfig::clear_hitbox_offset_y() {
  hitbox_offset_y_ = 0;
}
inline float BulletConfig::hitbox_offset_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hitbox_offset_y)
  return hitbox_offset_y_;
}
inline void BulletConfig::set_hitbox_offset_y(float value) {
  
  hitbox_offset_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hitbox_offset_y)
}

// float hitbox_size_x = 14;
inline void BulletConfig::clear_hitbox_size_x() {
  hitbox_size_x_ = 0;
}
inline float BulletConfig::hitbox_size_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hitbox_size_x)
  return hitbox_size_x_;
}
inline void BulletConfig::set_hitbox_size_x(float value) {
  
  hitbox_size_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hitbox_size_x)
}

// float hitbox_size_y = 15;
inline void BulletConfig::clear_hitbox_size_y() {
  hitbox_size_y_ = 0;
}
inline float BulletConfig::hitbox_size_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hitbox_size_y)
  return hitbox_size_y_;
}
inline void BulletConfig::set_hitbox_size_y(float value) {
  
  hitbox_size_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hitbox_size_y)
}

// bool blow_up = 16;
inline void BulletConfig::clear_blow_up() {
  blow_up_ = false;
}
inline bool BulletConfig::blow_up() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.blow_up)
  return blow_up_;
}
inline void BulletConfig::set_blow_up(bool value) {
  
  blow_up_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.blow_up)
}

// int32 species_id = 17;
inline void BulletConfig::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.species_id)
  return species_id_;
}
inline void BulletConfig::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.species_id)
}

// int32 explosion_frames = 18;
inline void BulletConfig::clear_explosion_frames() {
  explosion_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::explosion_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_frames)
  return explosion_frames_;
}
inline void BulletConfig::set_explosion_frames(::google::protobuf::int32 value) {
  
  explosion_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_frames)
}

// .shared.BulletType b_type = 19;
inline void BulletConfig::clear_b_type() {
  b_type_ = 0;
}
inline ::shared::BulletType BulletConfig::b_type() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.b_type)
  return static_cast< ::shared::BulletType >(b_type_);
}
inline void BulletConfig::set_b_type(::shared::BulletType value) {
  
  b_type_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.b_type)
}

// .shared.MultiHitType mh_type = 20;
inline void BulletConfig::clear_mh_type() {
  mh_type_ = 0;
}
inline ::shared::MultiHitType BulletConfig::mh_type() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_type)
  return static_cast< ::shared::MultiHitType >(mh_type_);
}
inline void BulletConfig::set_mh_type(::shared::MultiHitType value) {
  
  mh_type_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_type)
}

// uint32 simultaneous_multi_hit_cnt = 21;
inline void BulletConfig::clear_simultaneous_multi_hit_cnt() {
  simultaneous_multi_hit_cnt_ = 0u;
}
inline ::google::protobuf::uint32 BulletConfig::simultaneous_multi_hit_cnt() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.simultaneous_multi_hit_cnt)
  return simultaneous_multi_hit_cnt_;
}
inline void BulletConfig::set_simultaneous_multi_hit_cnt(::google::protobuf::uint32 value) {
  
  simultaneous_multi_hit_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.simultaneous_multi_hit_cnt)
}

// float speed = 22;
inline void BulletConfig::clear_speed() {
  speed_ = 0;
}
inline float BulletConfig::speed() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.speed)
  return speed_;
}
inline void BulletConfig::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.speed)
}

// int32 dir_x = 23;
inline void BulletConfig::clear_dir_x() {
  dir_x_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::dir_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.dir_x)
  return dir_x_;
}
inline void BulletConfig::set_dir_x(::google::protobuf::int32 value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.dir_x)
}

// int32 dir_y = 24;
inline void BulletConfig::clear_dir_y() {
  dir_y_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::dir_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.dir_y)
  return dir_y_;
}
inline void BulletConfig::set_dir_y(::google::protobuf::int32 value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.dir_y)
}

// map<int32, uint32> cancel_transit = 25;
inline int BulletConfig::cancel_transit_size() const {
  return cancel_transit_.size();
}
inline void BulletConfig::clear_cancel_transit() {
  cancel_transit_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint32 >&
BulletConfig::cancel_transit() const {
  // @@protoc_insertion_point(field_map:shared.BulletConfig.cancel_transit)
  return cancel_transit_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::uint32 >*
BulletConfig::mutable_cancel_transit() {
  // @@protoc_insertion_point(field_mutable_map:shared.BulletConfig.cancel_transit)
  return cancel_transit_.MutableMap();
}

// int32 repeat_quota = 26;
inline void BulletConfig::clear_repeat_quota() {
  repeat_quota_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::repeat_quota() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.repeat_quota)
  return repeat_quota_;
}
inline void BulletConfig::set_repeat_quota(::google::protobuf::int32 value) {
  
  repeat_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.repeat_quota)
}

// int32 active_vfx_species_id = 27;
inline void BulletConfig::clear_active_vfx_species_id() {
  active_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::active_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.active_vfx_species_id)
  return active_vfx_species_id_;
}
inline void BulletConfig::set_active_vfx_species_id(::google::protobuf::int32 value) {
  
  active_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.active_vfx_species_id)
}

// int32 explosion_vfx_species_id = 28;
inline void BulletConfig::clear_explosion_vfx_species_id() {
  explosion_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::explosion_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_vfx_species_id)
  return explosion_vfx_species_id_;
}
inline void BulletConfig::set_explosion_vfx_species_id(::google::protobuf::int32 value) {
  
  explosion_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_vfx_species_id)
}

// bool allows_walking = 29;
inline void BulletConfig::clear_allows_walking() {
  allows_walking_ = false;
}
inline bool BulletConfig::allows_walking() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.allows_walking)
  return allows_walking_;
}
inline void BulletConfig::set_allows_walking(bool value) {
  
  allows_walking_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.allows_walking)
}

// bool allows_crouching = 30;
inline void BulletConfig::clear_allows_crouching() {
  allows_crouching_ = false;
}
inline bool BulletConfig::allows_crouching() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.allows_crouching)
  return allows_crouching_;
}
inline void BulletConfig::set_allows_crouching(bool value) {
  
  allows_crouching_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.allows_crouching)
}

// int32 hardness = 31;
inline void BulletConfig::clear_hardness() {
  hardness_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::hardness() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hardness)
  return hardness_;
}
inline void BulletConfig::set_hardness(::google::protobuf::int32 value) {
  
  hardness_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hardness)
}

// int32 startup_invinsible_frames = 32;
inline void BulletConfig::clear_startup_invinsible_frames() {
  startup_invinsible_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::startup_invinsible_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.startup_invinsible_frames)
  return startup_invinsible_frames_;
}
inline void BulletConfig::set_startup_invinsible_frames(::google::protobuf::int32 value) {
  
  startup_invinsible_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.startup_invinsible_frames)
}

// int32 hit_invinsible_frames = 33;
inline void BulletConfig::clear_hit_invinsible_frames() {
  hit_invinsible_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::hit_invinsible_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hit_invinsible_frames)
  return hit_invinsible_frames_;
}
inline void BulletConfig::set_hit_invinsible_frames(::google::protobuf::int32 value) {
  
  hit_invinsible_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hit_invinsible_frames)
}

// int32 explosion_species_id = 34;
inline void BulletConfig::clear_explosion_species_id() {
  explosion_species_id_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::explosion_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_species_id)
  return explosion_species_id_;
}
inline void BulletConfig::set_explosion_species_id(::google::protobuf::int32 value) {
  
  explosion_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_species_id)
}

// int32 perp_acc_mag = 35;
inline void BulletConfig::clear_perp_acc_mag() {
  perp_acc_mag_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::perp_acc_mag() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.perp_acc_mag)
  return perp_acc_mag_;
}
inline void BulletConfig::set_perp_acc_mag(::google::protobuf::int32 value) {
  
  perp_acc_mag_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.perp_acc_mag)
}

// bool delay_self_vel_to_active = 36;
inline void BulletConfig::clear_delay_self_vel_to_active() {
  delay_self_vel_to_active_ = false;
}
inline bool BulletConfig::delay_self_vel_to_active() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.delay_self_vel_to_active)
  return delay_self_vel_to_active_;
}
inline void BulletConfig::set_delay_self_vel_to_active(bool value) {
  
  delay_self_vel_to_active_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.delay_self_vel_to_active)
}

// float speed_if_not_hit = 37;
inline void BulletConfig::clear_speed_if_not_hit() {
  speed_if_not_hit_ = 0;
}
inline float BulletConfig::speed_if_not_hit() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.speed_if_not_hit)
  return speed_if_not_hit_;
}
inline void BulletConfig::set_speed_if_not_hit(float value) {
  
  speed_if_not_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.speed_if_not_hit)
}

// bool omit_soft_pushback = 38;
inline void BulletConfig::clear_omit_soft_pushback() {
  omit_soft_pushback_ = false;
}
inline bool BulletConfig::omit_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.omit_soft_pushback)
  return omit_soft_pushback_;
}
inline void BulletConfig::set_omit_soft_pushback(bool value) {
  
  omit_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.omit_soft_pushback)
}

// float hitbox_size_inc_x = 39;
inline void BulletConfig::clear_hitbox_size_inc_x() {
  hitbox_size_inc_x_ = 0;
}
inline float BulletConfig::hitbox_size_inc_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hitbox_size_inc_x)
  return hitbox_size_inc_x_;
}
inline void BulletConfig::set_hitbox_size_inc_x(float value) {
  
  hitbox_size_inc_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hitbox_size_inc_x)
}

// float hitbox_size_inc_y = 40;
inline void BulletConfig::clear_hitbox_size_inc_y() {
  hitbox_size_inc_y_ = 0;
}
inline float BulletConfig::hitbox_size_inc_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hitbox_size_inc_y)
  return hitbox_size_inc_y_;
}
inline void BulletConfig::set_hitbox_size_inc_y(float value) {
  
  hitbox_size_inc_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hitbox_size_inc_y)
}

// bool remains_upon_hit = 41;
inline void BulletConfig::clear_remains_upon_hit() {
  remains_upon_hit_ = false;
}
inline bool BulletConfig::remains_upon_hit() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.remains_upon_hit)
  return remains_upon_hit_;
}
inline void BulletConfig::set_remains_upon_hit(bool value) {
  
  remains_upon_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.remains_upon_hit)
}

// bool rotates_along_velocity = 42;
inline void BulletConfig::clear_rotates_along_velocity() {
  rotates_along_velocity_ = false;
}
inline bool BulletConfig::rotates_along_velocity() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.rotates_along_velocity)
  return rotates_along_velocity_;
}
inline void BulletConfig::set_rotates_along_velocity(bool value) {
  
  rotates_along_velocity_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.rotates_along_velocity)
}

// int32 default_hard_pushback_bounce_quota = 43;
inline void BulletConfig::clear_default_hard_pushback_bounce_quota() {
  default_hard_pushback_bounce_quota_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::default_hard_pushback_bounce_quota() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.default_hard_pushback_bounce_quota)
  return default_hard_pushback_bounce_quota_;
}
inline void BulletConfig::set_default_hard_pushback_bounce_quota(::google::protobuf::int32 value) {
  
  default_hard_pushback_bounce_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.default_hard_pushback_bounce_quota)
}

// float hard_pushback_bounce_norm_factor = 44;
inline void BulletConfig::clear_hard_pushback_bounce_norm_factor() {
  hard_pushback_bounce_norm_factor_ = 0;
}
inline float BulletConfig::hard_pushback_bounce_norm_factor() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hard_pushback_bounce_norm_factor)
  return hard_pushback_bounce_norm_factor_;
}
inline void BulletConfig::set_hard_pushback_bounce_norm_factor(float value) {
  
  hard_pushback_bounce_norm_factor_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hard_pushback_bounce_norm_factor)
}

// float hard_pushback_bounce_sheer_factor = 45;
inline void BulletConfig::clear_hard_pushback_bounce_sheer_factor() {
  hard_pushback_bounce_sheer_factor_ = 0;
}
inline float BulletConfig::hard_pushback_bounce_sheer_factor() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hard_pushback_bounce_sheer_factor)
  return hard_pushback_bounce_sheer_factor_;
}
inline void BulletConfig::set_hard_pushback_bounce_sheer_factor(float value) {
  
  hard_pushback_bounce_sheer_factor_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hard_pushback_bounce_sheer_factor)
}

// bool is_pixelated_active_vfx = 46;
inline void BulletConfig::clear_is_pixelated_active_vfx() {
  is_pixelated_active_vfx_ = false;
}
inline bool BulletConfig::is_pixelated_active_vfx() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.is_pixelated_active_vfx)
  return is_pixelated_active_vfx_;
}
inline void BulletConfig::set_is_pixelated_active_vfx(bool value) {
  
  is_pixelated_active_vfx_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.is_pixelated_active_vfx)
}

// bool is_pixelated_explostion_vfx = 47;
inline void BulletConfig::clear_is_pixelated_explostion_vfx() {
  is_pixelated_explostion_vfx_ = false;
}
inline bool BulletConfig::is_pixelated_explostion_vfx() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.is_pixelated_explostion_vfx)
  return is_pixelated_explostion_vfx_;
}
inline void BulletConfig::set_is_pixelated_explostion_vfx(bool value) {
  
  is_pixelated_explostion_vfx_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.is_pixelated_explostion_vfx)
}

// bool mh_vanish_on_melee_hit = 48;
inline void BulletConfig::clear_mh_vanish_on_melee_hit() {
  mh_vanish_on_melee_hit_ = false;
}
inline bool BulletConfig::mh_vanish_on_melee_hit() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_vanish_on_melee_hit)
  return mh_vanish_on_melee_hit_;
}
inline void BulletConfig::set_mh_vanish_on_melee_hit(bool value) {
  
  mh_vanish_on_melee_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_vanish_on_melee_hit)
}

// float down_slope_primer_vel_y = 49;
inline void BulletConfig::clear_down_slope_primer_vel_y() {
  down_slope_primer_vel_y_ = 0;
}
inline float BulletConfig::down_slope_primer_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.down_slope_primer_vel_y)
  return down_slope_primer_vel_y_;
}
inline void BulletConfig::set_down_slope_primer_vel_y(float value) {
  
  down_slope_primer_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.down_slope_primer_vel_y)
}

// bool mh_updates_origin_pos = 50;
inline void BulletConfig::clear_mh_updates_origin_pos() {
  mh_updates_origin_pos_ = false;
}
inline bool BulletConfig::mh_updates_origin_pos() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_updates_origin_pos)
  return mh_updates_origin_pos_;
}
inline void BulletConfig::set_mh_updates_origin_pos(bool value) {
  
  mh_updates_origin_pos_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_updates_origin_pos)
}

// bool beam_collision = 51;
inline void BulletConfig::clear_beam_collision() {
  beam_collision_ = false;
}
inline bool BulletConfig::beam_collision() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.beam_collision)
  return beam_collision_;
}
inline void BulletConfig::set_beam_collision(bool value) {
  
  beam_collision_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.beam_collision)
}

// float angular_frame_vel_cos = 52;
inline void BulletConfig::clear_angular_frame_vel_cos() {
  angular_frame_vel_cos_ = 0;
}
inline float BulletConfig::angular_frame_vel_cos() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.angular_frame_vel_cos)
  return angular_frame_vel_cos_;
}
inline void BulletConfig::set_angular_frame_vel_cos(float value) {
  
  angular_frame_vel_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.angular_frame_vel_cos)
}

// float angular_frame_vel_sin = 53;
inline void BulletConfig::clear_angular_frame_vel_sin() {
  angular_frame_vel_sin_ = 0;
}
inline float BulletConfig::angular_frame_vel_sin() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.angular_frame_vel_sin)
  return angular_frame_vel_sin_;
}
inline void BulletConfig::set_angular_frame_vel_sin(float value) {
  
  angular_frame_vel_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.angular_frame_vel_sin)
}

// float vision_offset_x = 54;
inline void BulletConfig::clear_vision_offset_x() {
  vision_offset_x_ = 0;
}
inline float BulletConfig::vision_offset_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.vision_offset_x)
  return vision_offset_x_;
}
inline void BulletConfig::set_vision_offset_x(float value) {
  
  vision_offset_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.vision_offset_x)
}

// float vision_offset_y = 55;
inline void BulletConfig::clear_vision_offset_y() {
  vision_offset_y_ = 0;
}
inline float BulletConfig::vision_offset_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.vision_offset_y)
  return vision_offset_y_;
}
inline void BulletConfig::set_vision_offset_y(float value) {
  
  vision_offset_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.vision_offset_y)
}

// float vision_size_x = 56;
inline void BulletConfig::clear_vision_size_x() {
  vision_size_x_ = 0;
}
inline float BulletConfig::vision_size_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.vision_size_x)
  return vision_size_x_;
}
inline void BulletConfig::set_vision_size_x(float value) {
  
  vision_size_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.vision_size_x)
}

// float vision_size_y = 57;
inline void BulletConfig::clear_vision_size_y() {
  vision_size_y_ = 0;
}
inline float BulletConfig::vision_size_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.vision_size_y)
  return vision_size_y_;
}
inline void BulletConfig::set_vision_size_y(float value) {
  
  vision_size_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.vision_size_y)
}

// int32 self_lock_vel_yWhen_flying = 58;
inline void BulletConfig::clear_self_lock_vel_ywhen_flying() {
  self_lock_vel_ywhen_flying_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::self_lock_vel_ywhen_flying() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.self_lock_vel_yWhen_flying)
  return self_lock_vel_ywhen_flying_;
}
inline void BulletConfig::set_self_lock_vel_ywhen_flying(::google::protobuf::int32 value) {
  
  self_lock_vel_ywhen_flying_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.self_lock_vel_yWhen_flying)
}

// uint32 elemental_attrs = 59;
inline void BulletConfig::clear_elemental_attrs() {
  elemental_attrs_ = 0u;
}
inline ::google::protobuf::uint32 BulletConfig::elemental_attrs() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.elemental_attrs)
  return elemental_attrs_;
}
inline void BulletConfig::set_elemental_attrs(::google::protobuf::uint32 value) {
  
  elemental_attrs_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.elemental_attrs)
}

// bool cancellable_by_inventory_slot_c = 60;
inline void BulletConfig::clear_cancellable_by_inventory_slot_c() {
  cancellable_by_inventory_slot_c_ = false;
}
inline bool BulletConfig::cancellable_by_inventory_slot_c() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.cancellable_by_inventory_slot_c)
  return cancellable_by_inventory_slot_c_;
}
inline void BulletConfig::set_cancellable_by_inventory_slot_c(bool value) {
  
  cancellable_by_inventory_slot_c_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.cancellable_by_inventory_slot_c)
}

// bool cancellable_by_inventory_slot_d = 61;
inline void BulletConfig::clear_cancellable_by_inventory_slot_d() {
  cancellable_by_inventory_slot_d_ = false;
}
inline bool BulletConfig::cancellable_by_inventory_slot_d() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.cancellable_by_inventory_slot_d)
  return cancellable_by_inventory_slot_d_;
}
inline void BulletConfig::set_cancellable_by_inventory_slot_d(bool value) {
  
  cancellable_by_inventory_slot_d_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.cancellable_by_inventory_slot_d)
}

// float spin_anchor_x = 62;
inline void BulletConfig::clear_spin_anchor_x() {
  spin_anchor_x_ = 0;
}
inline float BulletConfig::spin_anchor_x() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.spin_anchor_x)
  return spin_anchor_x_;
}
inline void BulletConfig::set_spin_anchor_x(float value) {
  
  spin_anchor_x_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.spin_anchor_x)
}

// float spin_anchor_y = 63;
inline void BulletConfig::clear_spin_anchor_y() {
  spin_anchor_y_ = 0;
}
inline float BulletConfig::spin_anchor_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.spin_anchor_y)
  return spin_anchor_y_;
}
inline void BulletConfig::set_spin_anchor_y(float value) {
  
  spin_anchor_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.spin_anchor_y)
}

// float beam_visual_size_y = 64;
inline void BulletConfig::clear_beam_visual_size_y() {
  beam_visual_size_y_ = 0;
}
inline float BulletConfig::beam_visual_size_y() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.beam_visual_size_y)
  return beam_visual_size_y_;
}
inline void BulletConfig::set_beam_visual_size_y(float value) {
  
  beam_visual_size_y_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.beam_visual_size_y)
}

// bool touch_explosion_bomb_collision = 65;
inline void BulletConfig::clear_touch_explosion_bomb_collision() {
  touch_explosion_bomb_collision_ = false;
}
inline bool BulletConfig::touch_explosion_bomb_collision() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.touch_explosion_bomb_collision)
  return touch_explosion_bomb_collision_;
}
inline void BulletConfig::set_touch_explosion_bomb_collision(bool value) {
  
  touch_explosion_bomb_collision_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.touch_explosion_bomb_collision)
}

// bool air_riding_ground_wave = 66;
inline void BulletConfig::clear_air_riding_ground_wave() {
  air_riding_ground_wave_ = false;
}
inline bool BulletConfig::air_riding_ground_wave() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.air_riding_ground_wave)
  return air_riding_ground_wave_;
}
inline void BulletConfig::set_air_riding_ground_wave(bool value) {
  
  air_riding_ground_wave_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.air_riding_ground_wave)
}

// bool ground_impact_melee_collision = 67;
inline void BulletConfig::clear_ground_impact_melee_collision() {
  ground_impact_melee_collision_ = false;
}
inline bool BulletConfig::ground_impact_melee_collision() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.ground_impact_melee_collision)
  return ground_impact_melee_collision_;
}
inline void BulletConfig::set_ground_impact_melee_collision(bool value) {
  
  ground_impact_melee_collision_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.ground_impact_melee_collision)
}

// bool wall_impact_melee_collision = 68;
inline void BulletConfig::clear_wall_impact_melee_collision() {
  wall_impact_melee_collision_ = false;
}
inline bool BulletConfig::wall_impact_melee_collision() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.wall_impact_melee_collision)
  return wall_impact_melee_collision_;
}
inline void BulletConfig::set_wall_impact_melee_collision(bool value) {
  
  wall_impact_melee_collision_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.wall_impact_melee_collision)
}

// bool mh_inherits_spin = 69;
inline void BulletConfig::clear_mh_inherits_spin() {
  mh_inherits_spin_ = false;
}
inline bool BulletConfig::mh_inherits_spin() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_inherits_spin)
  return mh_inherits_spin_;
}
inline void BulletConfig::set_mh_inherits_spin(bool value) {
  
  mh_inherits_spin_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_inherits_spin)
}

// float init_spin_cos = 70;
inline void BulletConfig::clear_init_spin_cos() {
  init_spin_cos_ = 0;
}
inline float BulletConfig::init_spin_cos() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.init_spin_cos)
  return init_spin_cos_;
}
inline void BulletConfig::set_init_spin_cos(float value) {
  
  init_spin_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.init_spin_cos)
}

// float init_spin_sin = 71;
inline void BulletConfig::clear_init_spin_sin() {
  init_spin_sin_ = 0;
}
inline float BulletConfig::init_spin_sin() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.init_spin_sin)
  return init_spin_sin_;
}
inline void BulletConfig::set_init_spin_sin(float value) {
  
  init_spin_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.init_spin_sin)
}

// int32 finishing_frames = 72;
inline void BulletConfig::clear_finishing_frames() {
  finishing_frames_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::finishing_frames() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.finishing_frames)
  return finishing_frames_;
}
inline void BulletConfig::set_finishing_frames(::google::protobuf::int32 value) {
  
  finishing_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.finishing_frames)
}

// bool no_explosion_on_hard_pushback = 73;
inline void BulletConfig::clear_no_explosion_on_hard_pushback() {
  no_explosion_on_hard_pushback_ = false;
}
inline bool BulletConfig::no_explosion_on_hard_pushback() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.no_explosion_on_hard_pushback)
  return no_explosion_on_hard_pushback_;
}
inline void BulletConfig::set_no_explosion_on_hard_pushback(bool value) {
  
  no_explosion_on_hard_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.no_explosion_on_hard_pushback)
}

// int32 startup_vfx_species_id = 74;
inline void BulletConfig::clear_startup_vfx_species_id() {
  startup_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::startup_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.startup_vfx_species_id)
  return startup_vfx_species_id_;
}
inline void BulletConfig::set_startup_vfx_species_id(::google::protobuf::int32 value) {
  
  startup_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.startup_vfx_species_id)
}

// .shared.IfaceCat ifc = 75;
inline void BulletConfig::clear_ifc() {
  ifc_ = 0;
}
inline ::shared::IfaceCat BulletConfig::ifc() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.ifc)
  return static_cast< ::shared::IfaceCat >(ifc_);
}
inline void BulletConfig::set_ifc(::shared::IfaceCat value) {
  
  ifc_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.ifc)
}

// bool reflect_fireball_xIf_not_harder = 76;
inline void BulletConfig::clear_reflect_fireball_xif_not_harder() {
  reflect_fireball_xif_not_harder_ = false;
}
inline bool BulletConfig::reflect_fireball_xif_not_harder() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.reflect_fireball_xIf_not_harder)
  return reflect_fireball_xif_not_harder_;
}
inline void BulletConfig::set_reflect_fireball_xif_not_harder(bool value) {
  
  reflect_fireball_xif_not_harder_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.reflect_fireball_xIf_not_harder)
}

// bool rejects_reflection_from_another_bullet = 77;
inline void BulletConfig::clear_rejects_reflection_from_another_bullet() {
  rejects_reflection_from_another_bullet_ = false;
}
inline bool BulletConfig::rejects_reflection_from_another_bullet() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.rejects_reflection_from_another_bullet)
  return rejects_reflection_from_another_bullet_;
}
inline void BulletConfig::set_rejects_reflection_from_another_bullet(bool value) {
  
  rejects_reflection_from_another_bullet_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.rejects_reflection_from_another_bullet)
}

// bool provides_xHard_pushback = 78;
inline void BulletConfig::clear_provides_xhard_pushback() {
  provides_xhard_pushback_ = false;
}
inline bool BulletConfig::provides_xhard_pushback() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.provides_xHard_pushback)
  return provides_xhard_pushback_;
}
inline void BulletConfig::set_provides_xhard_pushback(bool value) {
  
  provides_xhard_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.provides_xHard_pushback)
}

// bool provides_yHard_pushback_top = 79;
inline void BulletConfig::clear_provides_yhard_pushback_top() {
  provides_yhard_pushback_top_ = false;
}
inline bool BulletConfig::provides_yhard_pushback_top() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.provides_yHard_pushback_top)
  return provides_yhard_pushback_top_;
}
inline void BulletConfig::set_provides_yhard_pushback_top(bool value) {
  
  provides_yhard_pushback_top_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.provides_yHard_pushback_top)
}

// bool provides_yHard_pushback_bottom = 80;
inline void BulletConfig::clear_provides_yhard_pushback_bottom() {
  provides_yhard_pushback_bottom_ = false;
}
inline bool BulletConfig::provides_yhard_pushback_bottom() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.provides_yHard_pushback_bottom)
  return provides_yhard_pushback_bottom_;
}
inline void BulletConfig::set_provides_yhard_pushback_bottom(bool value) {
  
  provides_yhard_pushback_bottom_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.provides_yHard_pushback_bottom)
}

// bool ignore_slope_deceleration = 81;
inline void BulletConfig::clear_ignore_slope_deceleration() {
  ignore_slope_deceleration_ = false;
}
inline bool BulletConfig::ignore_slope_deceleration() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.ignore_slope_deceleration)
  return ignore_slope_deceleration_;
}
inline void BulletConfig::set_ignore_slope_deceleration(bool value) {
  
  ignore_slope_deceleration_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.ignore_slope_deceleration)
}

// bool rotate_offender_with_spin = 82;
inline void BulletConfig::clear_rotate_offender_with_spin() {
  rotate_offender_with_spin_ = false;
}
inline bool BulletConfig::rotate_offender_with_spin() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.rotate_offender_with_spin)
  return rotate_offender_with_spin_;
}
inline void BulletConfig::set_rotate_offender_with_spin(bool value) {
  
  rotate_offender_with_spin_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.rotate_offender_with_spin)
}

// bool mh_not_trigger_on_ch_hit = 83;
inline void BulletConfig::clear_mh_not_trigger_on_ch_hit() {
  mh_not_trigger_on_ch_hit_ = false;
}
inline bool BulletConfig::mh_not_trigger_on_ch_hit() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_not_trigger_on_ch_hit)
  return mh_not_trigger_on_ch_hit_;
}
inline void BulletConfig::set_mh_not_trigger_on_ch_hit(bool value) {
  
  mh_not_trigger_on_ch_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_not_trigger_on_ch_hit)
}

// bool mh_not_trigger_on_harder_bullet_hit = 84;
inline void BulletConfig::clear_mh_not_trigger_on_harder_bullet_hit() {
  mh_not_trigger_on_harder_bullet_hit_ = false;
}
inline bool BulletConfig::mh_not_trigger_on_harder_bullet_hit() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_not_trigger_on_harder_bullet_hit)
  return mh_not_trigger_on_harder_bullet_hit_;
}
inline void BulletConfig::set_mh_not_trigger_on_harder_bullet_hit(bool value) {
  
  mh_not_trigger_on_harder_bullet_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_not_trigger_on_harder_bullet_hit)
}

// bool mh_not_trigger_on_hard_pushback_hit = 85;
inline void BulletConfig::clear_mh_not_trigger_on_hard_pushback_hit() {
  mh_not_trigger_on_hard_pushback_hit_ = false;
}
inline bool BulletConfig::mh_not_trigger_on_hard_pushback_hit() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_not_trigger_on_hard_pushback_hit)
  return mh_not_trigger_on_hard_pushback_hit_;
}
inline void BulletConfig::set_mh_not_trigger_on_hard_pushback_hit(bool value) {
  
  mh_not_trigger_on_hard_pushback_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_not_trigger_on_hard_pushback_hit)
}

// bool hopper_missile = 86;
inline void BulletConfig::clear_hopper_missile() {
  hopper_missile_ = false;
}
inline bool BulletConfig::hopper_missile() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.hopper_missile)
  return hopper_missile_;
}
inline void BulletConfig::set_hopper_missile(bool value) {
  
  hopper_missile_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.hopper_missile)
}

// bool beam_rendering = 87;
inline void BulletConfig::clear_beam_rendering() {
  beam_rendering_ = false;
}
inline bool BulletConfig::beam_rendering() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.beam_rendering)
  return beam_rendering_;
}
inline void BulletConfig::set_beam_rendering(bool value) {
  
  beam_rendering_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.beam_rendering)
}

// uint32 missile_search_interval_pow2Minus1 = 88;
inline void BulletConfig::clear_missile_search_interval_pow2minus1() {
  missile_search_interval_pow2minus1_ = 0u;
}
inline ::google::protobuf::uint32 BulletConfig::missile_search_interval_pow2minus1() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.missile_search_interval_pow2Minus1)
  return missile_search_interval_pow2minus1_;
}
inline void BulletConfig::set_missile_search_interval_pow2minus1(::google::protobuf::uint32 value) {
  
  missile_search_interval_pow2minus1_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.missile_search_interval_pow2Minus1)
}

// bool use_ch_offset_regardless_of_emission_mh = 89;
inline void BulletConfig::clear_use_ch_offset_regardless_of_emission_mh() {
  use_ch_offset_regardless_of_emission_mh_ = false;
}
inline bool BulletConfig::use_ch_offset_regardless_of_emission_mh() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.use_ch_offset_regardless_of_emission_mh)
  return use_ch_offset_regardless_of_emission_mh_;
}
inline void BulletConfig::set_use_ch_offset_regardless_of_emission_mh(bool value) {
  
  use_ch_offset_regardless_of_emission_mh_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.use_ch_offset_regardless_of_emission_mh)
}

// int32 inplace_vanish_explosion_species_id = 90;
inline void BulletConfig::clear_inplace_vanish_explosion_species_id() {
  inplace_vanish_explosion_species_id_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::inplace_vanish_explosion_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.inplace_vanish_explosion_species_id)
  return inplace_vanish_explosion_species_id_;
}
inline void BulletConfig::set_inplace_vanish_explosion_species_id(::google::protobuf::int32 value) {
  
  inplace_vanish_explosion_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.inplace_vanish_explosion_species_id)
}

// int32 anim_looping_rdf_offset = 91;
inline void BulletConfig::clear_anim_looping_rdf_offset() {
  anim_looping_rdf_offset_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::anim_looping_rdf_offset() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.anim_looping_rdf_offset)
  return anim_looping_rdf_offset_;
}
inline void BulletConfig::set_anim_looping_rdf_offset(::google::protobuf::int32 value) {
  
  anim_looping_rdf_offset_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.anim_looping_rdf_offset)
}

// int32 explosion_anim_looping_rdf_offset = 92;
inline void BulletConfig::clear_explosion_anim_looping_rdf_offset() {
  explosion_anim_looping_rdf_offset_ = 0;
}
inline ::google::protobuf::int32 BulletConfig::explosion_anim_looping_rdf_offset() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_anim_looping_rdf_offset)
  return explosion_anim_looping_rdf_offset_;
}
inline void BulletConfig::set_explosion_anim_looping_rdf_offset(::google::protobuf::int32 value) {
  
  explosion_anim_looping_rdf_offset_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_anim_looping_rdf_offset)
}

// float gauge_inc_reduction_ratio = 93;
inline void BulletConfig::clear_gauge_inc_reduction_ratio() {
  gauge_inc_reduction_ratio_ = 0;
}
inline float BulletConfig::gauge_inc_reduction_ratio() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.gauge_inc_reduction_ratio)
  return gauge_inc_reduction_ratio_;
}
inline void BulletConfig::set_gauge_inc_reduction_ratio(float value) {
  
  gauge_inc_reduction_ratio_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.gauge_inc_reduction_ratio)
}

// bool mh_inherits_frames_in_bl_state = 94;
inline void BulletConfig::clear_mh_inherits_frames_in_bl_state() {
  mh_inherits_frames_in_bl_state_ = false;
}
inline bool BulletConfig::mh_inherits_frames_in_bl_state() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.mh_inherits_frames_in_bl_state)
  return mh_inherits_frames_in_bl_state_;
}
inline void BulletConfig::set_mh_inherits_frames_in_bl_state(bool value) {
  
  mh_inherits_frames_in_bl_state_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.mh_inherits_frames_in_bl_state)
}

// uint32 guard_breaker_extra_hit_cnt = 95;
inline void BulletConfig::clear_guard_breaker_extra_hit_cnt() {
  guard_breaker_extra_hit_cnt_ = 0u;
}
inline ::google::protobuf::uint32 BulletConfig::guard_breaker_extra_hit_cnt() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.guard_breaker_extra_hit_cnt)
  return guard_breaker_extra_hit_cnt_;
}
inline void BulletConfig::set_guard_breaker_extra_hit_cnt(::google::protobuf::uint32 value) {
  
  guard_breaker_extra_hit_cnt_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.guard_breaker_extra_hit_cnt)
}

// bool takes_def1As_hard_pushback = 96;
inline void BulletConfig::clear_takes_def1as_hard_pushback() {
  takes_def1as_hard_pushback_ = false;
}
inline bool BulletConfig::takes_def1as_hard_pushback() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.takes_def1As_hard_pushback)
  return takes_def1as_hard_pushback_;
}
inline void BulletConfig::set_takes_def1as_hard_pushback(bool value) {
  
  takes_def1as_hard_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.takes_def1As_hard_pushback)
}

// uint64 collision_type_mask = 1029;
inline void BulletConfig::clear_collision_type_mask() {
  collision_type_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BulletConfig::collision_type_mask() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.collision_type_mask)
  return collision_type_mask_;
}
inline void BulletConfig::set_collision_type_mask(::google::protobuf::uint64 value) {
  
  collision_type_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.collision_type_mask)
}

// bool takes_gravity = 1030;
inline void BulletConfig::clear_takes_gravity() {
  takes_gravity_ = false;
}
inline bool BulletConfig::takes_gravity() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.takes_gravity)
  return takes_gravity_;
}
inline void BulletConfig::set_takes_gravity(bool value) {
  
  takes_gravity_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletConfig.takes_gravity)
}

// .shared.BuffConfig buff_config = 1031;
inline bool BulletConfig::has_buff_config() const {
  return this != internal_default_instance() && buff_config_ != nullptr;
}
inline void BulletConfig::clear_buff_config() {
  if (GetArenaNoVirtual() == nullptr && buff_config_ != nullptr) {
    delete buff_config_;
  }
  buff_config_ = nullptr;
}
inline const ::shared::BuffConfig& BulletConfig::buff_config() const {
  const ::shared::BuffConfig* p = buff_config_;
  // @@protoc_insertion_point(field_get:shared.BulletConfig.buff_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::BuffConfig*>(
      &::shared::_BuffConfig_default_instance_);
}
inline ::shared::BuffConfig* BulletConfig::release_buff_config() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.buff_config)
  
  ::shared::BuffConfig* temp = buff_config_;
  buff_config_ = nullptr;
  return temp;
}
inline ::shared::BuffConfig* BulletConfig::mutable_buff_config() {
  
  if (buff_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::BuffConfig>(GetArenaNoVirtual());
    buff_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.buff_config)
  return buff_config_;
}
inline void BulletConfig::set_allocated_buff_config(::shared::BuffConfig* buff_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete buff_config_;
  }
  if (buff_config) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      buff_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, buff_config, submessage_arena);
    }
    
  } else {
    
  }
  buff_config_ = buff_config;
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.buff_config)
}

// string character_emit_sfx_name = 2048;
inline void BulletConfig::clear_character_emit_sfx_name() {
  character_emit_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::character_emit_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.character_emit_sfx_name)
  return character_emit_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_character_emit_sfx_name(const ::std::string& value) {
  
  character_emit_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.character_emit_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_character_emit_sfx_name(::std::string&& value) {
  
  character_emit_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.character_emit_sfx_name)
}
#endif
inline void BulletConfig::set_character_emit_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  character_emit_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.character_emit_sfx_name)
}
inline void BulletConfig::set_character_emit_sfx_name(const char* value, size_t size) {
  
  character_emit_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.character_emit_sfx_name)
}
inline ::std::string* BulletConfig::mutable_character_emit_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.character_emit_sfx_name)
  return character_emit_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_character_emit_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.character_emit_sfx_name)
  
  return character_emit_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_character_emit_sfx_name(::std::string* character_emit_sfx_name) {
  if (character_emit_sfx_name != nullptr) {
    
  } else {
    
  }
  character_emit_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), character_emit_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.character_emit_sfx_name)
}

// string fireball_emit_sfx_name = 2049;
inline void BulletConfig::clear_fireball_emit_sfx_name() {
  fireball_emit_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::fireball_emit_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.fireball_emit_sfx_name)
  return fireball_emit_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_fireball_emit_sfx_name(const ::std::string& value) {
  
  fireball_emit_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.fireball_emit_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_fireball_emit_sfx_name(::std::string&& value) {
  
  fireball_emit_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.fireball_emit_sfx_name)
}
#endif
inline void BulletConfig::set_fireball_emit_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fireball_emit_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.fireball_emit_sfx_name)
}
inline void BulletConfig::set_fireball_emit_sfx_name(const char* value, size_t size) {
  
  fireball_emit_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.fireball_emit_sfx_name)
}
inline ::std::string* BulletConfig::mutable_fireball_emit_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.fireball_emit_sfx_name)
  return fireball_emit_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_fireball_emit_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.fireball_emit_sfx_name)
  
  return fireball_emit_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_fireball_emit_sfx_name(::std::string* fireball_emit_sfx_name) {
  if (fireball_emit_sfx_name != nullptr) {
    
  } else {
    
  }
  fireball_emit_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fireball_emit_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.fireball_emit_sfx_name)
}

// string explosion_sfx_name = 2050;
inline void BulletConfig::clear_explosion_sfx_name() {
  explosion_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::explosion_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_sfx_name)
  return explosion_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_explosion_sfx_name(const ::std::string& value) {
  
  explosion_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_explosion_sfx_name(::std::string&& value) {
  
  explosion_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.explosion_sfx_name)
}
#endif
inline void BulletConfig::set_explosion_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  explosion_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.explosion_sfx_name)
}
inline void BulletConfig::set_explosion_sfx_name(const char* value, size_t size) {
  
  explosion_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.explosion_sfx_name)
}
inline ::std::string* BulletConfig::mutable_explosion_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.explosion_sfx_name)
  return explosion_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_explosion_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.explosion_sfx_name)
  
  return explosion_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_explosion_sfx_name(::std::string* explosion_sfx_name) {
  if (explosion_sfx_name != nullptr) {
    
  } else {
    
  }
  explosion_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), explosion_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.explosion_sfx_name)
}

// string active_sfx_name = 2051;
inline void BulletConfig::clear_active_sfx_name() {
  active_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::active_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.active_sfx_name)
  return active_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_active_sfx_name(const ::std::string& value) {
  
  active_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.active_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_active_sfx_name(::std::string&& value) {
  
  active_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.active_sfx_name)
}
#endif
inline void BulletConfig::set_active_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  active_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.active_sfx_name)
}
inline void BulletConfig::set_active_sfx_name(const char* value, size_t size) {
  
  active_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.active_sfx_name)
}
inline ::std::string* BulletConfig::mutable_active_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.active_sfx_name)
  return active_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_active_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.active_sfx_name)
  
  return active_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_active_sfx_name(::std::string* active_sfx_name) {
  if (active_sfx_name != nullptr) {
    
  } else {
    
  }
  active_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), active_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.active_sfx_name)
}

// string explosion_on_flesh_sfx_name = 2052;
inline void BulletConfig::clear_explosion_on_flesh_sfx_name() {
  explosion_on_flesh_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::explosion_on_flesh_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_on_flesh_sfx_name)
  return explosion_on_flesh_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_explosion_on_flesh_sfx_name(const ::std::string& value) {
  
  explosion_on_flesh_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_on_flesh_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_explosion_on_flesh_sfx_name(::std::string&& value) {
  
  explosion_on_flesh_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.explosion_on_flesh_sfx_name)
}
#endif
inline void BulletConfig::set_explosion_on_flesh_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  explosion_on_flesh_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.explosion_on_flesh_sfx_name)
}
inline void BulletConfig::set_explosion_on_flesh_sfx_name(const char* value, size_t size) {
  
  explosion_on_flesh_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.explosion_on_flesh_sfx_name)
}
inline ::std::string* BulletConfig::mutable_explosion_on_flesh_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.explosion_on_flesh_sfx_name)
  return explosion_on_flesh_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_explosion_on_flesh_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.explosion_on_flesh_sfx_name)
  
  return explosion_on_flesh_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_explosion_on_flesh_sfx_name(::std::string* explosion_on_flesh_sfx_name) {
  if (explosion_on_flesh_sfx_name != nullptr) {
    
  } else {
    
  }
  explosion_on_flesh_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), explosion_on_flesh_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.explosion_on_flesh_sfx_name)
}

// string explosion_on_rock_sfx_name = 2053;
inline void BulletConfig::clear_explosion_on_rock_sfx_name() {
  explosion_on_rock_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::explosion_on_rock_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_on_rock_sfx_name)
  return explosion_on_rock_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_explosion_on_rock_sfx_name(const ::std::string& value) {
  
  explosion_on_rock_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_on_rock_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_explosion_on_rock_sfx_name(::std::string&& value) {
  
  explosion_on_rock_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.explosion_on_rock_sfx_name)
}
#endif
inline void BulletConfig::set_explosion_on_rock_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  explosion_on_rock_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.explosion_on_rock_sfx_name)
}
inline void BulletConfig::set_explosion_on_rock_sfx_name(const char* value, size_t size) {
  
  explosion_on_rock_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.explosion_on_rock_sfx_name)
}
inline ::std::string* BulletConfig::mutable_explosion_on_rock_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.explosion_on_rock_sfx_name)
  return explosion_on_rock_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_explosion_on_rock_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.explosion_on_rock_sfx_name)
  
  return explosion_on_rock_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_explosion_on_rock_sfx_name(::std::string* explosion_on_rock_sfx_name) {
  if (explosion_on_rock_sfx_name != nullptr) {
    
  } else {
    
  }
  explosion_on_rock_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), explosion_on_rock_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.explosion_on_rock_sfx_name)
}

// string explosion_on_metal_sfx_name = 2054;
inline void BulletConfig::clear_explosion_on_metal_sfx_name() {
  explosion_on_metal_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::explosion_on_metal_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_on_metal_sfx_name)
  return explosion_on_metal_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_explosion_on_metal_sfx_name(const ::std::string& value) {
  
  explosion_on_metal_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_on_metal_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_explosion_on_metal_sfx_name(::std::string&& value) {
  
  explosion_on_metal_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.explosion_on_metal_sfx_name)
}
#endif
inline void BulletConfig::set_explosion_on_metal_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  explosion_on_metal_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.explosion_on_metal_sfx_name)
}
inline void BulletConfig::set_explosion_on_metal_sfx_name(const char* value, size_t size) {
  
  explosion_on_metal_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.explosion_on_metal_sfx_name)
}
inline ::std::string* BulletConfig::mutable_explosion_on_metal_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.explosion_on_metal_sfx_name)
  return explosion_on_metal_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_explosion_on_metal_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.explosion_on_metal_sfx_name)
  
  return explosion_on_metal_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_explosion_on_metal_sfx_name(::std::string* explosion_on_metal_sfx_name) {
  if (explosion_on_metal_sfx_name != nullptr) {
    
  } else {
    
  }
  explosion_on_metal_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), explosion_on_metal_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.explosion_on_metal_sfx_name)
}

// string explosion_on_wood_sfx_name = 2055;
inline void BulletConfig::clear_explosion_on_wood_sfx_name() {
  explosion_on_wood_sfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BulletConfig::explosion_on_wood_sfx_name() const {
  // @@protoc_insertion_point(field_get:shared.BulletConfig.explosion_on_wood_sfx_name)
  return explosion_on_wood_sfx_name_.GetNoArena();
}
inline void BulletConfig::set_explosion_on_wood_sfx_name(const ::std::string& value) {
  
  explosion_on_wood_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BulletConfig.explosion_on_wood_sfx_name)
}
#if LANG_CXX11
inline void BulletConfig::set_explosion_on_wood_sfx_name(::std::string&& value) {
  
  explosion_on_wood_sfx_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BulletConfig.explosion_on_wood_sfx_name)
}
#endif
inline void BulletConfig::set_explosion_on_wood_sfx_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  explosion_on_wood_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BulletConfig.explosion_on_wood_sfx_name)
}
inline void BulletConfig::set_explosion_on_wood_sfx_name(const char* value, size_t size) {
  
  explosion_on_wood_sfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BulletConfig.explosion_on_wood_sfx_name)
}
inline ::std::string* BulletConfig::mutable_explosion_on_wood_sfx_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BulletConfig.explosion_on_wood_sfx_name)
  return explosion_on_wood_sfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BulletConfig::release_explosion_on_wood_sfx_name() {
  // @@protoc_insertion_point(field_release:shared.BulletConfig.explosion_on_wood_sfx_name)
  
  return explosion_on_wood_sfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BulletConfig::set_allocated_explosion_on_wood_sfx_name(::std::string* explosion_on_wood_sfx_name) {
  if (explosion_on_wood_sfx_name != nullptr) {
    
  } else {
    
  }
  explosion_on_wood_sfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), explosion_on_wood_sfx_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BulletConfig.explosion_on_wood_sfx_name)
}

// -------------------------------------------------------------------

// Bullet

// .shared.BulletState bl_state = 1;
inline void Bullet::clear_bl_state() {
  bl_state_ = 0;
}
inline ::shared::BulletState Bullet::bl_state() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.bl_state)
  return static_cast< ::shared::BulletState >(bl_state_);
}
inline void Bullet::set_bl_state(::shared::BulletState value) {
  
  bl_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.bl_state)
}

// int32 frames_in_bl_state = 2;
inline void Bullet::clear_frames_in_bl_state() {
  frames_in_bl_state_ = 0;
}
inline ::google::protobuf::int32 Bullet::frames_in_bl_state() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.frames_in_bl_state)
  return frames_in_bl_state_;
}
inline void Bullet::set_frames_in_bl_state(::google::protobuf::int32 value) {
  
  frames_in_bl_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.frames_in_bl_state)
}

// int32 bullet_local_id = 3;
inline void Bullet::clear_bullet_local_id() {
  bullet_local_id_ = 0;
}
inline ::google::protobuf::int32 Bullet::bullet_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.bullet_local_id)
  return bullet_local_id_;
}
inline void Bullet::set_bullet_local_id(::google::protobuf::int32 value) {
  
  bullet_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.bullet_local_id)
}

// int32 originated_render_frame_id = 4;
inline void Bullet::clear_originated_render_frame_id() {
  originated_render_frame_id_ = 0;
}
inline ::google::protobuf::int32 Bullet::originated_render_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.originated_render_frame_id)
  return originated_render_frame_id_;
}
inline void Bullet::set_originated_render_frame_id(::google::protobuf::int32 value) {
  
  originated_render_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.originated_render_frame_id)
}

// int32 offender_join_index = 5;
inline void Bullet::clear_offender_join_index() {
  offender_join_index_ = 0;
}
inline ::google::protobuf::int32 Bullet::offender_join_index() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.offender_join_index)
  return offender_join_index_;
}
inline void Bullet::set_offender_join_index(::google::protobuf::int32 value) {
  
  offender_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.offender_join_index)
}

// int32 offender_trap_local_id = 6;
inline void Bullet::clear_offender_trap_local_id() {
  offender_trap_local_id_ = 0;
}
inline ::google::protobuf::int32 Bullet::offender_trap_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.offender_trap_local_id)
  return offender_trap_local_id_;
}
inline void Bullet::set_offender_trap_local_id(::google::protobuf::int32 value) {
  
  offender_trap_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.offender_trap_local_id)
}

// int32 team_id = 7;
inline void Bullet::clear_team_id() {
  team_id_ = 0;
}
inline ::google::protobuf::int32 Bullet::team_id() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.team_id)
  return team_id_;
}
inline void Bullet::set_team_id(::google::protobuf::int32 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.team_id)
}

// int32 vert_moving_trap_local_id_upon_active = 8;
inline void Bullet::clear_vert_moving_trap_local_id_upon_active() {
  vert_moving_trap_local_id_upon_active_ = 0;
}
inline ::google::protobuf::int32 Bullet::vert_moving_trap_local_id_upon_active() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.vert_moving_trap_local_id_upon_active)
  return vert_moving_trap_local_id_upon_active_;
}
inline void Bullet::set_vert_moving_trap_local_id_upon_active(::google::protobuf::int32 value) {
  
  vert_moving_trap_local_id_upon_active_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.vert_moving_trap_local_id_upon_active)
}

// int32 repeat_quota_left = 9;
inline void Bullet::clear_repeat_quota_left() {
  repeat_quota_left_ = 0;
}
inline ::google::protobuf::int32 Bullet::repeat_quota_left() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.repeat_quota_left)
  return repeat_quota_left_;
}
inline void Bullet::set_repeat_quota_left(::google::protobuf::int32 value) {
  
  repeat_quota_left_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.repeat_quota_left)
}

// int32 remaining_hard_pushback_bounce_quota = 10;
inline void Bullet::clear_remaining_hard_pushback_bounce_quota() {
  remaining_hard_pushback_bounce_quota_ = 0;
}
inline ::google::protobuf::int32 Bullet::remaining_hard_pushback_bounce_quota() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.remaining_hard_pushback_bounce_quota)
  return remaining_hard_pushback_bounce_quota_;
}
inline void Bullet::set_remaining_hard_pushback_bounce_quota(::google::protobuf::int32 value) {
  
  remaining_hard_pushback_bounce_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.remaining_hard_pushback_bounce_quota)
}

// int32 target_character_join_index = 11;
inline void Bullet::clear_target_character_join_index() {
  target_character_join_index_ = 0;
}
inline ::google::protobuf::int32 Bullet::target_character_join_index() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.target_character_join_index)
  return target_character_join_index_;
}
inline void Bullet::set_target_character_join_index(::google::protobuf::int32 value) {
  
  target_character_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.target_character_join_index)
}

// int32 damage_dealed = 12;
inline void Bullet::clear_damage_dealed() {
  damage_dealed_ = 0;
}
inline ::google::protobuf::int32 Bullet::damage_dealed() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.damage_dealed)
  return damage_dealed_;
}
inline void Bullet::set_damage_dealed(::google::protobuf::int32 value) {
  
  damage_dealed_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.damage_dealed)
}

// .shared.IfaceCat exploded_on_ifc = 13;
inline void Bullet::clear_exploded_on_ifc() {
  exploded_on_ifc_ = 0;
}
inline ::shared::IfaceCat Bullet::exploded_on_ifc() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.exploded_on_ifc)
  return static_cast< ::shared::IfaceCat >(exploded_on_ifc_);
}
inline void Bullet::set_exploded_on_ifc(::shared::IfaceCat value) {
  
  exploded_on_ifc_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.exploded_on_ifc)
}

// float x = 14;
inline void Bullet::clear_x() {
  x_ = 0;
}
inline float Bullet::x() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.x)
  return x_;
}
inline void Bullet::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.x)
}

// float y = 15;
inline void Bullet::clear_y() {
  y_ = 0;
}
inline float Bullet::y() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.y)
  return y_;
}
inline void Bullet::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.y)
}

// float dir_x = 16;
inline void Bullet::clear_dir_x() {
  dir_x_ = 0;
}
inline float Bullet::dir_x() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.dir_x)
  return dir_x_;
}
inline void Bullet::set_dir_x(float value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.dir_x)
}

// float dir_y = 17;
inline void Bullet::clear_dir_y() {
  dir_y_ = 0;
}
inline float Bullet::dir_y() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.dir_y)
  return dir_y_;
}
inline void Bullet::set_dir_y(float value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.dir_y)
}

// float vel_x = 18;
inline void Bullet::clear_vel_x() {
  vel_x_ = 0;
}
inline float Bullet::vel_x() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.vel_x)
  return vel_x_;
}
inline void Bullet::set_vel_x(float value) {
  
  vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.vel_x)
}

// float vel_y = 19;
inline void Bullet::clear_vel_y() {
  vel_y_ = 0;
}
inline float Bullet::vel_y() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.vel_y)
  return vel_y_;
}
inline void Bullet::set_vel_y(float value) {
  
  vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.vel_y)
}

// float originated_x = 20;
inline void Bullet::clear_originated_x() {
  originated_x_ = 0;
}
inline float Bullet::originated_x() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.originated_x)
  return originated_x_;
}
inline void Bullet::set_originated_x(float value) {
  
  originated_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.originated_x)
}

// float originated_y = 21;
inline void Bullet::clear_originated_y() {
  originated_y_ = 0;
}
inline float Bullet::originated_y() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.originated_y)
  return originated_y_;
}
inline void Bullet::set_originated_y(float value) {
  
  originated_y_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.originated_y)
}

// float spin_cos = 22;
inline void Bullet::clear_spin_cos() {
  spin_cos_ = 0;
}
inline float Bullet::spin_cos() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.spin_cos)
  return spin_cos_;
}
inline void Bullet::set_spin_cos(float value) {
  
  spin_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.spin_cos)
}

// float spin_sin = 23;
inline void Bullet::clear_spin_sin() {
  spin_sin_ = 0;
}
inline float Bullet::spin_sin() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.spin_sin)
  return spin_sin_;
}
inline void Bullet::set_spin_sin(float value) {
  
  spin_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.spin_sin)
}

// int32 active_skill_hit = 24;
inline void Bullet::clear_active_skill_hit() {
  active_skill_hit_ = 0;
}
inline ::google::protobuf::int32 Bullet::active_skill_hit() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.active_skill_hit)
  return active_skill_hit_;
}
inline void Bullet::set_active_skill_hit(::google::protobuf::int32 value) {
  
  active_skill_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.active_skill_hit)
}

// uint32 skill_id = 25;
inline void Bullet::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 Bullet::skill_id() const {
  // @@protoc_insertion_point(field_get:shared.Bullet.skill_id)
  return skill_id_;
}
inline void Bullet::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Bullet.skill_id)
}

// -------------------------------------------------------------------

// TrapConfig

// int32 species_id = 1;
inline void TrapConfig::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.species_id)
  return species_id_;
}
inline void TrapConfig::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.species_id)
}

// int32 explosion_species_id = 2;
inline void TrapConfig::clear_explosion_species_id() {
  explosion_species_id_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::explosion_species_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.explosion_species_id)
  return explosion_species_id_;
}
inline void TrapConfig::set_explosion_species_id(::google::protobuf::int32 value) {
  
  explosion_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.explosion_species_id)
}

// int32 explosion_frames = 3;
inline void TrapConfig::clear_explosion_frames() {
  explosion_frames_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::explosion_frames() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.explosion_frames)
  return explosion_frames_;
}
inline void TrapConfig::set_explosion_frames(::google::protobuf::int32 value) {
  
  explosion_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.explosion_frames)
}

// bool blow_up = 4;
inline void TrapConfig::clear_blow_up() {
  blow_up_ = false;
}
inline bool TrapConfig::blow_up() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.blow_up)
  return blow_up_;
}
inline void TrapConfig::set_blow_up(bool value) {
  
  blow_up_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.blow_up)
}

// int32 damage = 5;
inline void TrapConfig::clear_damage() {
  damage_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::damage() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.damage)
  return damage_;
}
inline void TrapConfig::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.damage)
}

// int32 hit_stun_frames = 6;
inline void TrapConfig::clear_hit_stun_frames() {
  hit_stun_frames_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::hit_stun_frames() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.hit_stun_frames)
  return hit_stun_frames_;
}
inline void TrapConfig::set_hit_stun_frames(::google::protobuf::int32 value) {
  
  hit_stun_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.hit_stun_frames)
}

// int32 hit_invinsible_frames = 7;
inline void TrapConfig::clear_hit_invinsible_frames() {
  hit_invinsible_frames_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::hit_invinsible_frames() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.hit_invinsible_frames)
  return hit_invinsible_frames_;
}
inline void TrapConfig::set_hit_invinsible_frames(::google::protobuf::int32 value) {
  
  hit_invinsible_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.hit_invinsible_frames)
}

// bool deactivatable = 8;
inline void TrapConfig::clear_deactivatable() {
  deactivatable_ = false;
}
inline bool TrapConfig::deactivatable() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.deactivatable)
  return deactivatable_;
}
inline void TrapConfig::set_deactivatable(bool value) {
  
  deactivatable_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.deactivatable)
}

// int32 hardness = 9;
inline void TrapConfig::clear_hardness() {
  hardness_ = 0;
}
inline ::google::protobuf::int32 TrapConfig::hardness() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.hardness)
  return hardness_;
}
inline void TrapConfig::set_hardness(::google::protobuf::int32 value) {
  
  hardness_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.hardness)
}

// bool deactivate_upon_triggered = 10;
inline void TrapConfig::clear_deactivate_upon_triggered() {
  deactivate_upon_triggered_ = false;
}
inline bool TrapConfig::deactivate_upon_triggered() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.deactivate_upon_triggered)
  return deactivate_upon_triggered_;
}
inline void TrapConfig::set_deactivate_upon_triggered(bool value) {
  
  deactivate_upon_triggered_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.deactivate_upon_triggered)
}

// float const_friction_vel_x_top = 11;
inline void TrapConfig::clear_const_friction_vel_x_top() {
  const_friction_vel_x_top_ = 0;
}
inline float TrapConfig::const_friction_vel_x_top() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.const_friction_vel_x_top)
  return const_friction_vel_x_top_;
}
inline void TrapConfig::set_const_friction_vel_x_top(float value) {
  
  const_friction_vel_x_top_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.const_friction_vel_x_top)
}

// float const_friction_vel_x_bottom = 12;
inline void TrapConfig::clear_const_friction_vel_x_bottom() {
  const_friction_vel_x_bottom_ = 0;
}
inline float TrapConfig::const_friction_vel_x_bottom() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.const_friction_vel_x_bottom)
  return const_friction_vel_x_bottom_;
}
inline void TrapConfig::set_const_friction_vel_x_bottom(float value) {
  
  const_friction_vel_x_bottom_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.const_friction_vel_x_bottom)
}

// float const_friction_vel_y_left = 13;
inline void TrapConfig::clear_const_friction_vel_y_left() {
  const_friction_vel_y_left_ = 0;
}
inline float TrapConfig::const_friction_vel_y_left() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.const_friction_vel_y_left)
  return const_friction_vel_y_left_;
}
inline void TrapConfig::set_const_friction_vel_y_left(float value) {
  
  const_friction_vel_y_left_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.const_friction_vel_y_left)
}

// float const_friction_vel_y_right = 14;
inline void TrapConfig::clear_const_friction_vel_y_right() {
  const_friction_vel_y_right_ = 0;
}
inline float TrapConfig::const_friction_vel_y_right() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.const_friction_vel_y_right)
  return const_friction_vel_y_right_;
}
inline void TrapConfig::set_const_friction_vel_y_right(float value) {
  
  const_friction_vel_y_right_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.const_friction_vel_y_right)
}

// bool patrol_cue_requires_full_contain = 15;
inline void TrapConfig::clear_patrol_cue_requires_full_contain() {
  patrol_cue_requires_full_contain_ = false;
}
inline bool TrapConfig::patrol_cue_requires_full_contain() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.patrol_cue_requires_full_contain)
  return patrol_cue_requires_full_contain_;
}
inline void TrapConfig::set_patrol_cue_requires_full_contain(bool value) {
  
  patrol_cue_requires_full_contain_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.patrol_cue_requires_full_contain)
}

// float spin_anchor_x = 16;
inline void TrapConfig::clear_spin_anchor_x() {
  spin_anchor_x_ = 0;
}
inline float TrapConfig::spin_anchor_x() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.spin_anchor_x)
  return spin_anchor_x_;
}
inline void TrapConfig::set_spin_anchor_x(float value) {
  
  spin_anchor_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.spin_anchor_x)
}

// float spin_anchor_y = 17;
inline void TrapConfig::clear_spin_anchor_y() {
  spin_anchor_y_ = 0;
}
inline float TrapConfig::spin_anchor_y() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.spin_anchor_y)
  return spin_anchor_y_;
}
inline void TrapConfig::set_spin_anchor_y(float value) {
  
  spin_anchor_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.spin_anchor_y)
}

// float angular_frame_vel_cos = 18;
inline void TrapConfig::clear_angular_frame_vel_cos() {
  angular_frame_vel_cos_ = 0;
}
inline float TrapConfig::angular_frame_vel_cos() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.angular_frame_vel_cos)
  return angular_frame_vel_cos_;
}
inline void TrapConfig::set_angular_frame_vel_cos(float value) {
  
  angular_frame_vel_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.angular_frame_vel_cos)
}

// float angular_frame_vel_sin = 19;
inline void TrapConfig::clear_angular_frame_vel_sin() {
  angular_frame_vel_sin_ = 0;
}
inline float TrapConfig::angular_frame_vel_sin() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.angular_frame_vel_sin)
  return angular_frame_vel_sin_;
}
inline void TrapConfig::set_angular_frame_vel_sin(float value) {
  
  angular_frame_vel_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.angular_frame_vel_sin)
}

// float intrinsic_spin_cos = 20;
inline void TrapConfig::clear_intrinsic_spin_cos() {
  intrinsic_spin_cos_ = 0;
}
inline float TrapConfig::intrinsic_spin_cos() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.intrinsic_spin_cos)
  return intrinsic_spin_cos_;
}
inline void TrapConfig::set_intrinsic_spin_cos(float value) {
  
  intrinsic_spin_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.intrinsic_spin_cos)
}

// float intrinsic_spin_sin = 21;
inline void TrapConfig::clear_intrinsic_spin_sin() {
  intrinsic_spin_sin_ = 0;
}
inline float TrapConfig::intrinsic_spin_sin() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.intrinsic_spin_sin)
  return intrinsic_spin_sin_;
}
inline void TrapConfig::set_intrinsic_spin_sin(float value) {
  
  intrinsic_spin_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.intrinsic_spin_sin)
}

// bool atk1_upon_triggered = 22;
inline void TrapConfig::clear_atk1_upon_triggered() {
  atk1_upon_triggered_ = false;
}
inline bool TrapConfig::atk1_upon_triggered() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.atk1_upon_triggered)
  return atk1_upon_triggered_;
}
inline void TrapConfig::set_atk1_upon_triggered(bool value) {
  
  atk1_upon_triggered_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.atk1_upon_triggered)
}

// uint32 atk1_skill_id = 23;
inline void TrapConfig::clear_atk1_skill_id() {
  atk1_skill_id_ = 0u;
}
inline ::google::protobuf::uint32 TrapConfig::atk1_skill_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.atk1_skill_id)
  return atk1_skill_id_;
}
inline void TrapConfig::set_atk1_skill_id(::google::protobuf::uint32 value) {
  
  atk1_skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.atk1_skill_id)
}

// bool is_rotary = 24;
inline void TrapConfig::clear_is_rotary() {
  is_rotary_ = false;
}
inline bool TrapConfig::is_rotary() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.is_rotary)
  return is_rotary_;
}
inline void TrapConfig::set_is_rotary(bool value) {
  
  is_rotary_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.is_rotary)
}

// bool no_x_flip_rendering = 25;
inline void TrapConfig::clear_no_x_flip_rendering() {
  no_x_flip_rendering_ = false;
}
inline bool TrapConfig::no_x_flip_rendering() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.no_x_flip_rendering)
  return no_x_flip_rendering_;
}
inline void TrapConfig::set_no_x_flip_rendering(bool value) {
  
  no_x_flip_rendering_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfig.no_x_flip_rendering)
}

// string species_name = 1024;
inline void TrapConfig::clear_species_name() {
  species_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrapConfig::species_name() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfig.species_name)
  return species_name_.GetNoArena();
}
inline void TrapConfig::set_species_name(const ::std::string& value) {
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.TrapConfig.species_name)
}
#if LANG_CXX11
inline void TrapConfig::set_species_name(::std::string&& value) {
  
  species_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.TrapConfig.species_name)
}
#endif
inline void TrapConfig::set_species_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.TrapConfig.species_name)
}
inline void TrapConfig::set_species_name(const char* value, size_t size) {
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.TrapConfig.species_name)
}
inline ::std::string* TrapConfig::mutable_species_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.TrapConfig.species_name)
  return species_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrapConfig::release_species_name() {
  // @@protoc_insertion_point(field_release:shared.TrapConfig.species_name)
  
  return species_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrapConfig::set_allocated_species_name(::std::string* species_name) {
  if (species_name != nullptr) {
    
  } else {
    
  }
  species_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), species_name);
  // @@protoc_insertion_point(field_set_allocated:shared.TrapConfig.species_name)
}

// -------------------------------------------------------------------

// TrapConfigFromTiled

// int32 species_id = 1;
inline void TrapConfigFromTiled::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::species_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.species_id)
  return species_id_;
}
inline void TrapConfigFromTiled::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.species_id)
}

// int32 quota = 2;
inline void TrapConfigFromTiled::clear_quota() {
  quota_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::quota() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.quota)
  return quota_;
}
inline void TrapConfigFromTiled::set_quota(::google::protobuf::int32 value) {
  
  quota_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.quota)
}

// float speed = 3;
inline void TrapConfigFromTiled::clear_speed() {
  speed_ = 0;
}
inline float TrapConfigFromTiled::speed() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.speed)
  return speed_;
}
inline void TrapConfigFromTiled::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.speed)
}

// int32 dir_x = 4;
inline void TrapConfigFromTiled::clear_dir_x() {
  dir_x_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::dir_x() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.dir_x)
  return dir_x_;
}
inline void TrapConfigFromTiled::set_dir_x(::google::protobuf::int32 value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.dir_x)
}

// int32 dir_y = 5;
inline void TrapConfigFromTiled::clear_dir_y() {
  dir_y_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::dir_y() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.dir_y)
  return dir_y_;
}
inline void TrapConfigFromTiled::set_dir_y(::google::protobuf::int32 value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.dir_y)
}

// int32 subscribes_to_id = 7;
inline void TrapConfigFromTiled::clear_subscribes_to_id() {
  subscribes_to_id_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::subscribes_to_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.subscribes_to_id)
  return subscribes_to_id_;
}
inline void TrapConfigFromTiled::set_subscribes_to_id(::google::protobuf::int32 value) {
  
  subscribes_to_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.subscribes_to_id)
}

// int32 subscribes_to_id_after_initial_fire = 8;
inline void TrapConfigFromTiled::clear_subscribes_to_id_after_initial_fire() {
  subscribes_to_id_after_initial_fire_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::subscribes_to_id_after_initial_fire() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.subscribes_to_id_after_initial_fire)
  return subscribes_to_id_after_initial_fire_;
}
inline void TrapConfigFromTiled::set_subscribes_to_id_after_initial_fire(::google::protobuf::int32 value) {
  
  subscribes_to_id_after_initial_fire_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.subscribes_to_id_after_initial_fire)
}

// int32 subscribes_to_id_alt = 9;
inline void TrapConfigFromTiled::clear_subscribes_to_id_alt() {
  subscribes_to_id_alt_ = 0;
}
inline ::google::protobuf::int32 TrapConfigFromTiled::subscribes_to_id_alt() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.subscribes_to_id_alt)
  return subscribes_to_id_alt_;
}
inline void TrapConfigFromTiled::set_subscribes_to_id_alt(::google::protobuf::int32 value) {
  
  subscribes_to_id_alt_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.subscribes_to_id_alt)
}

// float box_cw = 10;
inline void TrapConfigFromTiled::clear_box_cw() {
  box_cw_ = 0;
}
inline float TrapConfigFromTiled::box_cw() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.box_cw)
  return box_cw_;
}
inline void TrapConfigFromTiled::set_box_cw(float value) {
  
  box_cw_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.box_cw)
}

// float box_ch = 11;
inline void TrapConfigFromTiled::clear_box_ch() {
  box_ch_ = 0;
}
inline float TrapConfigFromTiled::box_ch() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.box_ch)
  return box_ch_;
}
inline void TrapConfigFromTiled::set_box_ch(float value) {
  
  box_ch_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.box_ch)
}

// float init_no_angular_vel = 12;
inline void TrapConfigFromTiled::clear_init_no_angular_vel() {
  init_no_angular_vel_ = 0;
}
inline float TrapConfigFromTiled::init_no_angular_vel() const {
  // @@protoc_insertion_point(field_get:shared.TrapConfigFromTiled.init_no_angular_vel)
  return init_no_angular_vel_;
}
inline void TrapConfigFromTiled::set_init_no_angular_vel(float value) {
  
  init_no_angular_vel_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapConfigFromTiled.init_no_angular_vel)
}

// -------------------------------------------------------------------

// TrapColliderAttr

// int32 hitbox_offset_x = 1;
inline void TrapColliderAttr::clear_hitbox_offset_x() {
  hitbox_offset_x_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::hitbox_offset_x() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.hitbox_offset_x)
  return hitbox_offset_x_;
}
inline void TrapColliderAttr::set_hitbox_offset_x(::google::protobuf::int32 value) {
  
  hitbox_offset_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.hitbox_offset_x)
}

// int32 hitbox_offset_y = 2;
inline void TrapColliderAttr::clear_hitbox_offset_y() {
  hitbox_offset_y_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::hitbox_offset_y() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.hitbox_offset_y)
  return hitbox_offset_y_;
}
inline void TrapColliderAttr::set_hitbox_offset_y(::google::protobuf::int32 value) {
  
  hitbox_offset_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.hitbox_offset_y)
}

// int32 hitbox_size_x = 3;
inline void TrapColliderAttr::clear_hitbox_size_x() {
  hitbox_size_x_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::hitbox_size_x() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.hitbox_size_x)
  return hitbox_size_x_;
}
inline void TrapColliderAttr::set_hitbox_size_x(::google::protobuf::int32 value) {
  
  hitbox_size_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.hitbox_size_x)
}

// int32 hitbox_size_y = 4;
inline void TrapColliderAttr::clear_hitbox_size_y() {
  hitbox_size_y_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::hitbox_size_y() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.hitbox_size_y)
  return hitbox_size_y_;
}
inline void TrapColliderAttr::set_hitbox_size_y(::google::protobuf::int32 value) {
  
  hitbox_size_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.hitbox_size_y)
}

// bool provides_hard_pushback = 5;
inline void TrapColliderAttr::clear_provides_hard_pushback() {
  provides_hard_pushback_ = false;
}
inline bool TrapColliderAttr::provides_hard_pushback() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.provides_hard_pushback)
  return provides_hard_pushback_;
}
inline void TrapColliderAttr::set_provides_hard_pushback(bool value) {
  
  provides_hard_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.provides_hard_pushback)
}

// bool provides_damage = 6;
inline void TrapColliderAttr::clear_provides_damage() {
  provides_damage_ = false;
}
inline bool TrapColliderAttr::provides_damage() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.provides_damage)
  return provides_damage_;
}
inline void TrapColliderAttr::set_provides_damage(bool value) {
  
  provides_damage_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.provides_damage)
}

// bool provides_escape = 7;
inline void TrapColliderAttr::clear_provides_escape() {
  provides_escape_ = false;
}
inline bool TrapColliderAttr::provides_escape() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.provides_escape)
  return provides_escape_;
}
inline void TrapColliderAttr::set_provides_escape(bool value) {
  
  provides_escape_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.provides_escape)
}

// bool provides_slip_jump = 8;
inline void TrapColliderAttr::clear_provides_slip_jump() {
  provides_slip_jump_ = false;
}
inline bool TrapColliderAttr::provides_slip_jump() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.provides_slip_jump)
  return provides_slip_jump_;
}
inline void TrapColliderAttr::set_provides_slip_jump(bool value) {
  
  provides_slip_jump_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.provides_slip_jump)
}

// bool prohibits_wall_grabbing = 9;
inline void TrapColliderAttr::clear_prohibits_wall_grabbing() {
  prohibits_wall_grabbing_ = false;
}
inline bool TrapColliderAttr::prohibits_wall_grabbing() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.prohibits_wall_grabbing)
  return prohibits_wall_grabbing_;
}
inline void TrapColliderAttr::set_prohibits_wall_grabbing(bool value) {
  
  prohibits_wall_grabbing_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.prohibits_wall_grabbing)
}

// bool forces_crouching = 10;
inline void TrapColliderAttr::clear_forces_crouching() {
  forces_crouching_ = false;
}
inline bool TrapColliderAttr::forces_crouching() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.forces_crouching)
  return forces_crouching_;
}
inline void TrapColliderAttr::set_forces_crouching(bool value) {
  
  forces_crouching_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.forces_crouching)
}

// int32 species_id = 11;
inline void TrapColliderAttr::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::species_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.species_id)
  return species_id_;
}
inline void TrapColliderAttr::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.species_id)
}

// int32 only_allows_aligned_vel_x = 12;
inline void TrapColliderAttr::clear_only_allows_aligned_vel_x() {
  only_allows_aligned_vel_x_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::only_allows_aligned_vel_x() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.only_allows_aligned_vel_x)
  return only_allows_aligned_vel_x_;
}
inline void TrapColliderAttr::set_only_allows_aligned_vel_x(::google::protobuf::int32 value) {
  
  only_allows_aligned_vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.only_allows_aligned_vel_x)
}

// int32 only_allows_aligned_vel_y = 13;
inline void TrapColliderAttr::clear_only_allows_aligned_vel_y() {
  only_allows_aligned_vel_y_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::only_allows_aligned_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.only_allows_aligned_vel_y)
  return only_allows_aligned_vel_y_;
}
inline void TrapColliderAttr::set_only_allows_aligned_vel_y(::google::protobuf::int32 value) {
  
  only_allows_aligned_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.only_allows_aligned_vel_y)
}

// bool as_patrol_cue = 14;
inline void TrapColliderAttr::clear_as_patrol_cue() {
  as_patrol_cue_ = false;
}
inline bool TrapColliderAttr::as_patrol_cue() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.as_patrol_cue)
  return as_patrol_cue_;
}
inline void TrapColliderAttr::set_as_patrol_cue(bool value) {
  
  as_patrol_cue_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.as_patrol_cue)
}

// .shared.PatrolCue tc_pc = 15;
inline bool TrapColliderAttr::has_tc_pc() const {
  return this != internal_default_instance() && tc_pc_ != nullptr;
}
inline void TrapColliderAttr::clear_tc_pc() {
  if (GetArenaNoVirtual() == nullptr && tc_pc_ != nullptr) {
    delete tc_pc_;
  }
  tc_pc_ = nullptr;
}
inline const ::shared::PatrolCue& TrapColliderAttr::tc_pc() const {
  const ::shared::PatrolCue* p = tc_pc_;
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.tc_pc)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::PatrolCue*>(
      &::shared::_PatrolCue_default_instance_);
}
inline ::shared::PatrolCue* TrapColliderAttr::release_tc_pc() {
  // @@protoc_insertion_point(field_release:shared.TrapColliderAttr.tc_pc)
  
  ::shared::PatrolCue* temp = tc_pc_;
  tc_pc_ = nullptr;
  return temp;
}
inline ::shared::PatrolCue* TrapColliderAttr::mutable_tc_pc() {
  
  if (tc_pc_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::PatrolCue>(GetArenaNoVirtual());
    tc_pc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.TrapColliderAttr.tc_pc)
  return tc_pc_;
}
inline void TrapColliderAttr::set_allocated_tc_pc(::shared::PatrolCue* tc_pc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete tc_pc_;
  }
  if (tc_pc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tc_pc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tc_pc, submessage_arena);
    }
    
  } else {
    
  }
  tc_pc_ = tc_pc;
  // @@protoc_insertion_point(field_set_allocated:shared.TrapColliderAttr.tc_pc)
}

// int32 trap_local_id = 1024;
inline void TrapColliderAttr::clear_trap_local_id() {
  trap_local_id_ = 0;
}
inline ::google::protobuf::int32 TrapColliderAttr::trap_local_id() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.trap_local_id)
  return trap_local_id_;
}
inline void TrapColliderAttr::set_trap_local_id(::google::protobuf::int32 value) {
  
  trap_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.trap_local_id)
}

// uint64 collision_type_mask = 1029;
inline void TrapColliderAttr::clear_collision_type_mask() {
  collision_type_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TrapColliderAttr::collision_type_mask() const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttr.collision_type_mask)
  return collision_type_mask_;
}
inline void TrapColliderAttr::set_collision_type_mask(::google::protobuf::uint64 value) {
  
  collision_type_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.TrapColliderAttr.collision_type_mask)
}

// -------------------------------------------------------------------

// Trap

// int32 trap_local_id = 1;
inline void Trap::clear_trap_local_id() {
  trap_local_id_ = 0;
}
inline ::google::protobuf::int32 Trap::trap_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Trap.trap_local_id)
  return trap_local_id_;
}
inline void Trap::set_trap_local_id(::google::protobuf::int32 value) {
  
  trap_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.trap_local_id)
}

// int32 patrol_cue_angular_vel_flip_mark = 2;
inline void Trap::clear_patrol_cue_angular_vel_flip_mark() {
  patrol_cue_angular_vel_flip_mark_ = 0;
}
inline ::google::protobuf::int32 Trap::patrol_cue_angular_vel_flip_mark() const {
  // @@protoc_insertion_point(field_get:shared.Trap.patrol_cue_angular_vel_flip_mark)
  return patrol_cue_angular_vel_flip_mark_;
}
inline void Trap::set_patrol_cue_angular_vel_flip_mark(::google::protobuf::int32 value) {
  
  patrol_cue_angular_vel_flip_mark_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.patrol_cue_angular_vel_flip_mark)
}

// .shared.TrapConfigFromTiled config_from_tiled = 3;
inline bool Trap::has_config_from_tiled() const {
  return this != internal_default_instance() && config_from_tiled_ != nullptr;
}
inline void Trap::clear_config_from_tiled() {
  if (GetArenaNoVirtual() == nullptr && config_from_tiled_ != nullptr) {
    delete config_from_tiled_;
  }
  config_from_tiled_ = nullptr;
}
inline const ::shared::TrapConfigFromTiled& Trap::config_from_tiled() const {
  const ::shared::TrapConfigFromTiled* p = config_from_tiled_;
  // @@protoc_insertion_point(field_get:shared.Trap.config_from_tiled)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::TrapConfigFromTiled*>(
      &::shared::_TrapConfigFromTiled_default_instance_);
}
inline ::shared::TrapConfigFromTiled* Trap::release_config_from_tiled() {
  // @@protoc_insertion_point(field_release:shared.Trap.config_from_tiled)
  
  ::shared::TrapConfigFromTiled* temp = config_from_tiled_;
  config_from_tiled_ = nullptr;
  return temp;
}
inline ::shared::TrapConfigFromTiled* Trap::mutable_config_from_tiled() {
  
  if (config_from_tiled_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::TrapConfigFromTiled>(GetArenaNoVirtual());
    config_from_tiled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.Trap.config_from_tiled)
  return config_from_tiled_;
}
inline void Trap::set_allocated_config_from_tiled(::shared::TrapConfigFromTiled* config_from_tiled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete config_from_tiled_;
  }
  if (config_from_tiled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config_from_tiled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_from_tiled, submessage_arena);
    }
    
  } else {
    
  }
  config_from_tiled_ = config_from_tiled;
  // @@protoc_insertion_point(field_set_allocated:shared.Trap.config_from_tiled)
}

// .shared.TrapState trap_state = 4;
inline void Trap::clear_trap_state() {
  trap_state_ = 0;
}
inline ::shared::TrapState Trap::trap_state() const {
  // @@protoc_insertion_point(field_get:shared.Trap.trap_state)
  return static_cast< ::shared::TrapState >(trap_state_);
}
inline void Trap::set_trap_state(::shared::TrapState value) {
  
  trap_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.trap_state)
}

// int32 frames_in_trap_state = 5;
inline void Trap::clear_frames_in_trap_state() {
  frames_in_trap_state_ = 0;
}
inline ::google::protobuf::int32 Trap::frames_in_trap_state() const {
  // @@protoc_insertion_point(field_get:shared.Trap.frames_in_trap_state)
  return frames_in_trap_state_;
}
inline void Trap::set_frames_in_trap_state(::google::protobuf::int32 value) {
  
  frames_in_trap_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.frames_in_trap_state)
}

// bool is_completely_static = 6;
inline void Trap::clear_is_completely_static() {
  is_completely_static_ = false;
}
inline bool Trap::is_completely_static() const {
  // @@protoc_insertion_point(field_get:shared.Trap.is_completely_static)
  return is_completely_static_;
}
inline void Trap::set_is_completely_static(bool value) {
  
  is_completely_static_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.is_completely_static)
}

// bool captured_by_patrol_cue = 7;
inline void Trap::clear_captured_by_patrol_cue() {
  captured_by_patrol_cue_ = false;
}
inline bool Trap::captured_by_patrol_cue() const {
  // @@protoc_insertion_point(field_get:shared.Trap.captured_by_patrol_cue)
  return captured_by_patrol_cue_;
}
inline void Trap::set_captured_by_patrol_cue(bool value) {
  
  captured_by_patrol_cue_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.captured_by_patrol_cue)
}

// int32 frames_in_patrol_cue = 8;
inline void Trap::clear_frames_in_patrol_cue() {
  frames_in_patrol_cue_ = 0;
}
inline ::google::protobuf::int32 Trap::frames_in_patrol_cue() const {
  // @@protoc_insertion_point(field_get:shared.Trap.frames_in_patrol_cue)
  return frames_in_patrol_cue_;
}
inline void Trap::set_frames_in_patrol_cue(::google::protobuf::int32 value) {
  
  frames_in_patrol_cue_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.frames_in_patrol_cue)
}

// int32 waiving_patrol_cue_id = 9;
inline void Trap::clear_waiving_patrol_cue_id() {
  waiving_patrol_cue_id_ = 0;
}
inline ::google::protobuf::int32 Trap::waiving_patrol_cue_id() const {
  // @@protoc_insertion_point(field_get:shared.Trap.waiving_patrol_cue_id)
  return waiving_patrol_cue_id_;
}
inline void Trap::set_waiving_patrol_cue_id(::google::protobuf::int32 value) {
  
  waiving_patrol_cue_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.waiving_patrol_cue_id)
}

// bool waiving_spontaneous_patrol = 10;
inline void Trap::clear_waiving_spontaneous_patrol() {
  waiving_spontaneous_patrol_ = false;
}
inline bool Trap::waiving_spontaneous_patrol() const {
  // @@protoc_insertion_point(field_get:shared.Trap.waiving_spontaneous_patrol)
  return waiving_spontaneous_patrol_;
}
inline void Trap::set_waiving_spontaneous_patrol(bool value) {
  
  waiving_spontaneous_patrol_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.waiving_spontaneous_patrol)
}

// int32 subscribes_to_trigger_local_id = 11;
inline void Trap::clear_subscribes_to_trigger_local_id() {
  subscribes_to_trigger_local_id_ = 0;
}
inline ::google::protobuf::int32 Trap::subscribes_to_trigger_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Trap.subscribes_to_trigger_local_id)
  return subscribes_to_trigger_local_id_;
}
inline void Trap::set_subscribes_to_trigger_local_id(::google::protobuf::int32 value) {
  
  subscribes_to_trigger_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.subscribes_to_trigger_local_id)
}

// int32 subscribes_to_trigger_local_id_alt = 12;
inline void Trap::clear_subscribes_to_trigger_local_id_alt() {
  subscribes_to_trigger_local_id_alt_ = 0;
}
inline ::google::protobuf::int32 Trap::subscribes_to_trigger_local_id_alt() const {
  // @@protoc_insertion_point(field_get:shared.Trap.subscribes_to_trigger_local_id_alt)
  return subscribes_to_trigger_local_id_alt_;
}
inline void Trap::set_subscribes_to_trigger_local_id_alt(::google::protobuf::int32 value) {
  
  subscribes_to_trigger_local_id_alt_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.subscribes_to_trigger_local_id_alt)
}

// float spin_cos = 13;
inline void Trap::clear_spin_cos() {
  spin_cos_ = 0;
}
inline float Trap::spin_cos() const {
  // @@protoc_insertion_point(field_get:shared.Trap.spin_cos)
  return spin_cos_;
}
inline void Trap::set_spin_cos(float value) {
  
  spin_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.spin_cos)
}

// float spin_sin = 14;
inline void Trap::clear_spin_sin() {
  spin_sin_ = 0;
}
inline float Trap::spin_sin() const {
  // @@protoc_insertion_point(field_get:shared.Trap.spin_sin)
  return spin_sin_;
}
inline void Trap::set_spin_sin(float value) {
  
  spin_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.spin_sin)
}

// float angular_frame_vel_cos = 15;
inline void Trap::clear_angular_frame_vel_cos() {
  angular_frame_vel_cos_ = 0;
}
inline float Trap::angular_frame_vel_cos() const {
  // @@protoc_insertion_point(field_get:shared.Trap.angular_frame_vel_cos)
  return angular_frame_vel_cos_;
}
inline void Trap::set_angular_frame_vel_cos(float value) {
  
  angular_frame_vel_cos_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.angular_frame_vel_cos)
}

// float angular_frame_vel_sin = 16;
inline void Trap::clear_angular_frame_vel_sin() {
  angular_frame_vel_sin_ = 0;
}
inline float Trap::angular_frame_vel_sin() const {
  // @@protoc_insertion_point(field_get:shared.Trap.angular_frame_vel_sin)
  return angular_frame_vel_sin_;
}
inline void Trap::set_angular_frame_vel_sin(float value) {
  
  angular_frame_vel_sin_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.angular_frame_vel_sin)
}

// float x = 17;
inline void Trap::clear_x() {
  x_ = 0;
}
inline float Trap::x() const {
  // @@protoc_insertion_point(field_get:shared.Trap.x)
  return x_;
}
inline void Trap::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.x)
}

// float y = 18;
inline void Trap::clear_y() {
  y_ = 0;
}
inline float Trap::y() const {
  // @@protoc_insertion_point(field_get:shared.Trap.y)
  return y_;
}
inline void Trap::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.y)
}

// int32 dir_x = 19;
inline void Trap::clear_dir_x() {
  dir_x_ = 0;
}
inline ::google::protobuf::int32 Trap::dir_x() const {
  // @@protoc_insertion_point(field_get:shared.Trap.dir_x)
  return dir_x_;
}
inline void Trap::set_dir_x(::google::protobuf::int32 value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.dir_x)
}

// int32 dir_y = 20;
inline void Trap::clear_dir_y() {
  dir_y_ = 0;
}
inline ::google::protobuf::int32 Trap::dir_y() const {
  // @@protoc_insertion_point(field_get:shared.Trap.dir_y)
  return dir_y_;
}
inline void Trap::set_dir_y(::google::protobuf::int32 value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.dir_y)
}

// float vel_x = 21;
inline void Trap::clear_vel_x() {
  vel_x_ = 0;
}
inline float Trap::vel_x() const {
  // @@protoc_insertion_point(field_get:shared.Trap.vel_x)
  return vel_x_;
}
inline void Trap::set_vel_x(float value) {
  
  vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.vel_x)
}

// float vel_y = 22;
inline void Trap::clear_vel_y() {
  vel_y_ = 0;
}
inline float Trap::vel_y() const {
  // @@protoc_insertion_point(field_get:shared.Trap.vel_y)
  return vel_y_;
}
inline void Trap::set_vel_y(float value) {
  
  vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.Trap.vel_y)
}

// -------------------------------------------------------------------

// TriggerConfig

// int32 species_id = 1;
inline void TriggerConfig::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 TriggerConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfig.species_id)
  return species_id_;
}
inline void TriggerConfig::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfig.species_id)
}

// string species_name = 2;
inline void TriggerConfig::clear_species_name() {
  species_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerConfig::species_name() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfig.species_name)
  return species_name_.GetNoArena();
}
inline void TriggerConfig::set_species_name(const ::std::string& value) {
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.TriggerConfig.species_name)
}
#if LANG_CXX11
inline void TriggerConfig::set_species_name(::std::string&& value) {
  
  species_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.TriggerConfig.species_name)
}
#endif
inline void TriggerConfig::set_species_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.TriggerConfig.species_name)
}
inline void TriggerConfig::set_species_name(const char* value, size_t size) {
  
  species_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.TriggerConfig.species_name)
}
inline ::std::string* TriggerConfig::mutable_species_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.TriggerConfig.species_name)
  return species_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerConfig::release_species_name() {
  // @@protoc_insertion_point(field_release:shared.TriggerConfig.species_name)
  
  return species_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerConfig::set_allocated_species_name(::std::string* species_name) {
  if (species_name != nullptr) {
    
  } else {
    
  }
  species_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), species_name);
  // @@protoc_insertion_point(field_set_allocated:shared.TriggerConfig.species_name)
}

// .shared.TriggerType trigger_type = 3;
inline void TriggerConfig::clear_trigger_type() {
  trigger_type_ = 0;
}
inline ::shared::TriggerType TriggerConfig::trigger_type() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfig.trigger_type)
  return static_cast< ::shared::TriggerType >(trigger_type_);
}
inline void TriggerConfig::set_trigger_type(::shared::TriggerType value) {
  
  trigger_type_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfig.trigger_type)
}

// uint64 collision_type_mask = 4;
inline void TriggerConfig::clear_collision_type_mask() {
  collision_type_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TriggerConfig::collision_type_mask() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfig.collision_type_mask)
  return collision_type_mask_;
}
inline void TriggerConfig::set_collision_type_mask(::google::protobuf::uint64 value) {
  
  collision_type_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfig.collision_type_mask)
}

// -------------------------------------------------------------------

// PeerUdpAddr

// string ip = 1;
inline void PeerUdpAddr::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PeerUdpAddr::ip() const {
  // @@protoc_insertion_point(field_get:shared.PeerUdpAddr.ip)
  return ip_.GetNoArena();
}
inline void PeerUdpAddr::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.PeerUdpAddr.ip)
}
#if LANG_CXX11
inline void PeerUdpAddr::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.PeerUdpAddr.ip)
}
#endif
inline void PeerUdpAddr::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.PeerUdpAddr.ip)
}
inline void PeerUdpAddr::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.PeerUdpAddr.ip)
}
inline ::std::string* PeerUdpAddr::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:shared.PeerUdpAddr.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PeerUdpAddr::release_ip() {
  // @@protoc_insertion_point(field_release:shared.PeerUdpAddr.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PeerUdpAddr::set_allocated_ip(::std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:shared.PeerUdpAddr.ip)
}

// int32 port = 2;
inline void PeerUdpAddr::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 PeerUdpAddr::port() const {
  // @@protoc_insertion_point(field_get:shared.PeerUdpAddr.port)
  return port_;
}
inline void PeerUdpAddr::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:shared.PeerUdpAddr.port)
}

// int32 auth_key = 3;
inline void PeerUdpAddr::clear_auth_key() {
  auth_key_ = 0;
}
inline ::google::protobuf::int32 PeerUdpAddr::auth_key() const {
  // @@protoc_insertion_point(field_get:shared.PeerUdpAddr.auth_key)
  return auth_key_;
}
inline void PeerUdpAddr::set_auth_key(::google::protobuf::int32 value) {
  
  auth_key_ = value;
  // @@protoc_insertion_point(field_set:shared.PeerUdpAddr.auth_key)
}

// uint32 seq_no = 4;
inline void PeerUdpAddr::clear_seq_no() {
  seq_no_ = 0u;
}
inline ::google::protobuf::uint32 PeerUdpAddr::seq_no() const {
  // @@protoc_insertion_point(field_get:shared.PeerUdpAddr.seq_no)
  return seq_no_;
}
inline void PeerUdpAddr::set_seq_no(::google::protobuf::uint32 value) {
  
  seq_no_ = value;
  // @@protoc_insertion_point(field_set:shared.PeerUdpAddr.seq_no)
}

// -------------------------------------------------------------------

// BattleColliderInfo

// string stage_name = 1;
inline void BattleColliderInfo::clear_stage_name() {
  stage_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BattleColliderInfo::stage_name() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.stage_name)
  return stage_name_.GetNoArena();
}
inline void BattleColliderInfo::set_stage_name(const ::std::string& value) {
  
  stage_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.stage_name)
}
#if LANG_CXX11
inline void BattleColliderInfo::set_stage_name(::std::string&& value) {
  
  stage_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.BattleColliderInfo.stage_name)
}
#endif
inline void BattleColliderInfo::set_stage_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stage_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.BattleColliderInfo.stage_name)
}
inline void BattleColliderInfo::set_stage_name(const char* value, size_t size) {
  
  stage_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.BattleColliderInfo.stage_name)
}
inline ::std::string* BattleColliderInfo::mutable_stage_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.BattleColliderInfo.stage_name)
  return stage_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BattleColliderInfo::release_stage_name() {
  // @@protoc_insertion_point(field_release:shared.BattleColliderInfo.stage_name)
  
  return stage_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BattleColliderInfo::set_allocated_stage_name(::std::string* stage_name) {
  if (stage_name != nullptr) {
    
  } else {
    
  }
  stage_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stage_name);
  // @@protoc_insertion_point(field_set_allocated:shared.BattleColliderInfo.stage_name)
}

// int32 bound_room_id = 2;
inline void BattleColliderInfo::clear_bound_room_id() {
  bound_room_id_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::bound_room_id() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.bound_room_id)
  return bound_room_id_;
}
inline void BattleColliderInfo::set_bound_room_id(::google::protobuf::int32 value) {
  
  bound_room_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.bound_room_id)
}

// int64 battle_duration_frames = 3;
inline void BattleColliderInfo::clear_battle_duration_frames() {
  battle_duration_frames_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 BattleColliderInfo::battle_duration_frames() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.battle_duration_frames)
  return battle_duration_frames_;
}
inline void BattleColliderInfo::set_battle_duration_frames(::google::protobuf::int64 value) {
  
  battle_duration_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.battle_duration_frames)
}

// int32 input_frame_upsync_delay_tolerance = 4;
inline void BattleColliderInfo::clear_input_frame_upsync_delay_tolerance() {
  input_frame_upsync_delay_tolerance_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::input_frame_upsync_delay_tolerance() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.input_frame_upsync_delay_tolerance)
  return input_frame_upsync_delay_tolerance_;
}
inline void BattleColliderInfo::set_input_frame_upsync_delay_tolerance(::google::protobuf::int32 value) {
  
  input_frame_upsync_delay_tolerance_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.input_frame_upsync_delay_tolerance)
}

// int32 max_chasing_render_frames_per_update = 5;
inline void BattleColliderInfo::clear_max_chasing_render_frames_per_update() {
  max_chasing_render_frames_per_update_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::max_chasing_render_frames_per_update() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.max_chasing_render_frames_per_update)
  return max_chasing_render_frames_per_update_;
}
inline void BattleColliderInfo::set_max_chasing_render_frames_per_update(::google::protobuf::int32 value) {
  
  max_chasing_render_frames_per_update_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.max_chasing_render_frames_per_update)
}

// double rollback_estimated_dt_millis = 6;
inline void BattleColliderInfo::clear_rollback_estimated_dt_millis() {
  rollback_estimated_dt_millis_ = 0;
}
inline double BattleColliderInfo::rollback_estimated_dt_millis() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.rollback_estimated_dt_millis)
  return rollback_estimated_dt_millis_;
}
inline void BattleColliderInfo::set_rollback_estimated_dt_millis(double value) {
  
  rollback_estimated_dt_millis_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.rollback_estimated_dt_millis)
}

// int64 rollback_estimated_dt_nanos = 7;
inline void BattleColliderInfo::clear_rollback_estimated_dt_nanos() {
  rollback_estimated_dt_nanos_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 BattleColliderInfo::rollback_estimated_dt_nanos() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.rollback_estimated_dt_nanos)
  return rollback_estimated_dt_nanos_;
}
inline void BattleColliderInfo::set_rollback_estimated_dt_nanos(::google::protobuf::int64 value) {
  
  rollback_estimated_dt_nanos_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.rollback_estimated_dt_nanos)
}

// int32 render_buffer_size = 8;
inline void BattleColliderInfo::clear_render_buffer_size() {
  render_buffer_size_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::render_buffer_size() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.render_buffer_size)
  return render_buffer_size_;
}
inline void BattleColliderInfo::set_render_buffer_size(::google::protobuf::int32 value) {
  
  render_buffer_size_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.render_buffer_size)
}

// int32 collision_min_step = 9;
inline void BattleColliderInfo::clear_collision_min_step() {
  collision_min_step_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::collision_min_step() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.collision_min_step)
  return collision_min_step_;
}
inline void BattleColliderInfo::set_collision_min_step(::google::protobuf::int32 value) {
  
  collision_min_step_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.collision_min_step)
}

// int32 bound_room_capacity = 10;
inline void BattleColliderInfo::clear_bound_room_capacity() {
  bound_room_capacity_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::bound_room_capacity() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.bound_room_capacity)
  return bound_room_capacity_;
}
inline void BattleColliderInfo::set_bound_room_capacity(::google::protobuf::int32 value) {
  
  bound_room_capacity_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.bound_room_capacity)
}

// int32 prealloc_npc_capacity = 11;
inline void BattleColliderInfo::clear_prealloc_npc_capacity() {
  prealloc_npc_capacity_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::prealloc_npc_capacity() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.prealloc_npc_capacity)
  return prealloc_npc_capacity_;
}
inline void BattleColliderInfo::set_prealloc_npc_capacity(::google::protobuf::int32 value) {
  
  prealloc_npc_capacity_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.prealloc_npc_capacity)
}

// int32 prealloc_bullet_capacity = 12;
inline void BattleColliderInfo::clear_prealloc_bullet_capacity() {
  prealloc_bullet_capacity_ = 0;
}
inline ::google::protobuf::int32 BattleColliderInfo::prealloc_bullet_capacity() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.prealloc_bullet_capacity)
  return prealloc_bullet_capacity_;
}
inline void BattleColliderInfo::set_prealloc_bullet_capacity(::google::protobuf::int32 value) {
  
  prealloc_bullet_capacity_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.prealloc_bullet_capacity)
}

// .shared.PeerUdpAddr battle_udp_tunnel = 1024;
inline bool BattleColliderInfo::has_battle_udp_tunnel() const {
  return this != internal_default_instance() && battle_udp_tunnel_ != nullptr;
}
inline void BattleColliderInfo::clear_battle_udp_tunnel() {
  if (GetArenaNoVirtual() == nullptr && battle_udp_tunnel_ != nullptr) {
    delete battle_udp_tunnel_;
  }
  battle_udp_tunnel_ = nullptr;
}
inline const ::shared::PeerUdpAddr& BattleColliderInfo::battle_udp_tunnel() const {
  const ::shared::PeerUdpAddr* p = battle_udp_tunnel_;
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.battle_udp_tunnel)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::PeerUdpAddr*>(
      &::shared::_PeerUdpAddr_default_instance_);
}
inline ::shared::PeerUdpAddr* BattleColliderInfo::release_battle_udp_tunnel() {
  // @@protoc_insertion_point(field_release:shared.BattleColliderInfo.battle_udp_tunnel)
  
  ::shared::PeerUdpAddr* temp = battle_udp_tunnel_;
  battle_udp_tunnel_ = nullptr;
  return temp;
}
inline ::shared::PeerUdpAddr* BattleColliderInfo::mutable_battle_udp_tunnel() {
  
  if (battle_udp_tunnel_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::PeerUdpAddr>(GetArenaNoVirtual());
    battle_udp_tunnel_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.BattleColliderInfo.battle_udp_tunnel)
  return battle_udp_tunnel_;
}
inline void BattleColliderInfo::set_allocated_battle_udp_tunnel(::shared::PeerUdpAddr* battle_udp_tunnel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete battle_udp_tunnel_;
  }
  if (battle_udp_tunnel) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      battle_udp_tunnel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, battle_udp_tunnel, submessage_arena);
    }
    
  } else {
    
  }
  battle_udp_tunnel_ = battle_udp_tunnel;
  // @@protoc_insertion_point(field_set_allocated:shared.BattleColliderInfo.battle_udp_tunnel)
}

// bool frame_log_enabled = 1025;
inline void BattleColliderInfo::clear_frame_log_enabled() {
  frame_log_enabled_ = false;
}
inline bool BattleColliderInfo::frame_log_enabled() const {
  // @@protoc_insertion_point(field_get:shared.BattleColliderInfo.frame_log_enabled)
  return frame_log_enabled_;
}
inline void BattleColliderInfo::set_frame_log_enabled(bool value) {
  
  frame_log_enabled_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleColliderInfo.frame_log_enabled)
}

// -------------------------------------------------------------------

// RenderFrame

// int32 id = 1;
inline void RenderFrame::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 RenderFrame::id() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.id)
  return id_;
}
inline void RenderFrame::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.id)
}

// repeated .shared.CharacterDownsync players_arr = 2;
inline int RenderFrame::players_arr_size() const {
  return players_arr_.size();
}
inline void RenderFrame::clear_players_arr() {
  players_arr_.Clear();
}
inline ::shared::CharacterDownsync* RenderFrame::mutable_players_arr(int index) {
  // @@protoc_insertion_point(field_mutable:shared.RenderFrame.players_arr)
  return players_arr_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >*
RenderFrame::mutable_players_arr() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.players_arr)
  return &players_arr_;
}
inline const ::shared::CharacterDownsync& RenderFrame::players_arr(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.players_arr)
  return players_arr_.Get(index);
}
inline ::shared::CharacterDownsync* RenderFrame::add_players_arr() {
  // @@protoc_insertion_point(field_add:shared.RenderFrame.players_arr)
  return players_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >&
RenderFrame::players_arr() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.players_arr)
  return players_arr_;
}

// int64 countdown_nanos = 3;
inline void RenderFrame::clear_countdown_nanos() {
  countdown_nanos_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 RenderFrame::countdown_nanos() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.countdown_nanos)
  return countdown_nanos_;
}
inline void RenderFrame::set_countdown_nanos(::google::protobuf::int64 value) {
  
  countdown_nanos_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.countdown_nanos)
}

// repeated .shared.Bullet bullets = 4;
inline int RenderFrame::bullets_size() const {
  return bullets_.size();
}
inline void RenderFrame::clear_bullets() {
  bullets_.Clear();
}
inline ::shared::Bullet* RenderFrame::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:shared.RenderFrame.bullets)
  return bullets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::Bullet >*
RenderFrame::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.bullets)
  return &bullets_;
}
inline const ::shared::Bullet& RenderFrame::bullets(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.bullets)
  return bullets_.Get(index);
}
inline ::shared::Bullet* RenderFrame::add_bullets() {
  // @@protoc_insertion_point(field_add:shared.RenderFrame.bullets)
  return bullets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::Bullet >&
RenderFrame::bullets() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.bullets)
  return bullets_;
}

// repeated .shared.CharacterDownsync npcs_arr = 5;
inline int RenderFrame::npcs_arr_size() const {
  return npcs_arr_.size();
}
inline void RenderFrame::clear_npcs_arr() {
  npcs_arr_.Clear();
}
inline ::shared::CharacterDownsync* RenderFrame::mutable_npcs_arr(int index) {
  // @@protoc_insertion_point(field_mutable:shared.RenderFrame.npcs_arr)
  return npcs_arr_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >*
RenderFrame::mutable_npcs_arr() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.npcs_arr)
  return &npcs_arr_;
}
inline const ::shared::CharacterDownsync& RenderFrame::npcs_arr(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.npcs_arr)
  return npcs_arr_.Get(index);
}
inline ::shared::CharacterDownsync* RenderFrame::add_npcs_arr() {
  // @@protoc_insertion_point(field_add:shared.RenderFrame.npcs_arr)
  return npcs_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::CharacterDownsync >&
RenderFrame::npcs_arr() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.npcs_arr)
  return npcs_arr_;
}

// repeated .shared.Trap traps_arr = 6;
inline int RenderFrame::traps_arr_size() const {
  return traps_arr_.size();
}
inline void RenderFrame::clear_traps_arr() {
  traps_arr_.Clear();
}
inline ::shared::Trap* RenderFrame::mutable_traps_arr(int index) {
  // @@protoc_insertion_point(field_mutable:shared.RenderFrame.traps_arr)
  return traps_arr_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::Trap >*
RenderFrame::mutable_traps_arr() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.traps_arr)
  return &traps_arr_;
}
inline const ::shared::Trap& RenderFrame::traps_arr(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.traps_arr)
  return traps_arr_.Get(index);
}
inline ::shared::Trap* RenderFrame::add_traps_arr() {
  // @@protoc_insertion_point(field_add:shared.RenderFrame.traps_arr)
  return traps_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::Trap >&
RenderFrame::traps_arr() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.traps_arr)
  return traps_arr_;
}

// repeated .shared.Trigger triggers_arr = 7;
inline int RenderFrame::triggers_arr_size() const {
  return triggers_arr_.size();
}
inline void RenderFrame::clear_triggers_arr() {
  triggers_arr_.Clear();
}
inline ::shared::Trigger* RenderFrame::mutable_triggers_arr(int index) {
  // @@protoc_insertion_point(field_mutable:shared.RenderFrame.triggers_arr)
  return triggers_arr_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::Trigger >*
RenderFrame::mutable_triggers_arr() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.triggers_arr)
  return &triggers_arr_;
}
inline const ::shared::Trigger& RenderFrame::triggers_arr(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.triggers_arr)
  return triggers_arr_.Get(index);
}
inline ::shared::Trigger* RenderFrame::add_triggers_arr() {
  // @@protoc_insertion_point(field_add:shared.RenderFrame.triggers_arr)
  return triggers_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::Trigger >&
RenderFrame::triggers_arr() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.triggers_arr)
  return triggers_arr_;
}

// repeated .shared.Pickable pickables = 10;
inline int RenderFrame::pickables_size() const {
  return pickables_.size();
}
inline void RenderFrame::clear_pickables() {
  pickables_.Clear();
}
inline ::shared::Pickable* RenderFrame::mutable_pickables(int index) {
  // @@protoc_insertion_point(field_mutable:shared.RenderFrame.pickables)
  return pickables_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::Pickable >*
RenderFrame::mutable_pickables() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.pickables)
  return &pickables_;
}
inline const ::shared::Pickable& RenderFrame::pickables(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.pickables)
  return pickables_.Get(index);
}
inline ::shared::Pickable* RenderFrame::add_pickables() {
  // @@protoc_insertion_point(field_add:shared.RenderFrame.pickables)
  return pickables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::Pickable >&
RenderFrame::pickables() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.pickables)
  return pickables_;
}

// uint64 backend_unconfirmed_mask = 1024;
inline void RenderFrame::clear_backend_unconfirmed_mask() {
  backend_unconfirmed_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RenderFrame::backend_unconfirmed_mask() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.backend_unconfirmed_mask)
  return backend_unconfirmed_mask_;
}
inline void RenderFrame::set_backend_unconfirmed_mask(::google::protobuf::uint64 value) {
  
  backend_unconfirmed_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.backend_unconfirmed_mask)
}

// bool should_force_resync = 1025;
inline void RenderFrame::clear_should_force_resync() {
  should_force_resync_ = false;
}
inline bool RenderFrame::should_force_resync() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.should_force_resync)
  return should_force_resync_;
}
inline void RenderFrame::set_should_force_resync(bool value) {
  
  should_force_resync_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.should_force_resync)
}

// repeated int32 species_id_list = 1026;
inline int RenderFrame::species_id_list_size() const {
  return species_id_list_.size();
}
inline void RenderFrame::clear_species_id_list() {
  species_id_list_.Clear();
}
inline ::google::protobuf::int32 RenderFrame::species_id_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.species_id_list)
  return species_id_list_.Get(index);
}
inline void RenderFrame::set_species_id_list(int index, ::google::protobuf::int32 value) {
  species_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.RenderFrame.species_id_list)
}
inline void RenderFrame::add_species_id_list(::google::protobuf::int32 value) {
  species_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.RenderFrame.species_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RenderFrame::species_id_list() const {
  // @@protoc_insertion_point(field_list:shared.RenderFrame.species_id_list)
  return species_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RenderFrame::mutable_species_id_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.RenderFrame.species_id_list)
  return &species_id_list_;
}

// int32 bullet_local_id_counter = 1027;
inline void RenderFrame::clear_bullet_local_id_counter() {
  bullet_local_id_counter_ = 0;
}
inline ::google::protobuf::int32 RenderFrame::bullet_local_id_counter() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.bullet_local_id_counter)
  return bullet_local_id_counter_;
}
inline void RenderFrame::set_bullet_local_id_counter(::google::protobuf::int32 value) {
  
  bullet_local_id_counter_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.bullet_local_id_counter)
}

// int32 npc_local_id_counter = 1028;
inline void RenderFrame::clear_npc_local_id_counter() {
  npc_local_id_counter_ = 0;
}
inline ::google::protobuf::int32 RenderFrame::npc_local_id_counter() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.npc_local_id_counter)
  return npc_local_id_counter_;
}
inline void RenderFrame::set_npc_local_id_counter(::google::protobuf::int32 value) {
  
  npc_local_id_counter_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.npc_local_id_counter)
}

// int32 participant_change_id = 1029;
inline void RenderFrame::clear_participant_change_id() {
  participant_change_id_ = 0;
}
inline ::google::protobuf::int32 RenderFrame::participant_change_id() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.participant_change_id)
  return participant_change_id_;
}
inline void RenderFrame::set_participant_change_id(::google::protobuf::int32 value) {
  
  participant_change_id_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.participant_change_id)
}

// int32 pickable_local_id_counter = 1030;
inline void RenderFrame::clear_pickable_local_id_counter() {
  pickable_local_id_counter_ = 0;
}
inline ::google::protobuf::int32 RenderFrame::pickable_local_id_counter() const {
  // @@protoc_insertion_point(field_get:shared.RenderFrame.pickable_local_id_counter)
  return pickable_local_id_counter_;
}
inline void RenderFrame::set_pickable_local_id_counter(::google::protobuf::int32 value) {
  
  pickable_local_id_counter_ = value;
  // @@protoc_insertion_point(field_set:shared.RenderFrame.pickable_local_id_counter)
}

// -------------------------------------------------------------------

// WsResp

// int32 ret = 1;
inline void WsResp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 WsResp::ret() const {
  // @@protoc_insertion_point(field_get:shared.WsResp.ret)
  return ret_;
}
inline void WsResp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:shared.WsResp.ret)
}

// int32 act = 2;
inline void WsResp::clear_act() {
  act_ = 0;
}
inline ::google::protobuf::int32 WsResp::act() const {
  // @@protoc_insertion_point(field_get:shared.WsResp.act)
  return act_;
}
inline void WsResp::set_act(::google::protobuf::int32 value) {
  
  act_ = value;
  // @@protoc_insertion_point(field_set:shared.WsResp.act)
}

// .shared.RenderFrame rdf = 3;
inline bool WsResp::has_rdf() const {
  return this != internal_default_instance() && rdf_ != nullptr;
}
inline void WsResp::clear_rdf() {
  if (GetArenaNoVirtual() == nullptr && rdf_ != nullptr) {
    delete rdf_;
  }
  rdf_ = nullptr;
}
inline const ::shared::RenderFrame& WsResp::rdf() const {
  const ::shared::RenderFrame* p = rdf_;
  // @@protoc_insertion_point(field_get:shared.WsResp.rdf)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::RenderFrame*>(
      &::shared::_RenderFrame_default_instance_);
}
inline ::shared::RenderFrame* WsResp::release_rdf() {
  // @@protoc_insertion_point(field_release:shared.WsResp.rdf)
  
  ::shared::RenderFrame* temp = rdf_;
  rdf_ = nullptr;
  return temp;
}
inline ::shared::RenderFrame* WsResp::mutable_rdf() {
  
  if (rdf_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::RenderFrame>(GetArenaNoVirtual());
    rdf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.WsResp.rdf)
  return rdf_;
}
inline void WsResp::set_allocated_rdf(::shared::RenderFrame* rdf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rdf_;
  }
  if (rdf) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rdf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rdf, submessage_arena);
    }
    
  } else {
    
  }
  rdf_ = rdf;
  // @@protoc_insertion_point(field_set_allocated:shared.WsResp.rdf)
}

// repeated .shared.InputFrameDownsync input_frame_downsync_batch = 4;
inline int WsResp::input_frame_downsync_batch_size() const {
  return input_frame_downsync_batch_.size();
}
inline void WsResp::clear_input_frame_downsync_batch() {
  input_frame_downsync_batch_.Clear();
}
inline ::shared::InputFrameDownsync* WsResp::mutable_input_frame_downsync_batch(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsResp.input_frame_downsync_batch)
  return input_frame_downsync_batch_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >*
WsResp::mutable_input_frame_downsync_batch() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsResp.input_frame_downsync_batch)
  return &input_frame_downsync_batch_;
}
inline const ::shared::InputFrameDownsync& WsResp::input_frame_downsync_batch(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsResp.input_frame_downsync_batch)
  return input_frame_downsync_batch_.Get(index);
}
inline ::shared::InputFrameDownsync* WsResp::add_input_frame_downsync_batch() {
  // @@protoc_insertion_point(field_add:shared.WsResp.input_frame_downsync_batch)
  return input_frame_downsync_batch_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::InputFrameDownsync >&
WsResp::input_frame_downsync_batch() const {
  // @@protoc_insertion_point(field_list:shared.WsResp.input_frame_downsync_batch)
  return input_frame_downsync_batch_;
}

// .shared.BattleColliderInfo bci_frame = 5;
inline bool WsResp::has_bci_frame() const {
  return this != internal_default_instance() && bci_frame_ != nullptr;
}
inline void WsResp::clear_bci_frame() {
  if (GetArenaNoVirtual() == nullptr && bci_frame_ != nullptr) {
    delete bci_frame_;
  }
  bci_frame_ = nullptr;
}
inline const ::shared::BattleColliderInfo& WsResp::bci_frame() const {
  const ::shared::BattleColliderInfo* p = bci_frame_;
  // @@protoc_insertion_point(field_get:shared.WsResp.bci_frame)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::BattleColliderInfo*>(
      &::shared::_BattleColliderInfo_default_instance_);
}
inline ::shared::BattleColliderInfo* WsResp::release_bci_frame() {
  // @@protoc_insertion_point(field_release:shared.WsResp.bci_frame)
  
  ::shared::BattleColliderInfo* temp = bci_frame_;
  bci_frame_ = nullptr;
  return temp;
}
inline ::shared::BattleColliderInfo* WsResp::mutable_bci_frame() {
  
  if (bci_frame_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::BattleColliderInfo>(GetArenaNoVirtual());
    bci_frame_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.WsResp.bci_frame)
  return bci_frame_;
}
inline void WsResp::set_allocated_bci_frame(::shared::BattleColliderInfo* bci_frame) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bci_frame_;
  }
  if (bci_frame) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bci_frame = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bci_frame, submessage_arena);
    }
    
  } else {
    
  }
  bci_frame_ = bci_frame;
  // @@protoc_insertion_point(field_set_allocated:shared.WsResp.bci_frame)
}

// int32 peer_join_index = 6;
inline void WsResp::clear_peer_join_index() {
  peer_join_index_ = 0;
}
inline ::google::protobuf::int32 WsResp::peer_join_index() const {
  // @@protoc_insertion_point(field_get:shared.WsResp.peer_join_index)
  return peer_join_index_;
}
inline void WsResp::set_peer_join_index(::google::protobuf::int32 value) {
  
  peer_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.WsResp.peer_join_index)
}

// repeated .shared.PeerUdpAddr peer_udp_addr_list = 7;
inline int WsResp::peer_udp_addr_list_size() const {
  return peer_udp_addr_list_.size();
}
inline void WsResp::clear_peer_udp_addr_list() {
  peer_udp_addr_list_.Clear();
}
inline ::shared::PeerUdpAddr* WsResp::mutable_peer_udp_addr_list(int index) {
  // @@protoc_insertion_point(field_mutable:shared.WsResp.peer_udp_addr_list)
  return peer_udp_addr_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::PeerUdpAddr >*
WsResp::mutable_peer_udp_addr_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.WsResp.peer_udp_addr_list)
  return &peer_udp_addr_list_;
}
inline const ::shared::PeerUdpAddr& WsResp::peer_udp_addr_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.WsResp.peer_udp_addr_list)
  return peer_udp_addr_list_.Get(index);
}
inline ::shared::PeerUdpAddr* WsResp::add_peer_udp_addr_list() {
  // @@protoc_insertion_point(field_add:shared.WsResp.peer_udp_addr_list)
  return peer_udp_addr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::PeerUdpAddr >&
WsResp::peer_udp_addr_list() const {
  // @@protoc_insertion_point(field_list:shared.WsResp.peer_udp_addr_list)
  return peer_udp_addr_list_;
}

// string err_msg = 2048;
inline void WsResp::clear_err_msg() {
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WsResp::err_msg() const {
  // @@protoc_insertion_point(field_get:shared.WsResp.err_msg)
  return err_msg_.GetNoArena();
}
inline void WsResp::set_err_msg(const ::std::string& value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.WsResp.err_msg)
}
#if LANG_CXX11
inline void WsResp::set_err_msg(::std::string&& value) {
  
  err_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.WsResp.err_msg)
}
#endif
inline void WsResp::set_err_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.WsResp.err_msg)
}
inline void WsResp::set_err_msg(const char* value, size_t size) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.WsResp.err_msg)
}
inline ::std::string* WsResp::mutable_err_msg() {
  
  // @@protoc_insertion_point(field_mutable:shared.WsResp.err_msg)
  return err_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WsResp::release_err_msg() {
  // @@protoc_insertion_point(field_release:shared.WsResp.err_msg)
  
  return err_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WsResp::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != nullptr) {
    
  } else {
    
  }
  err_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_msg);
  // @@protoc_insertion_point(field_set_allocated:shared.WsResp.err_msg)
}

// -------------------------------------------------------------------

// Skill

// int32 battle_local_id = 1;
inline void Skill::clear_battle_local_id() {
  battle_local_id_ = 0;
}
inline ::google::protobuf::int32 Skill::battle_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Skill.battle_local_id)
  return battle_local_id_;
}
inline void Skill::set_battle_local_id(::google::protobuf::int32 value) {
  
  battle_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.battle_local_id)
}

// int32 recovery_frames = 2;
inline void Skill::clear_recovery_frames() {
  recovery_frames_ = 0;
}
inline ::google::protobuf::int32 Skill::recovery_frames() const {
  // @@protoc_insertion_point(field_get:shared.Skill.recovery_frames)
  return recovery_frames_;
}
inline void Skill::set_recovery_frames(::google::protobuf::int32 value) {
  
  recovery_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.recovery_frames)
}

// int32 recovery_frames_on_block = 3;
inline void Skill::clear_recovery_frames_on_block() {
  recovery_frames_on_block_ = 0;
}
inline ::google::protobuf::int32 Skill::recovery_frames_on_block() const {
  // @@protoc_insertion_point(field_get:shared.Skill.recovery_frames_on_block)
  return recovery_frames_on_block_;
}
inline void Skill::set_recovery_frames_on_block(::google::protobuf::int32 value) {
  
  recovery_frames_on_block_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.recovery_frames_on_block)
}

// int32 recovery_frames_on_hit = 4;
inline void Skill::clear_recovery_frames_on_hit() {
  recovery_frames_on_hit_ = 0;
}
inline ::google::protobuf::int32 Skill::recovery_frames_on_hit() const {
  // @@protoc_insertion_point(field_get:shared.Skill.recovery_frames_on_hit)
  return recovery_frames_on_hit_;
}
inline void Skill::set_recovery_frames_on_hit(::google::protobuf::int32 value) {
  
  recovery_frames_on_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.recovery_frames_on_hit)
}

// .shared.SkillTriggerType trigger_type = 5;
inline void Skill::clear_trigger_type() {
  trigger_type_ = 0;
}
inline ::shared::SkillTriggerType Skill::trigger_type() const {
  // @@protoc_insertion_point(field_get:shared.Skill.trigger_type)
  return static_cast< ::shared::SkillTriggerType >(trigger_type_);
}
inline void Skill::set_trigger_type(::shared::SkillTriggerType value) {
  
  trigger_type_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.trigger_type)
}

// .shared.CharacterState bound_ch_state = 6;
inline void Skill::clear_bound_ch_state() {
  bound_ch_state_ = 0;
}
inline ::shared::CharacterState Skill::bound_ch_state() const {
  // @@protoc_insertion_point(field_get:shared.Skill.bound_ch_state)
  return static_cast< ::shared::CharacterState >(bound_ch_state_);
}
inline void Skill::set_bound_ch_state(::shared::CharacterState value) {
  
  bound_ch_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.bound_ch_state)
}

// .shared.CharacterState bound_ch_state_on_hit = 7;
inline void Skill::clear_bound_ch_state_on_hit() {
  bound_ch_state_on_hit_ = 0;
}
inline ::shared::CharacterState Skill::bound_ch_state_on_hit() const {
  // @@protoc_insertion_point(field_get:shared.Skill.bound_ch_state_on_hit)
  return static_cast< ::shared::CharacterState >(bound_ch_state_on_hit_);
}
inline void Skill::set_bound_ch_state_on_hit(::shared::CharacterState value) {
  
  bound_ch_state_on_hit_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.bound_ch_state_on_hit)
}

// int32 mp_delta = 8;
inline void Skill::clear_mp_delta() {
  mp_delta_ = 0;
}
inline ::google::protobuf::int32 Skill::mp_delta() const {
  // @@protoc_insertion_point(field_get:shared.Skill.mp_delta)
  return mp_delta_;
}
inline void Skill::set_mp_delta(::google::protobuf::int32 value) {
  
  mp_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.mp_delta)
}

// uint32 id = 9;
inline void Skill::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Skill::id() const {
  // @@protoc_insertion_point(field_get:shared.Skill.id)
  return id_;
}
inline void Skill::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:shared.Skill.id)
}

// repeated .shared.BulletConfig hits = 1024;
inline int Skill::hits_size() const {
  return hits_.size();
}
inline void Skill::clear_hits() {
  hits_.Clear();
}
inline ::shared::BulletConfig* Skill::mutable_hits(int index) {
  // @@protoc_insertion_point(field_mutable:shared.Skill.hits)
  return hits_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::BulletConfig >*
Skill::mutable_hits() {
  // @@protoc_insertion_point(field_mutable_list:shared.Skill.hits)
  return &hits_;
}
inline const ::shared::BulletConfig& Skill::hits(int index) const {
  // @@protoc_insertion_point(field_get:shared.Skill.hits)
  return hits_.Get(index);
}
inline ::shared::BulletConfig* Skill::add_hits() {
  // @@protoc_insertion_point(field_add:shared.Skill.hits)
  return hits_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::BulletConfig >&
Skill::hits() const {
  // @@protoc_insertion_point(field_list:shared.Skill.hits)
  return hits_;
}

// .shared.BuffConfig self_non_stock_buff = 1025;
inline bool Skill::has_self_non_stock_buff() const {
  return this != internal_default_instance() && self_non_stock_buff_ != nullptr;
}
inline void Skill::clear_self_non_stock_buff() {
  if (GetArenaNoVirtual() == nullptr && self_non_stock_buff_ != nullptr) {
    delete self_non_stock_buff_;
  }
  self_non_stock_buff_ = nullptr;
}
inline const ::shared::BuffConfig& Skill::self_non_stock_buff() const {
  const ::shared::BuffConfig* p = self_non_stock_buff_;
  // @@protoc_insertion_point(field_get:shared.Skill.self_non_stock_buff)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::BuffConfig*>(
      &::shared::_BuffConfig_default_instance_);
}
inline ::shared::BuffConfig* Skill::release_self_non_stock_buff() {
  // @@protoc_insertion_point(field_release:shared.Skill.self_non_stock_buff)
  
  ::shared::BuffConfig* temp = self_non_stock_buff_;
  self_non_stock_buff_ = nullptr;
  return temp;
}
inline ::shared::BuffConfig* Skill::mutable_self_non_stock_buff() {
  
  if (self_non_stock_buff_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::BuffConfig>(GetArenaNoVirtual());
    self_non_stock_buff_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.Skill.self_non_stock_buff)
  return self_non_stock_buff_;
}
inline void Skill::set_allocated_self_non_stock_buff(::shared::BuffConfig* self_non_stock_buff) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete self_non_stock_buff_;
  }
  if (self_non_stock_buff) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      self_non_stock_buff = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, self_non_stock_buff, submessage_arena);
    }
    
  } else {
    
  }
  self_non_stock_buff_ = self_non_stock_buff;
  // @@protoc_insertion_point(field_set_allocated:shared.Skill.self_non_stock_buff)
}

// -------------------------------------------------------------------

// FrameLog

// .shared.RenderFrame rdf = 1;
inline bool FrameLog::has_rdf() const {
  return this != internal_default_instance() && rdf_ != nullptr;
}
inline void FrameLog::clear_rdf() {
  if (GetArenaNoVirtual() == nullptr && rdf_ != nullptr) {
    delete rdf_;
  }
  rdf_ = nullptr;
}
inline const ::shared::RenderFrame& FrameLog::rdf() const {
  const ::shared::RenderFrame* p = rdf_;
  // @@protoc_insertion_point(field_get:shared.FrameLog.rdf)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::RenderFrame*>(
      &::shared::_RenderFrame_default_instance_);
}
inline ::shared::RenderFrame* FrameLog::release_rdf() {
  // @@protoc_insertion_point(field_release:shared.FrameLog.rdf)
  
  ::shared::RenderFrame* temp = rdf_;
  rdf_ = nullptr;
  return temp;
}
inline ::shared::RenderFrame* FrameLog::mutable_rdf() {
  
  if (rdf_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::RenderFrame>(GetArenaNoVirtual());
    rdf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.FrameLog.rdf)
  return rdf_;
}
inline void FrameLog::set_allocated_rdf(::shared::RenderFrame* rdf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rdf_;
  }
  if (rdf) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rdf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rdf, submessage_arena);
    }
    
  } else {
    
  }
  rdf_ = rdf;
  // @@protoc_insertion_point(field_set_allocated:shared.FrameLog.rdf)
}

// .shared.InputFrameDownsync actually_used_idf = 2;
inline bool FrameLog::has_actually_used_idf() const {
  return this != internal_default_instance() && actually_used_idf_ != nullptr;
}
inline void FrameLog::clear_actually_used_idf() {
  if (GetArenaNoVirtual() == nullptr && actually_used_idf_ != nullptr) {
    delete actually_used_idf_;
  }
  actually_used_idf_ = nullptr;
}
inline const ::shared::InputFrameDownsync& FrameLog::actually_used_idf() const {
  const ::shared::InputFrameDownsync* p = actually_used_idf_;
  // @@protoc_insertion_point(field_get:shared.FrameLog.actually_used_idf)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::InputFrameDownsync*>(
      &::shared::_InputFrameDownsync_default_instance_);
}
inline ::shared::InputFrameDownsync* FrameLog::release_actually_used_idf() {
  // @@protoc_insertion_point(field_release:shared.FrameLog.actually_used_idf)
  
  ::shared::InputFrameDownsync* temp = actually_used_idf_;
  actually_used_idf_ = nullptr;
  return temp;
}
inline ::shared::InputFrameDownsync* FrameLog::mutable_actually_used_idf() {
  
  if (actually_used_idf_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::InputFrameDownsync>(GetArenaNoVirtual());
    actually_used_idf_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.FrameLog.actually_used_idf)
  return actually_used_idf_;
}
inline void FrameLog::set_allocated_actually_used_idf(::shared::InputFrameDownsync* actually_used_idf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete actually_used_idf_;
  }
  if (actually_used_idf) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      actually_used_idf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actually_used_idf, submessage_arena);
    }
    
  } else {
    
  }
  actually_used_idf_ = actually_used_idf;
  // @@protoc_insertion_point(field_set_allocated:shared.FrameLog.actually_used_idf)
}

// -------------------------------------------------------------------

// BattleResult

// int32 winner_join_index = 1;
inline void BattleResult::clear_winner_join_index() {
  winner_join_index_ = 0;
}
inline ::google::protobuf::int32 BattleResult::winner_join_index() const {
  // @@protoc_insertion_point(field_get:shared.BattleResult.winner_join_index)
  return winner_join_index_;
}
inline void BattleResult::set_winner_join_index(::google::protobuf::int32 value) {
  
  winner_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleResult.winner_join_index)
}

// int32 winner_bullet_team_id = 2;
inline void BattleResult::clear_winner_bullet_team_id() {
  winner_bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 BattleResult::winner_bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.BattleResult.winner_bullet_team_id)
  return winner_bullet_team_id_;
}
inline void BattleResult::set_winner_bullet_team_id(::google::protobuf::int32 value) {
  
  winner_bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleResult.winner_bullet_team_id)
}

// -------------------------------------------------------------------

// DebuffConfig

// uint32 species_id = 1;
inline void DebuffConfig::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 DebuffConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.species_id)
  return species_id_;
}
inline void DebuffConfig::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.species_id)
}

// .shared.BuffStockType stock_type = 2;
inline void DebuffConfig::clear_stock_type() {
  stock_type_ = 0;
}
inline ::shared::BuffStockType DebuffConfig::stock_type() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.stock_type)
  return static_cast< ::shared::BuffStockType >(stock_type_);
}
inline void DebuffConfig::set_stock_type(::shared::BuffStockType value) {
  
  stock_type_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.stock_type)
}

// int32 stock = 3;
inline void DebuffConfig::clear_stock() {
  stock_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::stock() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.stock)
  return stock_;
}
inline void DebuffConfig::set_stock(::google::protobuf::int32 value) {
  
  stock_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.stock)
}

// .shared.DebuffType type = 4;
inline void DebuffConfig::clear_type() {
  type_ = 0;
}
inline ::shared::DebuffType DebuffConfig::type() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.type)
  return static_cast< ::shared::DebuffType >(type_);
}
inline void DebuffConfig::set_type(::shared::DebuffType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.type)
}

// int32 arr_idx = 5;
inline void DebuffConfig::clear_arr_idx() {
  arr_idx_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::arr_idx() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.arr_idx)
  return arr_idx_;
}
inline void DebuffConfig::set_arr_idx(::google::protobuf::int32 value) {
  
  arr_idx_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.arr_idx)
}

// int32 impact_per_interval = 6;
inline void DebuffConfig::clear_impact_per_interval() {
  impact_per_interval_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::impact_per_interval() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.impact_per_interval)
  return impact_per_interval_;
}
inline void DebuffConfig::set_impact_per_interval(::google::protobuf::int32 value) {
  
  impact_per_interval_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.impact_per_interval)
}

// int32 impact_interval = 7;
inline void DebuffConfig::clear_impact_interval() {
  impact_interval_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::impact_interval() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.impact_interval)
  return impact_interval_;
}
inline void DebuffConfig::set_impact_interval(::google::protobuf::int32 value) {
  
  impact_interval_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.impact_interval)
}

// int32 friction_vel_x = 8;
inline void DebuffConfig::clear_friction_vel_x() {
  friction_vel_x_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::friction_vel_x() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.friction_vel_x)
  return friction_vel_x_;
}
inline void DebuffConfig::set_friction_vel_x(::google::protobuf::int32 value) {
  
  friction_vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.friction_vel_x)
}

// int32 friction_vel_y = 9;
inline void DebuffConfig::clear_friction_vel_y() {
  friction_vel_y_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::friction_vel_y() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.friction_vel_y)
  return friction_vel_y_;
}
inline void DebuffConfig::set_friction_vel_y(::google::protobuf::int32 value) {
  
  friction_vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.friction_vel_y)
}

// int32 friction_acc_x = 10;
inline void DebuffConfig::clear_friction_acc_x() {
  friction_acc_x_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::friction_acc_x() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.friction_acc_x)
  return friction_acc_x_;
}
inline void DebuffConfig::set_friction_acc_x(::google::protobuf::int32 value) {
  
  friction_acc_x_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.friction_acc_x)
}

// int32 friction_acc_y = 11;
inline void DebuffConfig::clear_friction_acc_y() {
  friction_acc_y_ = 0;
}
inline ::google::protobuf::int32 DebuffConfig::friction_acc_y() const {
  // @@protoc_insertion_point(field_get:shared.DebuffConfig.friction_acc_y)
  return friction_acc_y_;
}
inline void DebuffConfig::set_friction_acc_y(::google::protobuf::int32 value) {
  
  friction_acc_y_ = value;
  // @@protoc_insertion_point(field_set:shared.DebuffConfig.friction_acc_y)
}

// -------------------------------------------------------------------

// BuffConfig

// uint32 species_id = 1;
inline void BuffConfig::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 BuffConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.species_id)
  return species_id_;
}
inline void BuffConfig::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.species_id)
}

// .shared.BuffStockType stock_type = 2;
inline void BuffConfig::clear_stock_type() {
  stock_type_ = 0;
}
inline ::shared::BuffStockType BuffConfig::stock_type() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.stock_type)
  return static_cast< ::shared::BuffStockType >(stock_type_);
}
inline void BuffConfig::set_stock_type(::shared::BuffStockType value) {
  
  stock_type_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.stock_type)
}

// int32 stock = 3;
inline void BuffConfig::clear_stock() {
  stock_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::stock() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.stock)
  return stock_;
}
inline void BuffConfig::set_stock(::google::protobuf::int32 value) {
  
  stock_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.stock)
}

// float speed_delta = 4;
inline void BuffConfig::clear_speed_delta() {
  speed_delta_ = 0;
}
inline float BuffConfig::speed_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.speed_delta)
  return speed_delta_;
}
inline void BuffConfig::set_speed_delta(float value) {
  
  speed_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.speed_delta)
}

// float hitbox_size_x_delta = 5;
inline void BuffConfig::clear_hitbox_size_x_delta() {
  hitbox_size_x_delta_ = 0;
}
inline float BuffConfig::hitbox_size_x_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.hitbox_size_x_delta)
  return hitbox_size_x_delta_;
}
inline void BuffConfig::set_hitbox_size_x_delta(float value) {
  
  hitbox_size_x_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.hitbox_size_x_delta)
}

// float hitbox_size_y_delta = 6;
inline void BuffConfig::clear_hitbox_size_y_delta() {
  hitbox_size_y_delta_ = 0;
}
inline float BuffConfig::hitbox_size_y_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.hitbox_size_y_delta)
  return hitbox_size_y_delta_;
}
inline void BuffConfig::set_hitbox_size_y_delta(float value) {
  
  hitbox_size_y_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.hitbox_size_y_delta)
}

// int32 damage_delta = 7;
inline void BuffConfig::clear_damage_delta() {
  damage_delta_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::damage_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.damage_delta)
  return damage_delta_;
}
inline void BuffConfig::set_damage_delta(::google::protobuf::int32 value) {
  
  damage_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.damage_delta)
}

// int32 damage_delta_by_percentage = 8;
inline void BuffConfig::clear_damage_delta_by_percentage() {
  damage_delta_by_percentage_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::damage_delta_by_percentage() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.damage_delta_by_percentage)
  return damage_delta_by_percentage_;
}
inline void BuffConfig::set_damage_delta_by_percentage(::google::protobuf::int32 value) {
  
  damage_delta_by_percentage_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.damage_delta_by_percentage)
}

// int32 character_hardness_delta = 9;
inline void BuffConfig::clear_character_hardness_delta() {
  character_hardness_delta_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::character_hardness_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.character_hardness_delta)
  return character_hardness_delta_;
}
inline void BuffConfig::set_character_hardness_delta(::google::protobuf::int32 value) {
  
  character_hardness_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.character_hardness_delta)
}

// int32 melee_hardness_delta = 10;
inline void BuffConfig::clear_melee_hardness_delta() {
  melee_hardness_delta_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::melee_hardness_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.melee_hardness_delta)
  return melee_hardness_delta_;
}
inline void BuffConfig::set_melee_hardness_delta(::google::protobuf::int32 value) {
  
  melee_hardness_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.melee_hardness_delta)
}

// int32 fireball_hardness_delta = 11;
inline void BuffConfig::clear_fireball_hardness_delta() {
  fireball_hardness_delta_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::fireball_hardness_delta() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.fireball_hardness_delta)
  return fireball_hardness_delta_;
}
inline void BuffConfig::set_fireball_hardness_delta(::google::protobuf::int32 value) {
  
  fireball_hardness_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.fireball_hardness_delta)
}

// bool invinsible = 12;
inline void BuffConfig::clear_invinsible() {
  invinsible_ = false;
}
inline bool BuffConfig::invinsible() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.invinsible)
  return invinsible_;
}
inline void BuffConfig::set_invinsible(bool value) {
  
  invinsible_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.invinsible)
}

// uint32 xform_ch_species_id = 13;
inline void BuffConfig::clear_xform_ch_species_id() {
  xform_ch_species_id_ = 0u;
}
inline ::google::protobuf::uint32 BuffConfig::xform_ch_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.xform_ch_species_id)
  return xform_ch_species_id_;
}
inline void BuffConfig::set_xform_ch_species_id(::google::protobuf::uint32 value) {
  
  xform_ch_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.xform_ch_species_id)
}

// bool repel_soft_pushback = 14;
inline void BuffConfig::clear_repel_soft_pushback() {
  repel_soft_pushback_ = false;
}
inline bool BuffConfig::repel_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.repel_soft_pushback)
  return repel_soft_pushback_;
}
inline void BuffConfig::set_repel_soft_pushback(bool value) {
  
  repel_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.repel_soft_pushback)
}

// bool omit_gravity = 15;
inline void BuffConfig::clear_omit_gravity() {
  omit_gravity_ = false;
}
inline bool BuffConfig::omit_gravity() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.omit_gravity)
  return omit_gravity_;
}
inline void BuffConfig::set_omit_gravity(bool value) {
  
  omit_gravity_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.omit_gravity)
}

// bool auto_def1 = 16;
inline void BuffConfig::clear_auto_def1() {
  auto_def1_ = false;
}
inline bool BuffConfig::auto_def1() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.auto_def1)
  return auto_def1_;
}
inline void BuffConfig::set_auto_def1(bool value) {
  
  auto_def1_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.auto_def1)
}

// repeated uint32 associated_debuffs = 17;
inline int BuffConfig::associated_debuffs_size() const {
  return associated_debuffs_.size();
}
inline void BuffConfig::clear_associated_debuffs() {
  associated_debuffs_.Clear();
}
inline ::google::protobuf::uint32 BuffConfig::associated_debuffs(int index) const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.associated_debuffs)
  return associated_debuffs_.Get(index);
}
inline void BuffConfig::set_associated_debuffs(int index, ::google::protobuf::uint32 value) {
  associated_debuffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.BuffConfig.associated_debuffs)
}
inline void BuffConfig::add_associated_debuffs(::google::protobuf::uint32 value) {
  associated_debuffs_.Add(value);
  // @@protoc_insertion_point(field_add:shared.BuffConfig.associated_debuffs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BuffConfig::associated_debuffs() const {
  // @@protoc_insertion_point(field_list:shared.BuffConfig.associated_debuffs)
  return associated_debuffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BuffConfig::mutable_associated_debuffs() {
  // @@protoc_insertion_point(field_mutable_list:shared.BuffConfig.associated_debuffs)
  return &associated_debuffs_;
}

// int32 character_vfx_species_id = 18;
inline void BuffConfig::clear_character_vfx_species_id() {
  character_vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 BuffConfig::character_vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.character_vfx_species_id)
  return character_vfx_species_id_;
}
inline void BuffConfig::set_character_vfx_species_id(::google::protobuf::int32 value) {
  
  character_vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.character_vfx_species_id)
}

// bool is_pixelated_vfx_on_character = 19;
inline void BuffConfig::clear_is_pixelated_vfx_on_character() {
  is_pixelated_vfx_on_character_ = false;
}
inline bool BuffConfig::is_pixelated_vfx_on_character() const {
  // @@protoc_insertion_point(field_get:shared.BuffConfig.is_pixelated_vfx_on_character)
  return is_pixelated_vfx_on_character_;
}
inline void BuffConfig::set_is_pixelated_vfx_on_character(bool value) {
  
  is_pixelated_vfx_on_character_ = value;
  // @@protoc_insertion_point(field_set:shared.BuffConfig.is_pixelated_vfx_on_character)
}

// -------------------------------------------------------------------

// Buff

// uint32 species_id = 1;
inline void Buff::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 Buff::species_id() const {
  // @@protoc_insertion_point(field_get:shared.Buff.species_id)
  return species_id_;
}
inline void Buff::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Buff.species_id)
}

// int32 stock = 2;
inline void Buff::clear_stock() {
  stock_ = 0;
}
inline ::google::protobuf::int32 Buff::stock() const {
  // @@protoc_insertion_point(field_get:shared.Buff.stock)
  return stock_;
}
inline void Buff::set_stock(::google::protobuf::int32 value) {
  
  stock_ = value;
  // @@protoc_insertion_point(field_set:shared.Buff.stock)
}

// int32 originated_render_frame_id = 3;
inline void Buff::clear_originated_render_frame_id() {
  originated_render_frame_id_ = 0;
}
inline ::google::protobuf::int32 Buff::originated_render_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.Buff.originated_render_frame_id)
  return originated_render_frame_id_;
}
inline void Buff::set_originated_render_frame_id(::google::protobuf::int32 value) {
  
  originated_render_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Buff.originated_render_frame_id)
}

// uint32 orig_ch_species_id = 4;
inline void Buff::clear_orig_ch_species_id() {
  orig_ch_species_id_ = 0u;
}
inline ::google::protobuf::uint32 Buff::orig_ch_species_id() const {
  // @@protoc_insertion_point(field_get:shared.Buff.orig_ch_species_id)
  return orig_ch_species_id_;
}
inline void Buff::set_orig_ch_species_id(::google::protobuf::uint32 value) {
  
  orig_ch_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Buff.orig_ch_species_id)
}

// bool orig_repel_soft_pushback = 5;
inline void Buff::clear_orig_repel_soft_pushback() {
  orig_repel_soft_pushback_ = false;
}
inline bool Buff::orig_repel_soft_pushback() const {
  // @@protoc_insertion_point(field_get:shared.Buff.orig_repel_soft_pushback)
  return orig_repel_soft_pushback_;
}
inline void Buff::set_orig_repel_soft_pushback(bool value) {
  
  orig_repel_soft_pushback_ = value;
  // @@protoc_insertion_point(field_set:shared.Buff.orig_repel_soft_pushback)
}

// bool orig_omit_gravity = 6;
inline void Buff::clear_orig_omit_gravity() {
  orig_omit_gravity_ = false;
}
inline bool Buff::orig_omit_gravity() const {
  // @@protoc_insertion_point(field_get:shared.Buff.orig_omit_gravity)
  return orig_omit_gravity_;
}
inline void Buff::set_orig_omit_gravity(bool value) {
  
  orig_omit_gravity_ = value;
  // @@protoc_insertion_point(field_set:shared.Buff.orig_omit_gravity)
}

// -------------------------------------------------------------------

// Debuff

// uint32 species_id = 1;
inline void Debuff::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 Debuff::species_id() const {
  // @@protoc_insertion_point(field_get:shared.Debuff.species_id)
  return species_id_;
}
inline void Debuff::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Debuff.species_id)
}

// int32 stock = 2;
inline void Debuff::clear_stock() {
  stock_ = 0;
}
inline ::google::protobuf::int32 Debuff::stock() const {
  // @@protoc_insertion_point(field_get:shared.Debuff.stock)
  return stock_;
}
inline void Debuff::set_stock(::google::protobuf::int32 value) {
  
  stock_ = value;
  // @@protoc_insertion_point(field_set:shared.Debuff.stock)
}

// -------------------------------------------------------------------

// BulletImmuneRecord

// int32 bullet_local_id = 1;
inline void BulletImmuneRecord::clear_bullet_local_id() {
  bullet_local_id_ = 0;
}
inline ::google::protobuf::int32 BulletImmuneRecord::bullet_local_id() const {
  // @@protoc_insertion_point(field_get:shared.BulletImmuneRecord.bullet_local_id)
  return bullet_local_id_;
}
inline void BulletImmuneRecord::set_bullet_local_id(::google::protobuf::int32 value) {
  
  bullet_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletImmuneRecord.bullet_local_id)
}

// int32 remaining_lifetime_rdf_count = 2;
inline void BulletImmuneRecord::clear_remaining_lifetime_rdf_count() {
  remaining_lifetime_rdf_count_ = 0;
}
inline ::google::protobuf::int32 BulletImmuneRecord::remaining_lifetime_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.BulletImmuneRecord.remaining_lifetime_rdf_count)
  return remaining_lifetime_rdf_count_;
}
inline void BulletImmuneRecord::set_remaining_lifetime_rdf_count(::google::protobuf::int32 value) {
  
  remaining_lifetime_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.BulletImmuneRecord.remaining_lifetime_rdf_count)
}

// -------------------------------------------------------------------

// ConsumableConfig

// uint32 species_id = 1;
inline void ConsumableConfig::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 ConsumableConfig::species_id() const {
  // @@protoc_insertion_point(field_get:shared.ConsumableConfig.species_id)
  return species_id_;
}
inline void ConsumableConfig::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.ConsumableConfig.species_id)
}

// int32 refill_delta = 2;
inline void ConsumableConfig::clear_refill_delta() {
  refill_delta_ = 0;
}
inline ::google::protobuf::int32 ConsumableConfig::refill_delta() const {
  // @@protoc_insertion_point(field_get:shared.ConsumableConfig.refill_delta)
  return refill_delta_;
}
inline void ConsumableConfig::set_refill_delta(::google::protobuf::int32 value) {
  
  refill_delta_ = value;
  // @@protoc_insertion_point(field_set:shared.ConsumableConfig.refill_delta)
}

// int32 vfx_id_on_picker = 3;
inline void ConsumableConfig::clear_vfx_id_on_picker() {
  vfx_id_on_picker_ = 0;
}
inline ::google::protobuf::int32 ConsumableConfig::vfx_id_on_picker() const {
  // @@protoc_insertion_point(field_get:shared.ConsumableConfig.vfx_id_on_picker)
  return vfx_id_on_picker_;
}
inline void ConsumableConfig::set_vfx_id_on_picker(::google::protobuf::int32 value) {
  
  vfx_id_on_picker_ = value;
  // @@protoc_insertion_point(field_set:shared.ConsumableConfig.vfx_id_on_picker)
}

// bool is_pixelated_vfx_on_picker = 4;
inline void ConsumableConfig::clear_is_pixelated_vfx_on_picker() {
  is_pixelated_vfx_on_picker_ = false;
}
inline bool ConsumableConfig::is_pixelated_vfx_on_picker() const {
  // @@protoc_insertion_point(field_get:shared.ConsumableConfig.is_pixelated_vfx_on_picker)
  return is_pixelated_vfx_on_picker_;
}
inline void ConsumableConfig::set_is_pixelated_vfx_on_picker(bool value) {
  
  is_pixelated_vfx_on_picker_ = value;
  // @@protoc_insertion_point(field_set:shared.ConsumableConfig.is_pixelated_vfx_on_picker)
}

// -------------------------------------------------------------------

// PickableSkillConfig

// uint32 skill_id = 1;
inline void PickableSkillConfig::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 PickableSkillConfig::skill_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableSkillConfig.skill_id)
  return skill_id_;
}
inline void PickableSkillConfig::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableSkillConfig.skill_id)
}

// int32 vfx_id_on_picker = 2;
inline void PickableSkillConfig::clear_vfx_id_on_picker() {
  vfx_id_on_picker_ = 0;
}
inline ::google::protobuf::int32 PickableSkillConfig::vfx_id_on_picker() const {
  // @@protoc_insertion_point(field_get:shared.PickableSkillConfig.vfx_id_on_picker)
  return vfx_id_on_picker_;
}
inline void PickableSkillConfig::set_vfx_id_on_picker(::google::protobuf::int32 value) {
  
  vfx_id_on_picker_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableSkillConfig.vfx_id_on_picker)
}

// bool is_pixelated_vfx_on_picker = 3;
inline void PickableSkillConfig::clear_is_pixelated_vfx_on_picker() {
  is_pixelated_vfx_on_picker_ = false;
}
inline bool PickableSkillConfig::is_pixelated_vfx_on_picker() const {
  // @@protoc_insertion_point(field_get:shared.PickableSkillConfig.is_pixelated_vfx_on_picker)
  return is_pixelated_vfx_on_picker_;
}
inline void PickableSkillConfig::set_is_pixelated_vfx_on_picker(bool value) {
  
  is_pixelated_vfx_on_picker_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableSkillConfig.is_pixelated_vfx_on_picker)
}

// -------------------------------------------------------------------

// InventorySlot

// .shared.InventorySlotStockType stock_type = 1;
inline void InventorySlot::clear_stock_type() {
  stock_type_ = 0;
}
inline ::shared::InventorySlotStockType InventorySlot::stock_type() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.stock_type)
  return static_cast< ::shared::InventorySlotStockType >(stock_type_);
}
inline void InventorySlot::set_stock_type(::shared::InventorySlotStockType value) {
  
  stock_type_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.stock_type)
}

// uint32 quota = 2;
inline void InventorySlot::clear_quota() {
  quota_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::quota() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.quota)
  return quota_;
}
inline void InventorySlot::set_quota(::google::protobuf::uint32 value) {
  
  quota_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.quota)
}

// int32 frames_to_recover = 3;
inline void InventorySlot::clear_frames_to_recover() {
  frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 InventorySlot::frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.frames_to_recover)
  return frames_to_recover_;
}
inline void InventorySlot::set_frames_to_recover(::google::protobuf::int32 value) {
  
  frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.frames_to_recover)
}

// uint32 default_quota = 4;
inline void InventorySlot::clear_default_quota() {
  default_quota_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::default_quota() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.default_quota)
  return default_quota_;
}
inline void InventorySlot::set_default_quota(::google::protobuf::uint32 value) {
  
  default_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.default_quota)
}

// int32 default_frames_to_recover = 5;
inline void InventorySlot::clear_default_frames_to_recover() {
  default_frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 InventorySlot::default_frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.default_frames_to_recover)
  return default_frames_to_recover_;
}
inline void InventorySlot::set_default_frames_to_recover(::google::protobuf::int32 value) {
  
  default_frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.default_frames_to_recover)
}

// uint32 buff_species_id = 6;
inline void InventorySlot::clear_buff_species_id() {
  buff_species_id_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::buff_species_id() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.buff_species_id)
  return buff_species_id_;
}
inline void InventorySlot::set_buff_species_id(::google::protobuf::uint32 value) {
  
  buff_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.buff_species_id)
}

// uint32 skill_id = 7;
inline void InventorySlot::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::skill_id() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.skill_id)
  return skill_id_;
}
inline void InventorySlot::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.skill_id)
}

// uint32 skill_id_air = 8;
inline void InventorySlot::clear_skill_id_air() {
  skill_id_air_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::skill_id_air() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.skill_id_air)
  return skill_id_air_;
}
inline void InventorySlot::set_skill_id_air(::google::protobuf::uint32 value) {
  
  skill_id_air_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.skill_id_air)
}

// int32 gauge_charged = 9;
inline void InventorySlot::clear_gauge_charged() {
  gauge_charged_ = 0;
}
inline ::google::protobuf::int32 InventorySlot::gauge_charged() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.gauge_charged)
  return gauge_charged_;
}
inline void InventorySlot::set_gauge_charged(::google::protobuf::int32 value) {
  
  gauge_charged_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.gauge_charged)
}

// int32 gauge_required = 10;
inline void InventorySlot::clear_gauge_required() {
  gauge_required_ = 0;
}
inline ::google::protobuf::int32 InventorySlot::gauge_required() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.gauge_required)
  return gauge_required_;
}
inline void InventorySlot::set_gauge_required(::google::protobuf::int32 value) {
  
  gauge_required_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.gauge_required)
}

// uint32 full_charge_buff_species_id = 11;
inline void InventorySlot::clear_full_charge_buff_species_id() {
  full_charge_buff_species_id_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::full_charge_buff_species_id() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.full_charge_buff_species_id)
  return full_charge_buff_species_id_;
}
inline void InventorySlot::set_full_charge_buff_species_id(::google::protobuf::uint32 value) {
  
  full_charge_buff_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.full_charge_buff_species_id)
}

// uint32 full_charge_skill_id = 12;
inline void InventorySlot::clear_full_charge_skill_id() {
  full_charge_skill_id_ = 0u;
}
inline ::google::protobuf::uint32 InventorySlot::full_charge_skill_id() const {
  // @@protoc_insertion_point(field_get:shared.InventorySlot.full_charge_skill_id)
  return full_charge_skill_id_;
}
inline void InventorySlot::set_full_charge_skill_id(::google::protobuf::uint32 value) {
  
  full_charge_skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InventorySlot.full_charge_skill_id)
}

// -------------------------------------------------------------------

// Inventory

// repeated .shared.InventorySlot slots = 1;
inline int Inventory::slots_size() const {
  return slots_.size();
}
inline void Inventory::clear_slots() {
  slots_.Clear();
}
inline ::shared::InventorySlot* Inventory::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:shared.Inventory.slots)
  return slots_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >*
Inventory::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:shared.Inventory.slots)
  return &slots_;
}
inline const ::shared::InventorySlot& Inventory::slots(int index) const {
  // @@protoc_insertion_point(field_get:shared.Inventory.slots)
  return slots_.Get(index);
}
inline ::shared::InventorySlot* Inventory::add_slots() {
  // @@protoc_insertion_point(field_add:shared.Inventory.slots)
  return slots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::InventorySlot >&
Inventory::slots() const {
  // @@protoc_insertion_point(field_list:shared.Inventory.slots)
  return slots_;
}

// -------------------------------------------------------------------

// BattleEquipment

// uint32 species_id = 1;
inline void BattleEquipment::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 BattleEquipment::species_id() const {
  // @@protoc_insertion_point(field_get:shared.BattleEquipment.species_id)
  return species_id_;
}
inline void BattleEquipment::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.BattleEquipment.species_id)
}

// -------------------------------------------------------------------

// PlayerSettings

// int32 sound_volume = 1;
inline void PlayerSettings::clear_sound_volume() {
  sound_volume_ = 0;
}
inline ::google::protobuf::int32 PlayerSettings::sound_volume() const {
  // @@protoc_insertion_point(field_get:shared.PlayerSettings.sound_volume)
  return sound_volume_;
}
inline void PlayerSettings::set_sound_volume(::google::protobuf::int32 value) {
  
  sound_volume_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerSettings.sound_volume)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerRegionProgress

// int32 region_id = 1;
inline void PlayerRegionProgress::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 PlayerRegionProgress::region_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerRegionProgress.region_id)
  return region_id_;
}
inline void PlayerRegionProgress::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerRegionProgress.region_id)
}

// int32 completed_level_count = 2;
inline void PlayerRegionProgress::clear_completed_level_count() {
  completed_level_count_ = 0;
}
inline ::google::protobuf::int32 PlayerRegionProgress::completed_level_count() const {
  // @@protoc_insertion_point(field_get:shared.PlayerRegionProgress.completed_level_count)
  return completed_level_count_;
}
inline void PlayerRegionProgress::set_completed_level_count(::google::protobuf::int32 value) {
  
  completed_level_count_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerRegionProgress.completed_level_count)
}

// map<int32, bool> remaining_dependencies = 3;
inline int PlayerRegionProgress::remaining_dependencies_size() const {
  return remaining_dependencies_.size();
}
inline void PlayerRegionProgress::clear_remaining_dependencies() {
  remaining_dependencies_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
PlayerRegionProgress::remaining_dependencies() const {
  // @@protoc_insertion_point(field_map:shared.PlayerRegionProgress.remaining_dependencies)
  return remaining_dependencies_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, bool >*
PlayerRegionProgress::mutable_remaining_dependencies() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerRegionProgress.remaining_dependencies)
  return remaining_dependencies_.MutableMap();
}

// map<int32, bool> removed_dependencies = 4;
inline int PlayerRegionProgress::removed_dependencies_size() const {
  return removed_dependencies_.size();
}
inline void PlayerRegionProgress::clear_removed_dependencies() {
  removed_dependencies_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
PlayerRegionProgress::removed_dependencies() const {
  // @@protoc_insertion_point(field_map:shared.PlayerRegionProgress.removed_dependencies)
  return removed_dependencies_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, bool >*
PlayerRegionProgress::mutable_removed_dependencies() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerRegionProgress.removed_dependencies)
  return removed_dependencies_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerLevelProgress

// int32 region_id = 1;
inline void PlayerLevelProgress::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelProgress::region_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.region_id)
  return region_id_;
}
inline void PlayerLevelProgress::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.region_id)
}

// int32 level_id = 2;
inline void PlayerLevelProgress::clear_level_id() {
  level_id_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelProgress::level_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.level_id)
  return level_id_;
}
inline void PlayerLevelProgress::set_level_id(::google::protobuf::int32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.level_id)
}

// int32 highest_score = 3;
inline void PlayerLevelProgress::clear_highest_score() {
  highest_score_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelProgress::highest_score() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.highest_score)
  return highest_score_;
}
inline void PlayerLevelProgress::set_highest_score(::google::protobuf::int32 value) {
  
  highest_score_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.highest_score)
}

// int32 shortest_finish_time_at_highest_score = 4;
inline void PlayerLevelProgress::clear_shortest_finish_time_at_highest_score() {
  shortest_finish_time_at_highest_score_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelProgress::shortest_finish_time_at_highest_score() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.shortest_finish_time_at_highest_score)
  return shortest_finish_time_at_highest_score_;
}
inline void PlayerLevelProgress::set_shortest_finish_time_at_highest_score(::google::protobuf::int32 value) {
  
  shortest_finish_time_at_highest_score_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.shortest_finish_time_at_highest_score)
}

// uint32 character_species_id_at_highest_score = 5;
inline void PlayerLevelProgress::clear_character_species_id_at_highest_score() {
  character_species_id_at_highest_score_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLevelProgress::character_species_id_at_highest_score() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.character_species_id_at_highest_score)
  return character_species_id_at_highest_score_;
}
inline void PlayerLevelProgress::set_character_species_id_at_highest_score(::google::protobuf::uint32 value) {
  
  character_species_id_at_highest_score_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.character_species_id_at_highest_score)
}

// int32 shortest_finish_time = 6;
inline void PlayerLevelProgress::clear_shortest_finish_time() {
  shortest_finish_time_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelProgress::shortest_finish_time() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.shortest_finish_time)
  return shortest_finish_time_;
}
inline void PlayerLevelProgress::set_shortest_finish_time(::google::protobuf::int32 value) {
  
  shortest_finish_time_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.shortest_finish_time)
}

// int32 score_at_shortest_finish_time = 7;
inline void PlayerLevelProgress::clear_score_at_shortest_finish_time() {
  score_at_shortest_finish_time_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelProgress::score_at_shortest_finish_time() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.score_at_shortest_finish_time)
  return score_at_shortest_finish_time_;
}
inline void PlayerLevelProgress::set_score_at_shortest_finish_time(::google::protobuf::int32 value) {
  
  score_at_shortest_finish_time_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.score_at_shortest_finish_time)
}

// uint32 character_species_id_at_shortest_finish_time = 8;
inline void PlayerLevelProgress::clear_character_species_id_at_shortest_finish_time() {
  character_species_id_at_shortest_finish_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLevelProgress::character_species_id_at_shortest_finish_time() const {
  // @@protoc_insertion_point(field_get:shared.PlayerLevelProgress.character_species_id_at_shortest_finish_time)
  return character_species_id_at_shortest_finish_time_;
}
inline void PlayerLevelProgress::set_character_species_id_at_shortest_finish_time(::google::protobuf::uint32 value) {
  
  character_species_id_at_shortest_finish_time_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerLevelProgress.character_species_id_at_shortest_finish_time)
}

// map<int32, bool> remaining_dependencies = 9;
inline int PlayerLevelProgress::remaining_dependencies_size() const {
  return remaining_dependencies_.size();
}
inline void PlayerLevelProgress::clear_remaining_dependencies() {
  remaining_dependencies_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
PlayerLevelProgress::remaining_dependencies() const {
  // @@protoc_insertion_point(field_map:shared.PlayerLevelProgress.remaining_dependencies)
  return remaining_dependencies_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, bool >*
PlayerLevelProgress::mutable_remaining_dependencies() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerLevelProgress.remaining_dependencies)
  return remaining_dependencies_.MutableMap();
}

// map<int32, bool> removed_dependencies = 10;
inline int PlayerLevelProgress::removed_dependencies_size() const {
  return removed_dependencies_.size();
}
inline void PlayerLevelProgress::clear_removed_dependencies() {
  removed_dependencies_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
PlayerLevelProgress::removed_dependencies() const {
  // @@protoc_insertion_point(field_map:shared.PlayerLevelProgress.removed_dependencies)
  return removed_dependencies_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, bool >*
PlayerLevelProgress::mutable_removed_dependencies() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerLevelProgress.removed_dependencies)
  return removed_dependencies_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerChUnlockProgress

// uint32 species_id = 1;
inline void PlayerChUnlockProgress::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChUnlockProgress::species_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerChUnlockProgress.species_id)
  return species_id_;
}
inline void PlayerChUnlockProgress::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerChUnlockProgress.species_id)
}

// map<int32, bool> remaining_dependencies = 2;
inline int PlayerChUnlockProgress::remaining_dependencies_size() const {
  return remaining_dependencies_.size();
}
inline void PlayerChUnlockProgress::clear_remaining_dependencies() {
  remaining_dependencies_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
PlayerChUnlockProgress::remaining_dependencies() const {
  // @@protoc_insertion_point(field_map:shared.PlayerChUnlockProgress.remaining_dependencies)
  return remaining_dependencies_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, bool >*
PlayerChUnlockProgress::mutable_remaining_dependencies() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerChUnlockProgress.remaining_dependencies)
  return remaining_dependencies_.MutableMap();
}

// map<int32, bool> removed_dependencies = 3;
inline int PlayerChUnlockProgress::removed_dependencies_size() const {
  return removed_dependencies_.size();
}
inline void PlayerChUnlockProgress::clear_removed_dependencies() {
  removed_dependencies_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, bool >&
PlayerChUnlockProgress::removed_dependencies() const {
  // @@protoc_insertion_point(field_map:shared.PlayerChUnlockProgress.removed_dependencies)
  return removed_dependencies_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, bool >*
PlayerChUnlockProgress::mutable_removed_dependencies() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerChUnlockProgress.removed_dependencies)
  return removed_dependencies_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerStoryProgress

// map<int32, .shared.PlayerRegionProgress> region_progress_dict = 1;
inline int PlayerStoryProgress::region_progress_dict_size() const {
  return region_progress_dict_.size();
}
inline void PlayerStoryProgress::clear_region_progress_dict() {
  region_progress_dict_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerRegionProgress >&
PlayerStoryProgress::region_progress_dict() const {
  // @@protoc_insertion_point(field_map:shared.PlayerStoryProgress.region_progress_dict)
  return region_progress_dict_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerRegionProgress >*
PlayerStoryProgress::mutable_region_progress_dict() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerStoryProgress.region_progress_dict)
  return region_progress_dict_.MutableMap();
}

// map<int32, .shared.PlayerLevelProgress> level_progress_dict = 2;
inline int PlayerStoryProgress::level_progress_dict_size() const {
  return level_progress_dict_.size();
}
inline void PlayerStoryProgress::clear_level_progress_dict() {
  level_progress_dict_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerLevelProgress >&
PlayerStoryProgress::level_progress_dict() const {
  // @@protoc_insertion_point(field_map:shared.PlayerStoryProgress.level_progress_dict)
  return level_progress_dict_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::shared::PlayerLevelProgress >*
PlayerStoryProgress::mutable_level_progress_dict() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerStoryProgress.level_progress_dict)
  return level_progress_dict_.MutableMap();
}

// int32 cursor_region_id = 3;
inline void PlayerStoryProgress::clear_cursor_region_id() {
  cursor_region_id_ = 0;
}
inline ::google::protobuf::int32 PlayerStoryProgress::cursor_region_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerStoryProgress.cursor_region_id)
  return cursor_region_id_;
}
inline void PlayerStoryProgress::set_cursor_region_id(::google::protobuf::int32 value) {
  
  cursor_region_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerStoryProgress.cursor_region_id)
}

// int32 cursor_level_id = 4;
inline void PlayerStoryProgress::clear_cursor_level_id() {
  cursor_level_id_ = 0;
}
inline ::google::protobuf::int32 PlayerStoryProgress::cursor_level_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerStoryProgress.cursor_level_id)
  return cursor_level_id_;
}
inline void PlayerStoryProgress::set_cursor_level_id(::google::protobuf::int32 value) {
  
  cursor_level_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerStoryProgress.cursor_level_id)
}

// .shared.PlayerStoryModeSelectView view = 5;
inline void PlayerStoryProgress::clear_view() {
  view_ = 0;
}
inline ::shared::PlayerStoryModeSelectView PlayerStoryProgress::view() const {
  // @@protoc_insertion_point(field_get:shared.PlayerStoryProgress.view)
  return static_cast< ::shared::PlayerStoryModeSelectView >(view_);
}
inline void PlayerStoryProgress::set_view(::shared::PlayerStoryModeSelectView value) {
  
  view_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerStoryProgress.view)
}

// uint64 saved_at_gmt_millis = 6;
inline void PlayerStoryProgress::clear_saved_at_gmt_millis() {
  saved_at_gmt_millis_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerStoryProgress::saved_at_gmt_millis() const {
  // @@protoc_insertion_point(field_get:shared.PlayerStoryProgress.saved_at_gmt_millis)
  return saved_at_gmt_millis_;
}
inline void PlayerStoryProgress::set_saved_at_gmt_millis(::google::protobuf::uint64 value) {
  
  saved_at_gmt_millis_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerStoryProgress.saved_at_gmt_millis)
}

// map<uint32, .shared.PlayerChUnlockProgress> ch_unlock_progress_dict = 7;
inline int PlayerStoryProgress::ch_unlock_progress_dict_size() const {
  return ch_unlock_progress_dict_.size();
}
inline void PlayerStoryProgress::clear_ch_unlock_progress_dict() {
  ch_unlock_progress_dict_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >&
PlayerStoryProgress::ch_unlock_progress_dict() const {
  // @@protoc_insertion_point(field_map:shared.PlayerStoryProgress.ch_unlock_progress_dict)
  return ch_unlock_progress_dict_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >*
PlayerStoryProgress::mutable_ch_unlock_progress_dict() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerStoryProgress.ch_unlock_progress_dict)
  return ch_unlock_progress_dict_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerOnlineArenaProgress

// uint64 saved_at_gmt_millis = 1;
inline void PlayerOnlineArenaProgress::clear_saved_at_gmt_millis() {
  saved_at_gmt_millis_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerOnlineArenaProgress::saved_at_gmt_millis() const {
  // @@protoc_insertion_point(field_get:shared.PlayerOnlineArenaProgress.saved_at_gmt_millis)
  return saved_at_gmt_millis_;
}
inline void PlayerOnlineArenaProgress::set_saved_at_gmt_millis(::google::protobuf::uint64 value) {
  
  saved_at_gmt_millis_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerOnlineArenaProgress.saved_at_gmt_millis)
}

// string player_id = 2;
inline void PlayerOnlineArenaProgress::clear_player_id() {
  player_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerOnlineArenaProgress::player_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerOnlineArenaProgress.player_id)
  return player_id_.GetNoArena();
}
inline void PlayerOnlineArenaProgress::set_player_id(const ::std::string& value) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.PlayerOnlineArenaProgress.player_id)
}
#if LANG_CXX11
inline void PlayerOnlineArenaProgress::set_player_id(::std::string&& value) {
  
  player_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.PlayerOnlineArenaProgress.player_id)
}
#endif
inline void PlayerOnlineArenaProgress::set_player_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.PlayerOnlineArenaProgress.player_id)
}
inline void PlayerOnlineArenaProgress::set_player_id(const char* value, size_t size) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.PlayerOnlineArenaProgress.player_id)
}
inline ::std::string* PlayerOnlineArenaProgress::mutable_player_id() {
  
  // @@protoc_insertion_point(field_mutable:shared.PlayerOnlineArenaProgress.player_id)
  return player_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerOnlineArenaProgress::release_player_id() {
  // @@protoc_insertion_point(field_release:shared.PlayerOnlineArenaProgress.player_id)
  
  return player_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerOnlineArenaProgress::set_allocated_player_id(::std::string* player_id) {
  if (player_id != nullptr) {
    
  } else {
    
  }
  player_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_id);
  // @@protoc_insertion_point(field_set_allocated:shared.PlayerOnlineArenaProgress.player_id)
}

// map<uint32, .shared.PlayerChUnlockProgress> ch_unlock_progress_dict = 3;
inline int PlayerOnlineArenaProgress::ch_unlock_progress_dict_size() const {
  return ch_unlock_progress_dict_.size();
}
inline void PlayerOnlineArenaProgress::clear_ch_unlock_progress_dict() {
  ch_unlock_progress_dict_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >&
PlayerOnlineArenaProgress::ch_unlock_progress_dict() const {
  // @@protoc_insertion_point(field_map:shared.PlayerOnlineArenaProgress.ch_unlock_progress_dict)
  return ch_unlock_progress_dict_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::shared::PlayerChUnlockProgress >*
PlayerOnlineArenaProgress::mutable_ch_unlock_progress_dict() {
  // @@protoc_insertion_point(field_mutable_map:shared.PlayerOnlineArenaProgress.ch_unlock_progress_dict)
  return ch_unlock_progress_dict_.MutableMap();
}

// -------------------------------------------------------------------

// StoryPointDialogLine

// int32 narrator_join_index = 1;
inline void StoryPointDialogLine::clear_narrator_join_index() {
  narrator_join_index_ = 0;
}
inline ::google::protobuf::int32 StoryPointDialogLine::narrator_join_index() const {
  // @@protoc_insertion_point(field_get:shared.StoryPointDialogLine.narrator_join_index)
  return narrator_join_index_;
}
inline void StoryPointDialogLine::set_narrator_join_index(::google::protobuf::int32 value) {
  
  narrator_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.StoryPointDialogLine.narrator_join_index)
}

// uint32 narrator_species_id = 2;
inline void StoryPointDialogLine::clear_narrator_species_id() {
  narrator_species_id_ = 0u;
}
inline ::google::protobuf::uint32 StoryPointDialogLine::narrator_species_id() const {
  // @@protoc_insertion_point(field_get:shared.StoryPointDialogLine.narrator_species_id)
  return narrator_species_id_;
}
inline void StoryPointDialogLine::set_narrator_species_id(::google::protobuf::uint32 value) {
  
  narrator_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.StoryPointDialogLine.narrator_species_id)
}

// string content = 3;
inline void StoryPointDialogLine::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoryPointDialogLine::content() const {
  // @@protoc_insertion_point(field_get:shared.StoryPointDialogLine.content)
  return content_.GetNoArena();
}
inline void StoryPointDialogLine::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.StoryPointDialogLine.content)
}
#if LANG_CXX11
inline void StoryPointDialogLine::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.StoryPointDialogLine.content)
}
#endif
inline void StoryPointDialogLine::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.StoryPointDialogLine.content)
}
inline void StoryPointDialogLine::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.StoryPointDialogLine.content)
}
inline ::std::string* StoryPointDialogLine::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:shared.StoryPointDialogLine.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoryPointDialogLine::release_content() {
  // @@protoc_insertion_point(field_release:shared.StoryPointDialogLine.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoryPointDialogLine::set_allocated_content(::std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:shared.StoryPointDialogLine.content)
}

// bool down_or_not = 4;
inline void StoryPointDialogLine::clear_down_or_not() {
  down_or_not_ = false;
}
inline bool StoryPointDialogLine::down_or_not() const {
  // @@protoc_insertion_point(field_get:shared.StoryPointDialogLine.down_or_not)
  return down_or_not_;
}
inline void StoryPointDialogLine::set_down_or_not(bool value) {
  
  down_or_not_ = value;
  // @@protoc_insertion_point(field_set:shared.StoryPointDialogLine.down_or_not)
}

// -------------------------------------------------------------------

// StoryPointStep

// repeated .shared.StoryPointDialogLine lines = 1;
inline int StoryPointStep::lines_size() const {
  return lines_.size();
}
inline void StoryPointStep::clear_lines() {
  lines_.Clear();
}
inline ::shared::StoryPointDialogLine* StoryPointStep::mutable_lines(int index) {
  // @@protoc_insertion_point(field_mutable:shared.StoryPointStep.lines)
  return lines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::StoryPointDialogLine >*
StoryPointStep::mutable_lines() {
  // @@protoc_insertion_point(field_mutable_list:shared.StoryPointStep.lines)
  return &lines_;
}
inline const ::shared::StoryPointDialogLine& StoryPointStep::lines(int index) const {
  // @@protoc_insertion_point(field_get:shared.StoryPointStep.lines)
  return lines_.Get(index);
}
inline ::shared::StoryPointDialogLine* StoryPointStep::add_lines() {
  // @@protoc_insertion_point(field_add:shared.StoryPointStep.lines)
  return lines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::StoryPointDialogLine >&
StoryPointStep::lines() const {
  // @@protoc_insertion_point(field_list:shared.StoryPointStep.lines)
  return lines_;
}

// int32 nonctrl_alive_rdf_count = 2;
inline void StoryPointStep::clear_nonctrl_alive_rdf_count() {
  nonctrl_alive_rdf_count_ = 0;
}
inline ::google::protobuf::int32 StoryPointStep::nonctrl_alive_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.StoryPointStep.nonctrl_alive_rdf_count)
  return nonctrl_alive_rdf_count_;
}
inline void StoryPointStep::set_nonctrl_alive_rdf_count(::google::protobuf::int32 value) {
  
  nonctrl_alive_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.StoryPointStep.nonctrl_alive_rdf_count)
}

// -------------------------------------------------------------------

// StoryPoint

// repeated .shared.StoryPointStep steps = 1;
inline int StoryPoint::steps_size() const {
  return steps_.size();
}
inline void StoryPoint::clear_steps() {
  steps_.Clear();
}
inline ::shared::StoryPointStep* StoryPoint::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:shared.StoryPoint.steps)
  return steps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::StoryPointStep >*
StoryPoint::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:shared.StoryPoint.steps)
  return &steps_;
}
inline const ::shared::StoryPointStep& StoryPoint::steps(int index) const {
  // @@protoc_insertion_point(field_get:shared.StoryPoint.steps)
  return steps_.Get(index);
}
inline ::shared::StoryPointStep* StoryPoint::add_steps() {
  // @@protoc_insertion_point(field_add:shared.StoryPoint.steps)
  return steps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::StoryPointStep >&
StoryPoint::steps() const {
  // @@protoc_insertion_point(field_list:shared.StoryPoint.steps)
  return steps_;
}

// bool nonctrl = 2;
inline void StoryPoint::clear_nonctrl() {
  nonctrl_ = false;
}
inline bool StoryPoint::nonctrl() const {
  // @@protoc_insertion_point(field_get:shared.StoryPoint.nonctrl)
  return nonctrl_;
}
inline void StoryPoint::set_nonctrl(bool value) {
  
  nonctrl_ = value;
  // @@protoc_insertion_point(field_set:shared.StoryPoint.nonctrl)
}

// string cutscene_name = 3;
inline void StoryPoint::clear_cutscene_name() {
  cutscene_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StoryPoint::cutscene_name() const {
  // @@protoc_insertion_point(field_get:shared.StoryPoint.cutscene_name)
  return cutscene_name_.GetNoArena();
}
inline void StoryPoint::set_cutscene_name(const ::std::string& value) {
  
  cutscene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.StoryPoint.cutscene_name)
}
#if LANG_CXX11
inline void StoryPoint::set_cutscene_name(::std::string&& value) {
  
  cutscene_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.StoryPoint.cutscene_name)
}
#endif
inline void StoryPoint::set_cutscene_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cutscene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.StoryPoint.cutscene_name)
}
inline void StoryPoint::set_cutscene_name(const char* value, size_t size) {
  
  cutscene_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.StoryPoint.cutscene_name)
}
inline ::std::string* StoryPoint::mutable_cutscene_name() {
  
  // @@protoc_insertion_point(field_mutable:shared.StoryPoint.cutscene_name)
  return cutscene_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoryPoint::release_cutscene_name() {
  // @@protoc_insertion_point(field_release:shared.StoryPoint.cutscene_name)
  
  return cutscene_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoryPoint::set_allocated_cutscene_name(::std::string* cutscene_name) {
  if (cutscene_name != nullptr) {
    
  } else {
    
  }
  cutscene_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cutscene_name);
  // @@protoc_insertion_point(field_set_allocated:shared.StoryPoint.cutscene_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LevelStory

// map<int32, .shared.StoryPoint> points = 1;
inline int LevelStory::points_size() const {
  return points_.size();
}
inline void LevelStory::clear_points() {
  points_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::StoryPoint >&
LevelStory::points() const {
  // @@protoc_insertion_point(field_map:shared.LevelStory.points)
  return points_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::shared::StoryPoint >*
LevelStory::mutable_points() {
  // @@protoc_insertion_point(field_mutable_map:shared.LevelStory.points)
  return points_.MutableMap();
}

// -------------------------------------------------------------------

// SerializableConvexPolygon

// float anchor_x = 1;
inline void SerializableConvexPolygon::clear_anchor_x() {
  anchor_x_ = 0;
}
inline float SerializableConvexPolygon::anchor_x() const {
  // @@protoc_insertion_point(field_get:shared.SerializableConvexPolygon.anchor_x)
  return anchor_x_;
}
inline void SerializableConvexPolygon::set_anchor_x(float value) {
  
  anchor_x_ = value;
  // @@protoc_insertion_point(field_set:shared.SerializableConvexPolygon.anchor_x)
}

// float anchor_y = 2;
inline void SerializableConvexPolygon::clear_anchor_y() {
  anchor_y_ = 0;
}
inline float SerializableConvexPolygon::anchor_y() const {
  // @@protoc_insertion_point(field_get:shared.SerializableConvexPolygon.anchor_y)
  return anchor_y_;
}
inline void SerializableConvexPolygon::set_anchor_y(float value) {
  
  anchor_y_ = value;
  // @@protoc_insertion_point(field_set:shared.SerializableConvexPolygon.anchor_y)
}

// repeated float points = 3;
inline int SerializableConvexPolygon::points_size() const {
  return points_.size();
}
inline void SerializableConvexPolygon::clear_points() {
  points_.Clear();
}
inline float SerializableConvexPolygon::points(int index) const {
  // @@protoc_insertion_point(field_get:shared.SerializableConvexPolygon.points)
  return points_.Get(index);
}
inline void SerializableConvexPolygon::set_points(int index, float value) {
  points_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.SerializableConvexPolygon.points)
}
inline void SerializableConvexPolygon::add_points(float value) {
  points_.Add(value);
  // @@protoc_insertion_point(field_add:shared.SerializableConvexPolygon.points)
}
inline const ::google::protobuf::RepeatedField< float >&
SerializableConvexPolygon::points() const {
  // @@protoc_insertion_point(field_list:shared.SerializableConvexPolygon.points)
  return points_;
}
inline ::google::protobuf::RepeatedField< float >*
SerializableConvexPolygon::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:shared.SerializableConvexPolygon.points)
  return &points_;
}

// -------------------------------------------------------------------

// SerializedCompletelyStaticPatrolCueCollider

// .shared.PatrolCue attr = 1;
inline bool SerializedCompletelyStaticPatrolCueCollider::has_attr() const {
  return this != internal_default_instance() && attr_ != nullptr;
}
inline void SerializedCompletelyStaticPatrolCueCollider::clear_attr() {
  if (GetArenaNoVirtual() == nullptr && attr_ != nullptr) {
    delete attr_;
  }
  attr_ = nullptr;
}
inline const ::shared::PatrolCue& SerializedCompletelyStaticPatrolCueCollider::attr() const {
  const ::shared::PatrolCue* p = attr_;
  // @@protoc_insertion_point(field_get:shared.SerializedCompletelyStaticPatrolCueCollider.attr)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::PatrolCue*>(
      &::shared::_PatrolCue_default_instance_);
}
inline ::shared::PatrolCue* SerializedCompletelyStaticPatrolCueCollider::release_attr() {
  // @@protoc_insertion_point(field_release:shared.SerializedCompletelyStaticPatrolCueCollider.attr)
  
  ::shared::PatrolCue* temp = attr_;
  attr_ = nullptr;
  return temp;
}
inline ::shared::PatrolCue* SerializedCompletelyStaticPatrolCueCollider::mutable_attr() {
  
  if (attr_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::PatrolCue>(GetArenaNoVirtual());
    attr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SerializedCompletelyStaticPatrolCueCollider.attr)
  return attr_;
}
inline void SerializedCompletelyStaticPatrolCueCollider::set_allocated_attr(::shared::PatrolCue* attr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attr_;
  }
  if (attr) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attr, submessage_arena);
    }
    
  } else {
    
  }
  attr_ = attr;
  // @@protoc_insertion_point(field_set_allocated:shared.SerializedCompletelyStaticPatrolCueCollider.attr)
}

// .shared.SerializableConvexPolygon polygon = 2;
inline bool SerializedCompletelyStaticPatrolCueCollider::has_polygon() const {
  return this != internal_default_instance() && polygon_ != nullptr;
}
inline void SerializedCompletelyStaticPatrolCueCollider::clear_polygon() {
  if (GetArenaNoVirtual() == nullptr && polygon_ != nullptr) {
    delete polygon_;
  }
  polygon_ = nullptr;
}
inline const ::shared::SerializableConvexPolygon& SerializedCompletelyStaticPatrolCueCollider::polygon() const {
  const ::shared::SerializableConvexPolygon* p = polygon_;
  // @@protoc_insertion_point(field_get:shared.SerializedCompletelyStaticPatrolCueCollider.polygon)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SerializableConvexPolygon*>(
      &::shared::_SerializableConvexPolygon_default_instance_);
}
inline ::shared::SerializableConvexPolygon* SerializedCompletelyStaticPatrolCueCollider::release_polygon() {
  // @@protoc_insertion_point(field_release:shared.SerializedCompletelyStaticPatrolCueCollider.polygon)
  
  ::shared::SerializableConvexPolygon* temp = polygon_;
  polygon_ = nullptr;
  return temp;
}
inline ::shared::SerializableConvexPolygon* SerializedCompletelyStaticPatrolCueCollider::mutable_polygon() {
  
  if (polygon_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SerializableConvexPolygon>(GetArenaNoVirtual());
    polygon_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SerializedCompletelyStaticPatrolCueCollider.polygon)
  return polygon_;
}
inline void SerializedCompletelyStaticPatrolCueCollider::set_allocated_polygon(::shared::SerializableConvexPolygon* polygon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete polygon_;
  }
  if (polygon) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      polygon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygon, submessage_arena);
    }
    
  } else {
    
  }
  polygon_ = polygon;
  // @@protoc_insertion_point(field_set_allocated:shared.SerializedCompletelyStaticPatrolCueCollider.polygon)
}

// -------------------------------------------------------------------

// SerializedCompletelyStaticTrapCollider

// .shared.TrapColliderAttr attr = 1;
inline bool SerializedCompletelyStaticTrapCollider::has_attr() const {
  return this != internal_default_instance() && attr_ != nullptr;
}
inline void SerializedCompletelyStaticTrapCollider::clear_attr() {
  if (GetArenaNoVirtual() == nullptr && attr_ != nullptr) {
    delete attr_;
  }
  attr_ = nullptr;
}
inline const ::shared::TrapColliderAttr& SerializedCompletelyStaticTrapCollider::attr() const {
  const ::shared::TrapColliderAttr* p = attr_;
  // @@protoc_insertion_point(field_get:shared.SerializedCompletelyStaticTrapCollider.attr)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::TrapColliderAttr*>(
      &::shared::_TrapColliderAttr_default_instance_);
}
inline ::shared::TrapColliderAttr* SerializedCompletelyStaticTrapCollider::release_attr() {
  // @@protoc_insertion_point(field_release:shared.SerializedCompletelyStaticTrapCollider.attr)
  
  ::shared::TrapColliderAttr* temp = attr_;
  attr_ = nullptr;
  return temp;
}
inline ::shared::TrapColliderAttr* SerializedCompletelyStaticTrapCollider::mutable_attr() {
  
  if (attr_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::TrapColliderAttr>(GetArenaNoVirtual());
    attr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SerializedCompletelyStaticTrapCollider.attr)
  return attr_;
}
inline void SerializedCompletelyStaticTrapCollider::set_allocated_attr(::shared::TrapColliderAttr* attr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attr_;
  }
  if (attr) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attr, submessage_arena);
    }
    
  } else {
    
  }
  attr_ = attr;
  // @@protoc_insertion_point(field_set_allocated:shared.SerializedCompletelyStaticTrapCollider.attr)
}

// .shared.SerializableConvexPolygon polygon = 2;
inline bool SerializedCompletelyStaticTrapCollider::has_polygon() const {
  return this != internal_default_instance() && polygon_ != nullptr;
}
inline void SerializedCompletelyStaticTrapCollider::clear_polygon() {
  if (GetArenaNoVirtual() == nullptr && polygon_ != nullptr) {
    delete polygon_;
  }
  polygon_ = nullptr;
}
inline const ::shared::SerializableConvexPolygon& SerializedCompletelyStaticTrapCollider::polygon() const {
  const ::shared::SerializableConvexPolygon* p = polygon_;
  // @@protoc_insertion_point(field_get:shared.SerializedCompletelyStaticTrapCollider.polygon)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SerializableConvexPolygon*>(
      &::shared::_SerializableConvexPolygon_default_instance_);
}
inline ::shared::SerializableConvexPolygon* SerializedCompletelyStaticTrapCollider::release_polygon() {
  // @@protoc_insertion_point(field_release:shared.SerializedCompletelyStaticTrapCollider.polygon)
  
  ::shared::SerializableConvexPolygon* temp = polygon_;
  polygon_ = nullptr;
  return temp;
}
inline ::shared::SerializableConvexPolygon* SerializedCompletelyStaticTrapCollider::mutable_polygon() {
  
  if (polygon_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SerializableConvexPolygon>(GetArenaNoVirtual());
    polygon_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SerializedCompletelyStaticTrapCollider.polygon)
  return polygon_;
}
inline void SerializedCompletelyStaticTrapCollider::set_allocated_polygon(::shared::SerializableConvexPolygon* polygon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete polygon_;
  }
  if (polygon) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      polygon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygon, submessage_arena);
    }
    
  } else {
    
  }
  polygon_ = polygon;
  // @@protoc_insertion_point(field_set_allocated:shared.SerializedCompletelyStaticTrapCollider.polygon)
}

// -------------------------------------------------------------------

// SerializedCompletelyStaticTriggerCollider

// .shared.TriggerColliderAttr attr = 1;
inline bool SerializedCompletelyStaticTriggerCollider::has_attr() const {
  return this != internal_default_instance() && attr_ != nullptr;
}
inline void SerializedCompletelyStaticTriggerCollider::clear_attr() {
  if (GetArenaNoVirtual() == nullptr && attr_ != nullptr) {
    delete attr_;
  }
  attr_ = nullptr;
}
inline const ::shared::TriggerColliderAttr& SerializedCompletelyStaticTriggerCollider::attr() const {
  const ::shared::TriggerColliderAttr* p = attr_;
  // @@protoc_insertion_point(field_get:shared.SerializedCompletelyStaticTriggerCollider.attr)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::TriggerColliderAttr*>(
      &::shared::_TriggerColliderAttr_default_instance_);
}
inline ::shared::TriggerColliderAttr* SerializedCompletelyStaticTriggerCollider::release_attr() {
  // @@protoc_insertion_point(field_release:shared.SerializedCompletelyStaticTriggerCollider.attr)
  
  ::shared::TriggerColliderAttr* temp = attr_;
  attr_ = nullptr;
  return temp;
}
inline ::shared::TriggerColliderAttr* SerializedCompletelyStaticTriggerCollider::mutable_attr() {
  
  if (attr_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::TriggerColliderAttr>(GetArenaNoVirtual());
    attr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SerializedCompletelyStaticTriggerCollider.attr)
  return attr_;
}
inline void SerializedCompletelyStaticTriggerCollider::set_allocated_attr(::shared::TriggerColliderAttr* attr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attr_;
  }
  if (attr) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attr, submessage_arena);
    }
    
  } else {
    
  }
  attr_ = attr;
  // @@protoc_insertion_point(field_set_allocated:shared.SerializedCompletelyStaticTriggerCollider.attr)
}

// .shared.SerializableConvexPolygon polygon = 2;
inline bool SerializedCompletelyStaticTriggerCollider::has_polygon() const {
  return this != internal_default_instance() && polygon_ != nullptr;
}
inline void SerializedCompletelyStaticTriggerCollider::clear_polygon() {
  if (GetArenaNoVirtual() == nullptr && polygon_ != nullptr) {
    delete polygon_;
  }
  polygon_ = nullptr;
}
inline const ::shared::SerializableConvexPolygon& SerializedCompletelyStaticTriggerCollider::polygon() const {
  const ::shared::SerializableConvexPolygon* p = polygon_;
  // @@protoc_insertion_point(field_get:shared.SerializedCompletelyStaticTriggerCollider.polygon)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::SerializableConvexPolygon*>(
      &::shared::_SerializableConvexPolygon_default_instance_);
}
inline ::shared::SerializableConvexPolygon* SerializedCompletelyStaticTriggerCollider::release_polygon() {
  // @@protoc_insertion_point(field_release:shared.SerializedCompletelyStaticTriggerCollider.polygon)
  
  ::shared::SerializableConvexPolygon* temp = polygon_;
  polygon_ = nullptr;
  return temp;
}
inline ::shared::SerializableConvexPolygon* SerializedCompletelyStaticTriggerCollider::mutable_polygon() {
  
  if (polygon_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::SerializableConvexPolygon>(GetArenaNoVirtual());
    polygon_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.SerializedCompletelyStaticTriggerCollider.polygon)
  return polygon_;
}
inline void SerializedCompletelyStaticTriggerCollider::set_allocated_polygon(::shared::SerializableConvexPolygon* polygon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete polygon_;
  }
  if (polygon) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      polygon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygon, submessage_arena);
    }
    
  } else {
    
  }
  polygon_ = polygon;
  // @@protoc_insertion_point(field_set_allocated:shared.SerializedCompletelyStaticTriggerCollider.polygon)
}

// -------------------------------------------------------------------

// TrapColliderAttrArray

// repeated .shared.TrapColliderAttr list = 1;
inline int TrapColliderAttrArray::list_size() const {
  return list_.size();
}
inline void TrapColliderAttrArray::clear_list() {
  list_.Clear();
}
inline ::shared::TrapColliderAttr* TrapColliderAttrArray::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:shared.TrapColliderAttrArray.list)
  return list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::TrapColliderAttr >*
TrapColliderAttrArray::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.TrapColliderAttrArray.list)
  return &list_;
}
inline const ::shared::TrapColliderAttr& TrapColliderAttrArray::list(int index) const {
  // @@protoc_insertion_point(field_get:shared.TrapColliderAttrArray.list)
  return list_.Get(index);
}
inline ::shared::TrapColliderAttr* TrapColliderAttrArray::add_list() {
  // @@protoc_insertion_point(field_add:shared.TrapColliderAttrArray.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::TrapColliderAttr >&
TrapColliderAttrArray::list() const {
  // @@protoc_insertion_point(field_list:shared.TrapColliderAttrArray.list)
  return list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SerializedTrapLocalIdToColliderAttrs

// map<int32, .shared.TrapColliderAttrArray> dict = 1;
inline int SerializedTrapLocalIdToColliderAttrs::dict_size() const {
  return dict_.size();
}
inline void SerializedTrapLocalIdToColliderAttrs::clear_dict() {
  dict_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TrapColliderAttrArray >&
SerializedTrapLocalIdToColliderAttrs::dict() const {
  // @@protoc_insertion_point(field_map:shared.SerializedTrapLocalIdToColliderAttrs.dict)
  return dict_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TrapColliderAttrArray >*
SerializedTrapLocalIdToColliderAttrs::mutable_dict() {
  // @@protoc_insertion_point(field_mutable_map:shared.SerializedTrapLocalIdToColliderAttrs.dict)
  return dict_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SerializedTriggerEditorIdToLocalId

// map<int32, int32> dict = 1;
inline int SerializedTriggerEditorIdToLocalId::dict_size() const {
  return dict_.size();
}
inline void SerializedTriggerEditorIdToLocalId::clear_dict() {
  dict_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >&
SerializedTriggerEditorIdToLocalId::dict() const {
  // @@protoc_insertion_point(field_map:shared.SerializedTriggerEditorIdToLocalId.dict)
  return dict_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >*
SerializedTriggerEditorIdToLocalId::mutable_dict() {
  // @@protoc_insertion_point(field_mutable_map:shared.SerializedTriggerEditorIdToLocalId.dict)
  return dict_.MutableMap();
}

// map<int32, .shared.TriggerConfigFromTiled> dict2 = 2;
inline int SerializedTriggerEditorIdToLocalId::dict2_size() const {
  return dict2_.size();
}
inline void SerializedTriggerEditorIdToLocalId::clear_dict2() {
  dict2_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TriggerConfigFromTiled >&
SerializedTriggerEditorIdToLocalId::dict2() const {
  // @@protoc_insertion_point(field_map:shared.SerializedTriggerEditorIdToLocalId.dict2)
  return dict2_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::shared::TriggerConfigFromTiled >*
SerializedTriggerEditorIdToLocalId::mutable_dict2() {
  // @@protoc_insertion_point(field_mutable_map:shared.SerializedTriggerEditorIdToLocalId.dict2)
  return dict2_.MutableMap();
}

// -------------------------------------------------------------------

// PickableConfigFromTiled

// int32 init_virtual_grid_x = 1;
inline void PickableConfigFromTiled::clear_init_virtual_grid_x() {
  init_virtual_grid_x_ = 0;
}
inline ::google::protobuf::int32 PickableConfigFromTiled::init_virtual_grid_x() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.init_virtual_grid_x)
  return init_virtual_grid_x_;
}
inline void PickableConfigFromTiled::set_init_virtual_grid_x(::google::protobuf::int32 value) {
  
  init_virtual_grid_x_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.init_virtual_grid_x)
}

// int32 init_virtual_grid_y = 2;
inline void PickableConfigFromTiled::clear_init_virtual_grid_y() {
  init_virtual_grid_y_ = 0;
}
inline ::google::protobuf::int32 PickableConfigFromTiled::init_virtual_grid_y() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.init_virtual_grid_y)
  return init_virtual_grid_y_;
}
inline void PickableConfigFromTiled::set_init_virtual_grid_y(::google::protobuf::int32 value) {
  
  init_virtual_grid_y_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.init_virtual_grid_y)
}

// bool takes_gravity = 3;
inline void PickableConfigFromTiled::clear_takes_gravity() {
  takes_gravity_ = false;
}
inline bool PickableConfigFromTiled::takes_gravity() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.takes_gravity)
  return takes_gravity_;
}
inline void PickableConfigFromTiled::set_takes_gravity(bool value) {
  
  takes_gravity_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.takes_gravity)
}

// int32 first_show_rdf_id = 4;
inline void PickableConfigFromTiled::clear_first_show_rdf_id() {
  first_show_rdf_id_ = 0;
}
inline ::google::protobuf::int32 PickableConfigFromTiled::first_show_rdf_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.first_show_rdf_id)
  return first_show_rdf_id_;
}
inline void PickableConfigFromTiled::set_first_show_rdf_id(::google::protobuf::int32 value) {
  
  first_show_rdf_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.first_show_rdf_id)
}

// int32 recur_quota = 5;
inline void PickableConfigFromTiled::clear_recur_quota() {
  recur_quota_ = 0;
}
inline ::google::protobuf::int32 PickableConfigFromTiled::recur_quota() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.recur_quota)
  return recur_quota_;
}
inline void PickableConfigFromTiled::set_recur_quota(::google::protobuf::int32 value) {
  
  recur_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.recur_quota)
}

// uint32 recur_interval_rdf_count = 6;
inline void PickableConfigFromTiled::clear_recur_interval_rdf_count() {
  recur_interval_rdf_count_ = 0u;
}
inline ::google::protobuf::uint32 PickableConfigFromTiled::recur_interval_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.recur_interval_rdf_count)
  return recur_interval_rdf_count_;
}
inline void PickableConfigFromTiled::set_recur_interval_rdf_count(::google::protobuf::uint32 value) {
  
  recur_interval_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.recur_interval_rdf_count)
}

// uint32 lifetime_rdf_count_per_occurrence = 7;
inline void PickableConfigFromTiled::clear_lifetime_rdf_count_per_occurrence() {
  lifetime_rdf_count_per_occurrence_ = 0u;
}
inline ::google::protobuf::uint32 PickableConfigFromTiled::lifetime_rdf_count_per_occurrence() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.lifetime_rdf_count_per_occurrence)
  return lifetime_rdf_count_per_occurrence_;
}
inline void PickableConfigFromTiled::set_lifetime_rdf_count_per_occurrence(::google::protobuf::uint32 value) {
  
  lifetime_rdf_count_per_occurrence_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.lifetime_rdf_count_per_occurrence)
}

// .shared.PickupType pickup_type = 8;
inline void PickableConfigFromTiled::clear_pickup_type() {
  pickup_type_ = 0;
}
inline ::shared::PickupType PickableConfigFromTiled::pickup_type() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.pickup_type)
  return static_cast< ::shared::PickupType >(pickup_type_);
}
inline void PickableConfigFromTiled::set_pickup_type(::shared::PickupType value) {
  
  pickup_type_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.pickup_type)
}

// uint32 stock_quota_per_occurrence = 9;
inline void PickableConfigFromTiled::clear_stock_quota_per_occurrence() {
  stock_quota_per_occurrence_ = 0u;
}
inline ::google::protobuf::uint32 PickableConfigFromTiled::stock_quota_per_occurrence() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.stock_quota_per_occurrence)
  return stock_quota_per_occurrence_;
}
inline void PickableConfigFromTiled::set_stock_quota_per_occurrence(::google::protobuf::uint32 value) {
  
  stock_quota_per_occurrence_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.stock_quota_per_occurrence)
}

// int32 subscription_id = 10;
inline void PickableConfigFromTiled::clear_subscription_id() {
  subscription_id_ = 0;
}
inline ::google::protobuf::int32 PickableConfigFromTiled::subscription_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.subscription_id)
  return subscription_id_;
}
inline void PickableConfigFromTiled::set_subscription_id(::google::protobuf::int32 value) {
  
  subscription_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.subscription_id)
}

// int32 vfx_species_id = 11;
inline void PickableConfigFromTiled::clear_vfx_species_id() {
  vfx_species_id_ = 0;
}
inline ::google::protobuf::int32 PickableConfigFromTiled::vfx_species_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.vfx_species_id)
  return vfx_species_id_;
}
inline void PickableConfigFromTiled::set_vfx_species_id(::google::protobuf::int32 value) {
  
  vfx_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.vfx_species_id)
}

// uint32 consumable_species_id = 1024;
inline void PickableConfigFromTiled::clear_consumable_species_id() {
  consumable_species_id_ = 0u;
}
inline ::google::protobuf::uint32 PickableConfigFromTiled::consumable_species_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.consumable_species_id)
  return consumable_species_id_;
}
inline void PickableConfigFromTiled::set_consumable_species_id(::google::protobuf::uint32 value) {
  
  consumable_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.consumable_species_id)
}

// uint32 buff_species_id = 1025;
inline void PickableConfigFromTiled::clear_buff_species_id() {
  buff_species_id_ = 0u;
}
inline ::google::protobuf::uint32 PickableConfigFromTiled::buff_species_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.buff_species_id)
  return buff_species_id_;
}
inline void PickableConfigFromTiled::set_buff_species_id(::google::protobuf::uint32 value) {
  
  buff_species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.buff_species_id)
}

// uint32 skill_id = 1026;
inline void PickableConfigFromTiled::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 PickableConfigFromTiled::skill_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableConfigFromTiled.skill_id)
  return skill_id_;
}
inline void PickableConfigFromTiled::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableConfigFromTiled.skill_id)
}

// -------------------------------------------------------------------

// Pickable

// int32 pickable_local_id = 1;
inline void Pickable::clear_pickable_local_id() {
  pickable_local_id_ = 0;
}
inline ::google::protobuf::int32 Pickable::pickable_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.pickable_local_id)
  return pickable_local_id_;
}
inline void Pickable::set_pickable_local_id(::google::protobuf::int32 value) {
  
  pickable_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.pickable_local_id)
}

// float x = 2;
inline void Pickable::clear_x() {
  x_ = 0;
}
inline float Pickable::x() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.x)
  return x_;
}
inline void Pickable::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.x)
}

// float y = 3;
inline void Pickable::clear_y() {
  y_ = 0;
}
inline float Pickable::y() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.y)
  return y_;
}
inline void Pickable::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.y)
}

// .shared.PickableConfigFromTiled config_from_tiled = 4;
inline bool Pickable::has_config_from_tiled() const {
  return this != internal_default_instance() && config_from_tiled_ != nullptr;
}
inline void Pickable::clear_config_from_tiled() {
  if (GetArenaNoVirtual() == nullptr && config_from_tiled_ != nullptr) {
    delete config_from_tiled_;
  }
  config_from_tiled_ = nullptr;
}
inline const ::shared::PickableConfigFromTiled& Pickable::config_from_tiled() const {
  const ::shared::PickableConfigFromTiled* p = config_from_tiled_;
  // @@protoc_insertion_point(field_get:shared.Pickable.config_from_tiled)
  return p != nullptr ? *p : *reinterpret_cast<const ::shared::PickableConfigFromTiled*>(
      &::shared::_PickableConfigFromTiled_default_instance_);
}
inline ::shared::PickableConfigFromTiled* Pickable::release_config_from_tiled() {
  // @@protoc_insertion_point(field_release:shared.Pickable.config_from_tiled)
  
  ::shared::PickableConfigFromTiled* temp = config_from_tiled_;
  config_from_tiled_ = nullptr;
  return temp;
}
inline ::shared::PickableConfigFromTiled* Pickable::mutable_config_from_tiled() {
  
  if (config_from_tiled_ == nullptr) {
    auto* p = CreateMaybeMessage<::shared::PickableConfigFromTiled>(GetArenaNoVirtual());
    config_from_tiled_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shared.Pickable.config_from_tiled)
  return config_from_tiled_;
}
inline void Pickable::set_allocated_config_from_tiled(::shared::PickableConfigFromTiled* config_from_tiled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete config_from_tiled_;
  }
  if (config_from_tiled) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config_from_tiled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_from_tiled, submessage_arena);
    }
    
  } else {
    
  }
  config_from_tiled_ = config_from_tiled;
  // @@protoc_insertion_point(field_set_allocated:shared.Pickable.config_from_tiled)
}

// int32 remaining_lifetime_rdf_count = 5;
inline void Pickable::clear_remaining_lifetime_rdf_count() {
  remaining_lifetime_rdf_count_ = 0;
}
inline ::google::protobuf::int32 Pickable::remaining_lifetime_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.remaining_lifetime_rdf_count)
  return remaining_lifetime_rdf_count_;
}
inline void Pickable::set_remaining_lifetime_rdf_count(::google::protobuf::int32 value) {
  
  remaining_lifetime_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.remaining_lifetime_rdf_count)
}

// int32 remaining_recur_quota = 6;
inline void Pickable::clear_remaining_recur_quota() {
  remaining_recur_quota_ = 0;
}
inline ::google::protobuf::int32 Pickable::remaining_recur_quota() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.remaining_recur_quota)
  return remaining_recur_quota_;
}
inline void Pickable::set_remaining_recur_quota(::google::protobuf::int32 value) {
  
  remaining_recur_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.remaining_recur_quota)
}

// float vel_x = 7;
inline void Pickable::clear_vel_x() {
  vel_x_ = 0;
}
inline float Pickable::vel_x() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.vel_x)
  return vel_x_;
}
inline void Pickable::set_vel_x(float value) {
  
  vel_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.vel_x)
}

// float vel_y = 8;
inline void Pickable::clear_vel_y() {
  vel_y_ = 0;
}
inline float Pickable::vel_y() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.vel_y)
  return vel_y_;
}
inline void Pickable::set_vel_y(float value) {
  
  vel_y_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.vel_y)
}

// .shared.PickableState pk_state = 9;
inline void Pickable::clear_pk_state() {
  pk_state_ = 0;
}
inline ::shared::PickableState Pickable::pk_state() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.pk_state)
  return static_cast< ::shared::PickableState >(pk_state_);
}
inline void Pickable::set_pk_state(::shared::PickableState value) {
  
  pk_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.pk_state)
}

// int32 frames_in_pk_state = 10;
inline void Pickable::clear_frames_in_pk_state() {
  frames_in_pk_state_ = 0;
}
inline ::google::protobuf::int32 Pickable::frames_in_pk_state() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.frames_in_pk_state)
  return frames_in_pk_state_;
}
inline void Pickable::set_frames_in_pk_state(::google::protobuf::int32 value) {
  
  frames_in_pk_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.frames_in_pk_state)
}

// int32 picked_by_join_index = 11;
inline void Pickable::clear_picked_by_join_index() {
  picked_by_join_index_ = 0;
}
inline ::google::protobuf::int32 Pickable::picked_by_join_index() const {
  // @@protoc_insertion_point(field_get:shared.Pickable.picked_by_join_index)
  return picked_by_join_index_;
}
inline void Pickable::set_picked_by_join_index(::google::protobuf::int32 value) {
  
  picked_by_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.Pickable.picked_by_join_index)
}

// -------------------------------------------------------------------

// InjectedCmdConfig

// int32 cutoff_rdf_frame_id = 1;
inline void InjectedCmdConfig::clear_cutoff_rdf_frame_id() {
  cutoff_rdf_frame_id_ = 0;
}
inline ::google::protobuf::int32 InjectedCmdConfig::cutoff_rdf_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.InjectedCmdConfig.cutoff_rdf_frame_id)
  return cutoff_rdf_frame_id_;
}
inline void InjectedCmdConfig::set_cutoff_rdf_frame_id(::google::protobuf::int32 value) {
  
  cutoff_rdf_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.InjectedCmdConfig.cutoff_rdf_frame_id)
}

// uint64 op = 2;
inline void InjectedCmdConfig::clear_op() {
  op_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 InjectedCmdConfig::op() const {
  // @@protoc_insertion_point(field_get:shared.InjectedCmdConfig.op)
  return op_;
}
inline void InjectedCmdConfig::set_op(::google::protobuf::uint64 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:shared.InjectedCmdConfig.op)
}

// -------------------------------------------------------------------

// CharacterSpawnerConfig

// int32 cutoff_rdf_frame_id = 1;
inline void CharacterSpawnerConfig::clear_cutoff_rdf_frame_id() {
  cutoff_rdf_frame_id_ = 0;
}
inline ::google::protobuf::int32 CharacterSpawnerConfig::cutoff_rdf_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.CharacterSpawnerConfig.cutoff_rdf_frame_id)
  return cutoff_rdf_frame_id_;
}
inline void CharacterSpawnerConfig::set_cutoff_rdf_frame_id(::google::protobuf::int32 value) {
  
  cutoff_rdf_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.CharacterSpawnerConfig.cutoff_rdf_frame_id)
}

// repeated uint32 species_id_list = 2;
inline int CharacterSpawnerConfig::species_id_list_size() const {
  return species_id_list_.size();
}
inline void CharacterSpawnerConfig::clear_species_id_list() {
  species_id_list_.Clear();
}
inline ::google::protobuf::uint32 CharacterSpawnerConfig::species_id_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterSpawnerConfig.species_id_list)
  return species_id_list_.Get(index);
}
inline void CharacterSpawnerConfig::set_species_id_list(int index, ::google::protobuf::uint32 value) {
  species_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.CharacterSpawnerConfig.species_id_list)
}
inline void CharacterSpawnerConfig::add_species_id_list(::google::protobuf::uint32 value) {
  species_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.CharacterSpawnerConfig.species_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CharacterSpawnerConfig::species_id_list() const {
  // @@protoc_insertion_point(field_list:shared.CharacterSpawnerConfig.species_id_list)
  return species_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CharacterSpawnerConfig::mutable_species_id_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterSpawnerConfig.species_id_list)
  return &species_id_list_;
}

// repeated uint64 init_op_list = 3;
inline int CharacterSpawnerConfig::init_op_list_size() const {
  return init_op_list_.size();
}
inline void CharacterSpawnerConfig::clear_init_op_list() {
  init_op_list_.Clear();
}
inline ::google::protobuf::uint64 CharacterSpawnerConfig::init_op_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.CharacterSpawnerConfig.init_op_list)
  return init_op_list_.Get(index);
}
inline void CharacterSpawnerConfig::set_init_op_list(int index, ::google::protobuf::uint64 value) {
  init_op_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.CharacterSpawnerConfig.init_op_list)
}
inline void CharacterSpawnerConfig::add_init_op_list(::google::protobuf::uint64 value) {
  init_op_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.CharacterSpawnerConfig.init_op_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CharacterSpawnerConfig::init_op_list() const {
  // @@protoc_insertion_point(field_list:shared.CharacterSpawnerConfig.init_op_list)
  return init_op_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CharacterSpawnerConfig::mutable_init_op_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.CharacterSpawnerConfig.init_op_list)
  return &init_op_list_;
}

// -------------------------------------------------------------------

// PickableSpawnerConfig

// int32 cutoff_rdf_frame_id = 1;
inline void PickableSpawnerConfig::clear_cutoff_rdf_frame_id() {
  cutoff_rdf_frame_id_ = 0;
}
inline ::google::protobuf::int32 PickableSpawnerConfig::cutoff_rdf_frame_id() const {
  // @@protoc_insertion_point(field_get:shared.PickableSpawnerConfig.cutoff_rdf_frame_id)
  return cutoff_rdf_frame_id_;
}
inline void PickableSpawnerConfig::set_cutoff_rdf_frame_id(::google::protobuf::int32 value) {
  
  cutoff_rdf_frame_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PickableSpawnerConfig.cutoff_rdf_frame_id)
}

// repeated uint32 species_id_list = 2;
inline int PickableSpawnerConfig::species_id_list_size() const {
  return species_id_list_.size();
}
inline void PickableSpawnerConfig::clear_species_id_list() {
  species_id_list_.Clear();
}
inline ::google::protobuf::uint32 PickableSpawnerConfig::species_id_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.PickableSpawnerConfig.species_id_list)
  return species_id_list_.Get(index);
}
inline void PickableSpawnerConfig::set_species_id_list(int index, ::google::protobuf::uint32 value) {
  species_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.PickableSpawnerConfig.species_id_list)
}
inline void PickableSpawnerConfig::add_species_id_list(::google::protobuf::uint32 value) {
  species_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.PickableSpawnerConfig.species_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PickableSpawnerConfig::species_id_list() const {
  // @@protoc_insertion_point(field_list:shared.PickableSpawnerConfig.species_id_list)
  return species_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PickableSpawnerConfig::mutable_species_id_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.PickableSpawnerConfig.species_id_list)
  return &species_id_list_;
}

// repeated uint64 init_op_list = 3;
inline int PickableSpawnerConfig::init_op_list_size() const {
  return init_op_list_.size();
}
inline void PickableSpawnerConfig::clear_init_op_list() {
  init_op_list_.Clear();
}
inline ::google::protobuf::uint64 PickableSpawnerConfig::init_op_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.PickableSpawnerConfig.init_op_list)
  return init_op_list_.Get(index);
}
inline void PickableSpawnerConfig::set_init_op_list(int index, ::google::protobuf::uint64 value) {
  init_op_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.PickableSpawnerConfig.init_op_list)
}
inline void PickableSpawnerConfig::add_init_op_list(::google::protobuf::uint64 value) {
  init_op_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.PickableSpawnerConfig.init_op_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PickableSpawnerConfig::init_op_list() const {
  // @@protoc_insertion_point(field_list:shared.PickableSpawnerConfig.init_op_list)
  return init_op_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PickableSpawnerConfig::mutable_init_op_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.PickableSpawnerConfig.init_op_list)
  return &init_op_list_;
}

// repeated .shared.PickupType pickup_type_list = 4;
inline int PickableSpawnerConfig::pickup_type_list_size() const {
  return pickup_type_list_.size();
}
inline void PickableSpawnerConfig::clear_pickup_type_list() {
  pickup_type_list_.Clear();
}
inline ::shared::PickupType PickableSpawnerConfig::pickup_type_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.PickableSpawnerConfig.pickup_type_list)
  return static_cast< ::shared::PickupType >(pickup_type_list_.Get(index));
}
inline void PickableSpawnerConfig::set_pickup_type_list(int index, ::shared::PickupType value) {
  pickup_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.PickableSpawnerConfig.pickup_type_list)
}
inline void PickableSpawnerConfig::add_pickup_type_list(::shared::PickupType value) {
  pickup_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.PickableSpawnerConfig.pickup_type_list)
}
inline const ::google::protobuf::RepeatedField<int>&
PickableSpawnerConfig::pickup_type_list() const {
  // @@protoc_insertion_point(field_list:shared.PickableSpawnerConfig.pickup_type_list)
  return pickup_type_list_;
}
inline ::google::protobuf::RepeatedField<int>*
PickableSpawnerConfig::mutable_pickup_type_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.PickableSpawnerConfig.pickup_type_list)
  return &pickup_type_list_;
}

// -------------------------------------------------------------------

// TriggerColliderAttr

// int32 trigger_local_id = 1;
inline void TriggerColliderAttr::clear_trigger_local_id() {
  trigger_local_id_ = 0;
}
inline ::google::protobuf::int32 TriggerColliderAttr::trigger_local_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerColliderAttr.trigger_local_id)
  return trigger_local_id_;
}
inline void TriggerColliderAttr::set_trigger_local_id(::google::protobuf::int32 value) {
  
  trigger_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerColliderAttr.trigger_local_id)
}

// int32 species_id = 2;
inline void TriggerColliderAttr::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 TriggerColliderAttr::species_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerColliderAttr.species_id)
  return species_id_;
}
inline void TriggerColliderAttr::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerColliderAttr.species_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TriggerConfigFromTiled

// int32 editor_id = 1;
inline void TriggerConfigFromTiled::clear_editor_id() {
  editor_id_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::editor_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.editor_id)
  return editor_id_;
}
inline void TriggerConfigFromTiled::set_editor_id(::google::protobuf::int32 value) {
  
  editor_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.editor_id)
}

// int32 species_id = 2;
inline void TriggerConfigFromTiled::clear_species_id() {
  species_id_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::species_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.species_id)
  return species_id_;
}
inline void TriggerConfigFromTiled::set_species_id(::google::protobuf::int32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.species_id)
}

// int32 delayed_frames = 3;
inline void TriggerConfigFromTiled::clear_delayed_frames() {
  delayed_frames_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::delayed_frames() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.delayed_frames)
  return delayed_frames_;
}
inline void TriggerConfigFromTiled::set_delayed_frames(::google::protobuf::int32 value) {
  
  delayed_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.delayed_frames)
}

// int32 recovery_frames = 4;
inline void TriggerConfigFromTiled::clear_recovery_frames() {
  recovery_frames_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::recovery_frames() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.recovery_frames)
  return recovery_frames_;
}
inline void TriggerConfigFromTiled::set_recovery_frames(::google::protobuf::int32 value) {
  
  recovery_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.recovery_frames)
}

// int32 bullet_team_id = 5;
inline void TriggerConfigFromTiled::clear_bullet_team_id() {
  bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.bullet_team_id)
  return bullet_team_id_;
}
inline void TriggerConfigFromTiled::set_bullet_team_id(::google::protobuf::int32 value) {
  
  bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.bullet_team_id)
}

// int32 sub_cycle_trigger_frames = 6;
inline void TriggerConfigFromTiled::clear_sub_cycle_trigger_frames() {
  sub_cycle_trigger_frames_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::sub_cycle_trigger_frames() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.sub_cycle_trigger_frames)
  return sub_cycle_trigger_frames_;
}
inline void TriggerConfigFromTiled::set_sub_cycle_trigger_frames(::google::protobuf::int32 value) {
  
  sub_cycle_trigger_frames_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.sub_cycle_trigger_frames)
}

// int32 sub_cycle_quota = 7;
inline void TriggerConfigFromTiled::clear_sub_cycle_quota() {
  sub_cycle_quota_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::sub_cycle_quota() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.sub_cycle_quota)
  return sub_cycle_quota_;
}
inline void TriggerConfigFromTiled::set_sub_cycle_quota(::google::protobuf::int32 value) {
  
  sub_cycle_quota_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.sub_cycle_quota)
}

// int32 quota_cap = 8;
inline void TriggerConfigFromTiled::clear_quota_cap() {
  quota_cap_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::quota_cap() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.quota_cap)
  return quota_cap_;
}
inline void TriggerConfigFromTiled::set_quota_cap(::google::protobuf::int32 value) {
  
  quota_cap_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.quota_cap)
}

// repeated int32 subscribes_to_id_list = 9;
inline int TriggerConfigFromTiled::subscribes_to_id_list_size() const {
  return subscribes_to_id_list_.size();
}
inline void TriggerConfigFromTiled::clear_subscribes_to_id_list() {
  subscribes_to_id_list_.Clear();
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::subscribes_to_id_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.subscribes_to_id_list)
  return subscribes_to_id_list_.Get(index);
}
inline void TriggerConfigFromTiled::set_subscribes_to_id_list(int index, ::google::protobuf::int32 value) {
  subscribes_to_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.subscribes_to_id_list)
}
inline void TriggerConfigFromTiled::add_subscribes_to_id_list(::google::protobuf::int32 value) {
  subscribes_to_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.TriggerConfigFromTiled.subscribes_to_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TriggerConfigFromTiled::subscribes_to_id_list() const {
  // @@protoc_insertion_point(field_list:shared.TriggerConfigFromTiled.subscribes_to_id_list)
  return subscribes_to_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TriggerConfigFromTiled::mutable_subscribes_to_id_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.TriggerConfigFromTiled.subscribes_to_id_list)
  return &subscribes_to_id_list_;
}

// repeated int32 subscribes_to_exhausted_id_list = 10;
inline int TriggerConfigFromTiled::subscribes_to_exhausted_id_list_size() const {
  return subscribes_to_exhausted_id_list_.size();
}
inline void TriggerConfigFromTiled::clear_subscribes_to_exhausted_id_list() {
  subscribes_to_exhausted_id_list_.Clear();
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::subscribes_to_exhausted_id_list(int index) const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.subscribes_to_exhausted_id_list)
  return subscribes_to_exhausted_id_list_.Get(index);
}
inline void TriggerConfigFromTiled::set_subscribes_to_exhausted_id_list(int index, ::google::protobuf::int32 value) {
  subscribes_to_exhausted_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.subscribes_to_exhausted_id_list)
}
inline void TriggerConfigFromTiled::add_subscribes_to_exhausted_id_list(::google::protobuf::int32 value) {
  subscribes_to_exhausted_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:shared.TriggerConfigFromTiled.subscribes_to_exhausted_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TriggerConfigFromTiled::subscribes_to_exhausted_id_list() const {
  // @@protoc_insertion_point(field_list:shared.TriggerConfigFromTiled.subscribes_to_exhausted_id_list)
  return subscribes_to_exhausted_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TriggerConfigFromTiled::mutable_subscribes_to_exhausted_id_list() {
  // @@protoc_insertion_point(field_mutable_list:shared.TriggerConfigFromTiled.subscribes_to_exhausted_id_list)
  return &subscribes_to_exhausted_id_list_;
}

// float new_revival_x = 11;
inline void TriggerConfigFromTiled::clear_new_revival_x() {
  new_revival_x_ = 0;
}
inline float TriggerConfigFromTiled::new_revival_x() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.new_revival_x)
  return new_revival_x_;
}
inline void TriggerConfigFromTiled::set_new_revival_x(float value) {
  
  new_revival_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.new_revival_x)
}

// float new_revival_y = 12;
inline void TriggerConfigFromTiled::clear_new_revival_y() {
  new_revival_y_ = 0;
}
inline float TriggerConfigFromTiled::new_revival_y() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.new_revival_y)
  return new_revival_y_;
}
inline void TriggerConfigFromTiled::set_new_revival_y(float value) {
  
  new_revival_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.new_revival_y)
}

// int32 init_dir_x = 13;
inline void TriggerConfigFromTiled::clear_init_dir_x() {
  init_dir_x_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::init_dir_x() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.init_dir_x)
  return init_dir_x_;
}
inline void TriggerConfigFromTiled::set_init_dir_x(::google::protobuf::int32 value) {
  
  init_dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.init_dir_x)
}

// int32 init_dir_y = 14;
inline void TriggerConfigFromTiled::clear_init_dir_y() {
  init_dir_y_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::init_dir_y() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.init_dir_y)
  return init_dir_y_;
}
inline void TriggerConfigFromTiled::set_init_dir_y(::google::protobuf::int32 value) {
  
  init_dir_y_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.init_dir_y)
}

// uint64 publishing_evt_mask_upon_exhausted = 15;
inline void TriggerConfigFromTiled::clear_publishing_evt_mask_upon_exhausted() {
  publishing_evt_mask_upon_exhausted_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TriggerConfigFromTiled::publishing_evt_mask_upon_exhausted() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.publishing_evt_mask_upon_exhausted)
  return publishing_evt_mask_upon_exhausted_;
}
inline void TriggerConfigFromTiled::set_publishing_evt_mask_upon_exhausted(::google::protobuf::uint64 value) {
  
  publishing_evt_mask_upon_exhausted_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.publishing_evt_mask_upon_exhausted)
}

// repeated .shared.CharacterSpawnerConfig character_spawner_time_seq = 16;
inline int TriggerConfigFromTiled::character_spawner_time_seq_size() const {
  return character_spawner_time_seq_.size();
}
inline void TriggerConfigFromTiled::clear_character_spawner_time_seq() {
  character_spawner_time_seq_.Clear();
}
inline ::shared::CharacterSpawnerConfig* TriggerConfigFromTiled::mutable_character_spawner_time_seq(int index) {
  // @@protoc_insertion_point(field_mutable:shared.TriggerConfigFromTiled.character_spawner_time_seq)
  return character_spawner_time_seq_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::CharacterSpawnerConfig >*
TriggerConfigFromTiled::mutable_character_spawner_time_seq() {
  // @@protoc_insertion_point(field_mutable_list:shared.TriggerConfigFromTiled.character_spawner_time_seq)
  return &character_spawner_time_seq_;
}
inline const ::shared::CharacterSpawnerConfig& TriggerConfigFromTiled::character_spawner_time_seq(int index) const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.character_spawner_time_seq)
  return character_spawner_time_seq_.Get(index);
}
inline ::shared::CharacterSpawnerConfig* TriggerConfigFromTiled::add_character_spawner_time_seq() {
  // @@protoc_insertion_point(field_add:shared.TriggerConfigFromTiled.character_spawner_time_seq)
  return character_spawner_time_seq_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::CharacterSpawnerConfig >&
TriggerConfigFromTiled::character_spawner_time_seq() const {
  // @@protoc_insertion_point(field_list:shared.TriggerConfigFromTiled.character_spawner_time_seq)
  return character_spawner_time_seq_;
}

// repeated .shared.PickableSpawnerConfig pickable_spawner_time_seq = 17;
inline int TriggerConfigFromTiled::pickable_spawner_time_seq_size() const {
  return pickable_spawner_time_seq_.size();
}
inline void TriggerConfigFromTiled::clear_pickable_spawner_time_seq() {
  pickable_spawner_time_seq_.Clear();
}
inline ::shared::PickableSpawnerConfig* TriggerConfigFromTiled::mutable_pickable_spawner_time_seq(int index) {
  // @@protoc_insertion_point(field_mutable:shared.TriggerConfigFromTiled.pickable_spawner_time_seq)
  return pickable_spawner_time_seq_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::shared::PickableSpawnerConfig >*
TriggerConfigFromTiled::mutable_pickable_spawner_time_seq() {
  // @@protoc_insertion_point(field_mutable_list:shared.TriggerConfigFromTiled.pickable_spawner_time_seq)
  return &pickable_spawner_time_seq_;
}
inline const ::shared::PickableSpawnerConfig& TriggerConfigFromTiled::pickable_spawner_time_seq(int index) const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.pickable_spawner_time_seq)
  return pickable_spawner_time_seq_.Get(index);
}
inline ::shared::PickableSpawnerConfig* TriggerConfigFromTiled::add_pickable_spawner_time_seq() {
  // @@protoc_insertion_point(field_add:shared.TriggerConfigFromTiled.pickable_spawner_time_seq)
  return pickable_spawner_time_seq_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::shared::PickableSpawnerConfig >&
TriggerConfigFromTiled::pickable_spawner_time_seq() const {
  // @@protoc_insertion_point(field_list:shared.TriggerConfigFromTiled.pickable_spawner_time_seq)
  return pickable_spawner_time_seq_;
}

// int32 force_ctrl_rdf_count = 18;
inline void TriggerConfigFromTiled::clear_force_ctrl_rdf_count() {
  force_ctrl_rdf_count_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::force_ctrl_rdf_count() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.force_ctrl_rdf_count)
  return force_ctrl_rdf_count_;
}
inline void TriggerConfigFromTiled::set_force_ctrl_rdf_count(::google::protobuf::int32 value) {
  
  force_ctrl_rdf_count_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.force_ctrl_rdf_count)
}

// uint64 force_ctrl_cmd = 19;
inline void TriggerConfigFromTiled::clear_force_ctrl_cmd() {
  force_ctrl_cmd_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TriggerConfigFromTiled::force_ctrl_cmd() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.force_ctrl_cmd)
  return force_ctrl_cmd_;
}
inline void TriggerConfigFromTiled::set_force_ctrl_cmd(::google::protobuf::uint64 value) {
  
  force_ctrl_cmd_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.force_ctrl_cmd)
}

// bool reload_colliders_in_new_phase = 20;
inline void TriggerConfigFromTiled::clear_reload_colliders_in_new_phase() {
  reload_colliders_in_new_phase_ = false;
}
inline bool TriggerConfigFromTiled::reload_colliders_in_new_phase() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.reload_colliders_in_new_phase)
  return reload_colliders_in_new_phase_;
}
inline void TriggerConfigFromTiled::set_reload_colliders_in_new_phase(bool value) {
  
  reload_colliders_in_new_phase_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.reload_colliders_in_new_phase)
}

// int32 story_point_id = 1024;
inline void TriggerConfigFromTiled::clear_story_point_id() {
  story_point_id_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::story_point_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.story_point_id)
  return story_point_id_;
}
inline void TriggerConfigFromTiled::set_story_point_id(::google::protobuf::int32 value) {
  
  story_point_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.story_point_id)
}

// int32 bgm_id = 1025;
inline void TriggerConfigFromTiled::clear_bgm_id() {
  bgm_id_ = 0;
}
inline ::google::protobuf::int32 TriggerConfigFromTiled::bgm_id() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.bgm_id)
  return bgm_id_;
}
inline void TriggerConfigFromTiled::set_bgm_id(::google::protobuf::int32 value) {
  
  bgm_id_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.bgm_id)
}

// map<uint32, bool> boss_species_set = 1026;
inline int TriggerConfigFromTiled::boss_species_set_size() const {
  return boss_species_set_.size();
}
inline void TriggerConfigFromTiled::clear_boss_species_set() {
  boss_species_set_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, bool >&
TriggerConfigFromTiled::boss_species_set() const {
  // @@protoc_insertion_point(field_map:shared.TriggerConfigFromTiled.boss_species_set)
  return boss_species_set_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, bool >*
TriggerConfigFromTiled::mutable_boss_species_set() {
  // @@protoc_insertion_point(field_mutable_map:shared.TriggerConfigFromTiled.boss_species_set)
  return boss_species_set_.MutableMap();
}

// bool is_boss_savepoint = 1027;
inline void TriggerConfigFromTiled::clear_is_boss_savepoint() {
  is_boss_savepoint_ = false;
}
inline bool TriggerConfigFromTiled::is_boss_savepoint() const {
  // @@protoc_insertion_point(field_get:shared.TriggerConfigFromTiled.is_boss_savepoint)
  return is_boss_savepoint_;
}
inline void TriggerConfigFromTiled::set_is_boss_savepoint(bool value) {
  
  is_boss_savepoint_ = value;
  // @@protoc_insertion_point(field_set:shared.TriggerConfigFromTiled.is_boss_savepoint)
}

// -------------------------------------------------------------------

// Trigger

// int32 editor_id = 1;
inline void Trigger::clear_editor_id() {
  editor_id_ = 0;
}
inline ::google::protobuf::int32 Trigger::editor_id() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.editor_id)
  return editor_id_;
}
inline void Trigger::set_editor_id(::google::protobuf::int32 value) {
  
  editor_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.editor_id)
}

// int32 trigger_local_id = 2;
inline void Trigger::clear_trigger_local_id() {
  trigger_local_id_ = 0;
}
inline ::google::protobuf::int32 Trigger::trigger_local_id() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.trigger_local_id)
  return trigger_local_id_;
}
inline void Trigger::set_trigger_local_id(::google::protobuf::int32 value) {
  
  trigger_local_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.trigger_local_id)
}

// int32 frames_to_fire = 3;
inline void Trigger::clear_frames_to_fire() {
  frames_to_fire_ = 0;
}
inline ::google::protobuf::int32 Trigger::frames_to_fire() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.frames_to_fire)
  return frames_to_fire_;
}
inline void Trigger::set_frames_to_fire(::google::protobuf::int32 value) {
  
  frames_to_fire_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.frames_to_fire)
}

// int32 frames_to_recover = 4;
inline void Trigger::clear_frames_to_recover() {
  frames_to_recover_ = 0;
}
inline ::google::protobuf::int32 Trigger::frames_to_recover() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.frames_to_recover)
  return frames_to_recover_;
}
inline void Trigger::set_frames_to_recover(::google::protobuf::int32 value) {
  
  frames_to_recover_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.frames_to_recover)
}

// int32 quota = 5;
inline void Trigger::clear_quota() {
  quota_ = 0;
}
inline ::google::protobuf::int32 Trigger::quota() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.quota)
  return quota_;
}
inline void Trigger::set_quota(::google::protobuf::int32 value) {
  
  quota_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.quota)
}

// int32 bullet_team_id = 6;
inline void Trigger::clear_bullet_team_id() {
  bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 Trigger::bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.bullet_team_id)
  return bullet_team_id_;
}
inline void Trigger::set_bullet_team_id(::google::protobuf::int32 value) {
  
  bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.bullet_team_id)
}

// int32 dir_x = 7;
inline void Trigger::clear_dir_x() {
  dir_x_ = 0;
}
inline ::google::protobuf::int32 Trigger::dir_x() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.dir_x)
  return dir_x_;
}
inline void Trigger::set_dir_x(::google::protobuf::int32 value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.dir_x)
}

// int32 sub_cycle_quota_left = 9;
inline void Trigger::clear_sub_cycle_quota_left() {
  sub_cycle_quota_left_ = 0;
}
inline ::google::protobuf::int32 Trigger::sub_cycle_quota_left() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.sub_cycle_quota_left)
  return sub_cycle_quota_left_;
}
inline void Trigger::set_sub_cycle_quota_left(::google::protobuf::int32 value) {
  
  sub_cycle_quota_left_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.sub_cycle_quota_left)
}

// .shared.TriggerState state = 10;
inline void Trigger::clear_state() {
  state_ = 0;
}
inline ::shared::TriggerState Trigger::state() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.state)
  return static_cast< ::shared::TriggerState >(state_);
}
inline void Trigger::set_state(::shared::TriggerState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.state)
}

// int32 frames_in_state = 11;
inline void Trigger::clear_frames_in_state() {
  frames_in_state_ = 0;
}
inline ::google::protobuf::int32 Trigger::frames_in_state() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.frames_in_state)
  return frames_in_state_;
}
inline void Trigger::set_frames_in_state(::google::protobuf::int32 value) {
  
  frames_in_state_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.frames_in_state)
}

// float x = 12;
inline void Trigger::clear_x() {
  x_ = 0;
}
inline float Trigger::x() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.x)
  return x_;
}
inline void Trigger::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.x)
}

// float y = 13;
inline void Trigger::clear_y() {
  y_ = 0;
}
inline float Trigger::y() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.y)
  return y_;
}
inline void Trigger::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.y)
}

// uint64 demanded_evt_mask = 14;
inline void Trigger::clear_demanded_evt_mask() {
  demanded_evt_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Trigger::demanded_evt_mask() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.demanded_evt_mask)
  return demanded_evt_mask_;
}
inline void Trigger::set_demanded_evt_mask(::google::protobuf::uint64 value) {
  
  demanded_evt_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.demanded_evt_mask)
}

// uint64 fulfilled_evt_mask = 15;
inline void Trigger::clear_fulfilled_evt_mask() {
  fulfilled_evt_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Trigger::fulfilled_evt_mask() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.fulfilled_evt_mask)
  return fulfilled_evt_mask_;
}
inline void Trigger::set_fulfilled_evt_mask(::google::protobuf::uint64 value) {
  
  fulfilled_evt_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.fulfilled_evt_mask)
}

// uint64 wave_npc_killed_evt_mask_counter = 16;
inline void Trigger::clear_wave_npc_killed_evt_mask_counter() {
  wave_npc_killed_evt_mask_counter_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Trigger::wave_npc_killed_evt_mask_counter() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.wave_npc_killed_evt_mask_counter)
  return wave_npc_killed_evt_mask_counter_;
}
inline void Trigger::set_wave_npc_killed_evt_mask_counter(::google::protobuf::uint64 value) {
  
  wave_npc_killed_evt_mask_counter_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.wave_npc_killed_evt_mask_counter)
}

// uint64 subscriber_local_ids_mask = 17;
inline void Trigger::clear_subscriber_local_ids_mask() {
  subscriber_local_ids_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Trigger::subscriber_local_ids_mask() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.subscriber_local_ids_mask)
  return subscriber_local_ids_mask_;
}
inline void Trigger::set_subscriber_local_ids_mask(::google::protobuf::uint64 value) {
  
  subscriber_local_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.subscriber_local_ids_mask)
}

// uint64 exhaust_subscriber_local_ids_mask = 18;
inline void Trigger::clear_exhaust_subscriber_local_ids_mask() {
  exhaust_subscriber_local_ids_mask_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Trigger::exhaust_subscriber_local_ids_mask() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.exhaust_subscriber_local_ids_mask)
  return exhaust_subscriber_local_ids_mask_;
}
inline void Trigger::set_exhaust_subscriber_local_ids_mask(::google::protobuf::uint64 value) {
  
  exhaust_subscriber_local_ids_mask_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.exhaust_subscriber_local_ids_mask)
}

// int32 offender_join_index = 19;
inline void Trigger::clear_offender_join_index() {
  offender_join_index_ = 0;
}
inline ::google::protobuf::int32 Trigger::offender_join_index() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.offender_join_index)
  return offender_join_index_;
}
inline void Trigger::set_offender_join_index(::google::protobuf::int32 value) {
  
  offender_join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.offender_join_index)
}

// int32 offender_bullet_team_id = 20;
inline void Trigger::clear_offender_bullet_team_id() {
  offender_bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 Trigger::offender_bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.Trigger.offender_bullet_team_id)
  return offender_bullet_team_id_;
}
inline void Trigger::set_offender_bullet_team_id(::google::protobuf::int32 value) {
  
  offender_bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.Trigger.offender_bullet_team_id)
}

// -------------------------------------------------------------------

// PlayerMetaInfo

// string player_id = 1;
inline void PlayerMetaInfo::clear_player_id() {
  player_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerMetaInfo::player_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerMetaInfo.player_id)
  return player_id_.GetNoArena();
}
inline void PlayerMetaInfo::set_player_id(const ::std::string& value) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.PlayerMetaInfo.player_id)
}
#if LANG_CXX11
inline void PlayerMetaInfo::set_player_id(::std::string&& value) {
  
  player_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.PlayerMetaInfo.player_id)
}
#endif
inline void PlayerMetaInfo::set_player_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.PlayerMetaInfo.player_id)
}
inline void PlayerMetaInfo::set_player_id(const char* value, size_t size) {
  
  player_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.PlayerMetaInfo.player_id)
}
inline ::std::string* PlayerMetaInfo::mutable_player_id() {
  
  // @@protoc_insertion_point(field_mutable:shared.PlayerMetaInfo.player_id)
  return player_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerMetaInfo::release_player_id() {
  // @@protoc_insertion_point(field_release:shared.PlayerMetaInfo.player_id)
  
  return player_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerMetaInfo::set_allocated_player_id(::std::string* player_id) {
  if (player_id != nullptr) {
    
  } else {
    
  }
  player_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_id);
  // @@protoc_insertion_point(field_set_allocated:shared.PlayerMetaInfo.player_id)
}

// int32 join_index = 2;
inline void PlayerMetaInfo::clear_join_index() {
  join_index_ = 0;
}
inline ::google::protobuf::int32 PlayerMetaInfo::join_index() const {
  // @@protoc_insertion_point(field_get:shared.PlayerMetaInfo.join_index)
  return join_index_;
}
inline void PlayerMetaInfo::set_join_index(::google::protobuf::int32 value) {
  
  join_index_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerMetaInfo.join_index)
}

// int32 bullet_team_id = 3;
inline void PlayerMetaInfo::clear_bullet_team_id() {
  bullet_team_id_ = 0;
}
inline ::google::protobuf::int32 PlayerMetaInfo::bullet_team_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerMetaInfo.bullet_team_id)
  return bullet_team_id_;
}
inline void PlayerMetaInfo::set_bullet_team_id(::google::protobuf::int32 value) {
  
  bullet_team_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerMetaInfo.bullet_team_id)
}

// uint32 species_id = 4;
inline void PlayerMetaInfo::clear_species_id() {
  species_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMetaInfo::species_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerMetaInfo.species_id)
  return species_id_;
}
inline void PlayerMetaInfo::set_species_id(::google::protobuf::uint32 value) {
  
  species_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerMetaInfo.species_id)
}

// int32 room_id = 5;
inline void PlayerMetaInfo::clear_room_id() {
  room_id_ = 0;
}
inline ::google::protobuf::int32 PlayerMetaInfo::room_id() const {
  // @@protoc_insertion_point(field_get:shared.PlayerMetaInfo.room_id)
  return room_id_;
}
inline void PlayerMetaInfo::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:shared.PlayerMetaInfo.room_id)
}

// -------------------------------------------------------------------

// RpcEndpointHolder

// uint32 id = 1;
inline void RpcEndpointHolder::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 RpcEndpointHolder::id() const {
  // @@protoc_insertion_point(field_get:shared.RpcEndpointHolder.id)
  return id_;
}
inline void RpcEndpointHolder::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:shared.RpcEndpointHolder.id)
}

// string external_addr_host = 2;
inline void RpcEndpointHolder::clear_external_addr_host() {
  external_addr_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcEndpointHolder::external_addr_host() const {
  // @@protoc_insertion_point(field_get:shared.RpcEndpointHolder.external_addr_host)
  return external_addr_host_.GetNoArena();
}
inline void RpcEndpointHolder::set_external_addr_host(const ::std::string& value) {
  
  external_addr_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.RpcEndpointHolder.external_addr_host)
}
#if LANG_CXX11
inline void RpcEndpointHolder::set_external_addr_host(::std::string&& value) {
  
  external_addr_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.RpcEndpointHolder.external_addr_host)
}
#endif
inline void RpcEndpointHolder::set_external_addr_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  external_addr_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.RpcEndpointHolder.external_addr_host)
}
inline void RpcEndpointHolder::set_external_addr_host(const char* value, size_t size) {
  
  external_addr_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.RpcEndpointHolder.external_addr_host)
}
inline ::std::string* RpcEndpointHolder::mutable_external_addr_host() {
  
  // @@protoc_insertion_point(field_mutable:shared.RpcEndpointHolder.external_addr_host)
  return external_addr_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcEndpointHolder::release_external_addr_host() {
  // @@protoc_insertion_point(field_release:shared.RpcEndpointHolder.external_addr_host)
  
  return external_addr_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcEndpointHolder::set_allocated_external_addr_host(::std::string* external_addr_host) {
  if (external_addr_host != nullptr) {
    
  } else {
    
  }
  external_addr_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), external_addr_host);
  // @@protoc_insertion_point(field_set_allocated:shared.RpcEndpointHolder.external_addr_host)
}

// uint32 external_addr_port = 3;
inline void RpcEndpointHolder::clear_external_addr_port() {
  external_addr_port_ = 0u;
}
inline ::google::protobuf::uint32 RpcEndpointHolder::external_addr_port() const {
  // @@protoc_insertion_point(field_get:shared.RpcEndpointHolder.external_addr_port)
  return external_addr_port_;
}
inline void RpcEndpointHolder::set_external_addr_port(::google::protobuf::uint32 value) {
  
  external_addr_port_ = value;
  // @@protoc_insertion_point(field_set:shared.RpcEndpointHolder.external_addr_port)
}

// string internal_addr_host = 4;
inline void RpcEndpointHolder::clear_internal_addr_host() {
  internal_addr_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RpcEndpointHolder::internal_addr_host() const {
  // @@protoc_insertion_point(field_get:shared.RpcEndpointHolder.internal_addr_host)
  return internal_addr_host_.GetNoArena();
}
inline void RpcEndpointHolder::set_internal_addr_host(const ::std::string& value) {
  
  internal_addr_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shared.RpcEndpointHolder.internal_addr_host)
}
#if LANG_CXX11
inline void RpcEndpointHolder::set_internal_addr_host(::std::string&& value) {
  
  internal_addr_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shared.RpcEndpointHolder.internal_addr_host)
}
#endif
inline void RpcEndpointHolder::set_internal_addr_host(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  internal_addr_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shared.RpcEndpointHolder.internal_addr_host)
}
inline void RpcEndpointHolder::set_internal_addr_host(const char* value, size_t size) {
  
  internal_addr_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shared.RpcEndpointHolder.internal_addr_host)
}
inline ::std::string* RpcEndpointHolder::mutable_internal_addr_host() {
  
  // @@protoc_insertion_point(field_mutable:shared.RpcEndpointHolder.internal_addr_host)
  return internal_addr_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcEndpointHolder::release_internal_addr_host() {
  // @@protoc_insertion_point(field_release:shared.RpcEndpointHolder.internal_addr_host)
  
  return internal_addr_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcEndpointHolder::set_allocated_internal_addr_host(::std::string* internal_addr_host) {
  if (internal_addr_host != nullptr) {
    
  } else {
    
  }
  internal_addr_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_addr_host);
  // @@protoc_insertion_point(field_set_allocated:shared.RpcEndpointHolder.internal_addr_host)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace shared

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::shared::BoxInterpolationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::BoxInterpolationType>() {
  return ::shared::BoxInterpolationType_descriptor();
}
template <> struct is_proto_enum< ::shared::IfaceCat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::IfaceCat>() {
  return ::shared::IfaceCat_descriptor();
}
template <> struct is_proto_enum< ::shared::BulletState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::BulletState>() {
  return ::shared::BulletState_descriptor();
}
template <> struct is_proto_enum< ::shared::CharacterState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::CharacterState>() {
  return ::shared::CharacterState_descriptor();
}
template <> struct is_proto_enum< ::shared::NpcGoal> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::NpcGoal>() {
  return ::shared::NpcGoal_descriptor();
}
template <> struct is_proto_enum< ::shared::TrapState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::TrapState>() {
  return ::shared::TrapState_descriptor();
}
template <> struct is_proto_enum< ::shared::TriggerState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::TriggerState>() {
  return ::shared::TriggerState_descriptor();
}
template <> struct is_proto_enum< ::shared::PickableState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::PickableState>() {
  return ::shared::PickableState_descriptor();
}
template <> struct is_proto_enum< ::shared::BulletType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::BulletType>() {
  return ::shared::BulletType_descriptor();
}
template <> struct is_proto_enum< ::shared::MultiHitType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::MultiHitType>() {
  return ::shared::MultiHitType_descriptor();
}
template <> struct is_proto_enum< ::shared::SkillTriggerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::SkillTriggerType>() {
  return ::shared::SkillTriggerType_descriptor();
}
template <> struct is_proto_enum< ::shared::VfxDurationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::VfxDurationType>() {
  return ::shared::VfxDurationType_descriptor();
}
template <> struct is_proto_enum< ::shared::VfxMotionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::VfxMotionType>() {
  return ::shared::VfxMotionType_descriptor();
}
template <> struct is_proto_enum< ::shared::TriggerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::TriggerType>() {
  return ::shared::TriggerType_descriptor();
}
template <> struct is_proto_enum< ::shared::BuffStockType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::BuffStockType>() {
  return ::shared::BuffStockType_descriptor();
}
template <> struct is_proto_enum< ::shared::DebuffType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::DebuffType>() {
  return ::shared::DebuffType_descriptor();
}
template <> struct is_proto_enum< ::shared::ConsumableType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::ConsumableType>() {
  return ::shared::ConsumableType_descriptor();
}
template <> struct is_proto_enum< ::shared::InventorySlotStockType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::InventorySlotStockType>() {
  return ::shared::InventorySlotStockType_descriptor();
}
template <> struct is_proto_enum< ::shared::PlayerStoryModeSelectView> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::PlayerStoryModeSelectView>() {
  return ::shared::PlayerStoryModeSelectView_descriptor();
}
template <> struct is_proto_enum< ::shared::FinishedLvOption> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::FinishedLvOption>() {
  return ::shared::FinishedLvOption_descriptor();
}
template <> struct is_proto_enum< ::shared::PickupType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::shared::PickupType>() {
  return ::shared::PickupType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_serializable_5fdata_2eproto
